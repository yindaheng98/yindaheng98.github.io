(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{506:function(t,n,s){t.exports=s.p+"assets/img/OfferAnswer.24e6b4ae.png"},507:function(t,n,s){t.exports=s.p+"assets/img/ICE.8c97711d.png"},775:function(t,n,s){"use strict";s.r(n);var e=s(4),a=Object(e.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[e("img",{attrs:{src:s(506),alt:""}})]),t._v(" "),e("p",[t._v("前面几篇文章已经总结了很多关于WebRTC数据传输方面的操作过程了，现在是时候解析一下最后一块拼图了：WebRTC通过ICE建立连接的过程。")]),t._v(" "),e("p",[t._v("只需要下面一张图即可理解：")]),t._v(" "),e("p",[e("img",{attrs:{src:s(507),alt:""}})]),t._v(" "),e("ol",[e("li",[t._v("首先，虽然WebRTC的通信主要是通过P2P连接进行的，然而P2P连接建立之前，位于NAT后面的通信双方是找不到对方的，所以还是需要一个有公网IP的中心服务器，转发双方的连接信息。在WebRTC里，信令服务器就是承担的这个功能，所以在连接建立的开始，通信双方都要先连上信令服务器")]),t._v(" "),e("li",[t._v("准备好音视频流的相关参数：通信双方先配置好各自的音视频流（支持的输入流格式、编码器输出流的格式、码率等）")]),t._v(" "),e("li",[t._v("交换音视频流的相关参数（Offer/Answer）："),e("strong",[t._v("注意下面写的发送SDP的方式是自己定的，WebRTC里没有具体规定，只要能传到对面就行")]),t._v(" "),e("ol",[e("li",[t._v("发起连接的一方调用PeerConnection的"),e("code",[t._v("CreateOffer")]),t._v("方法创建一个用于Offer的SDP对象，SDP对象中保存当前音视频流的相关参数，通过PeerConnection的"),e("code",[t._v("SetLocalDescription")]),t._v("的方法保存该SDP对象")]),t._v(" "),e("li",[t._v("将用于Offer的SDP对象发给对面")]),t._v(" "),e("li",[t._v("对面接收到用于Offer的SDP后，通过PeerConnection的"),e("code",[t._v("SetRemoteDescription")]),t._v("方法将其保存起来")]),t._v(" "),e("li",[t._v("对面调用PeerConnection的"),e("code",[t._v("CreateAnswer")]),t._v("方法创建一个用于Answer的SDP对象，也通过PeerConnection的"),e("code",[t._v("SetLocalDescription")]),t._v("的方法保存该SDP对象")]),t._v(" "),e("li",[t._v("将用于Answer的SDP对象发回发起连接的一方")]),t._v(" "),e("li",[t._v("发起连接的一方接收到用于Answer的SDP后，也通过PeerConnection的"),e("code",[t._v("SetRemoteDescription")]),t._v("方法将其保存起来")]),t._v(" "),e("li",[t._v("至此，通信双方都通过"),e("code",[t._v("SetLocalDescription")]),t._v("保存了自己的音视频流参数、通过"),e("code",[t._v("SetRemoteDescription")]),t._v("保存了对方的音视频流参数")])])]),t._v(" "),e("li",[t._v("获取连接信息：获取本地的IP地址、在STUN服务器处获取到自己的公网地址和端口号等信息")]),t._v(" "),e("li",[t._v("交换连接信息（ICECandidate）："),e("strong",[t._v("发送连接信息的方式也是自己定的")]),t._v("。当连接信息获取好时，将会调用PeerConnection的"),e("code",[t._v("OnICECandidate")]),t._v("所指定的函数，你需要在这个函数里实现下面的功能\n"),e("ol",[e("li",[t._v("发起连接的一方将ICECandidate发给对面")]),t._v(" "),e("li",[t._v("对面收到ICECandidate，通过PeerConnection的"),e("code",[t._v("AddIceCandidate")]),t._v("方法保存")]),t._v(" "),e("li",[t._v("对面回复自己的ICECandidate")]),t._v(" "),e("li",[t._v("发起连接的一方收到ICECandidate，也通过PeerConnection的"),e("code",[t._v("AddIceCandidate")]),t._v("方法保存")]),t._v(" "),e("li",[t._v("至此，通信双方都通过"),e("code",[t._v("AddIceCandidate")]),t._v("保存了对方的连接信息")])])]),t._v(" "),e("li",[t._v("于是，通信双方都知道了对方将要收发的音视频参数，也知道了对方的连接信息，之后就能建立P2P连接传音视频了")])]),t._v(" "),e("p",[e("strong",[t._v("注意：虽然在图上2345步是顺次进行的，但实际上23和45是两个独立的过程，可以并行完成")])]),t._v(" "),e("p",[t._v("扩展知识：")]),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/计算机网络/NAT.html"}},[t._v("《NAT和NAT穿透》")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/计算机网络/STUN.html"}},[t._v("《P2P通信标准协议(一)之STUN》")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/计算机网络/TURN.html"}},[t._v("《P2P通信标准协议(二)之TURN》")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/计算机网络/ICE.html"}},[t._v("《P2P通信标准协议(三)之ICE》")])],1)]),t._v(" "),e("h2",{attrs:{id:"pion里的ice协商过程案例-作为被发起连接的一方"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pion里的ice协商过程案例-作为被发起连接的一方"}},[t._v("#")]),t._v(" pion里的ICE协商过程案例 - 作为被发起连接的一方")]),t._v(" "),e("p",[t._v("以"),e("RouterLink",{attrs:{to:"/WebRTC/rtp-forwarder.html"}},[t._v("《用实例学习pion - "),e("code",[t._v("rtp-forwarder")]),t._v("》")]),t._v("中的最后一段代码为例。pion给的"),e("a",{attrs:{href:"https://github.com/pion/webrtc/tree/master/examples",target:"_blank",rel:"noopener noreferrer"}},[t._v("案例"),e("OutboundLink")],1),t._v("里大部分都是这么搞的。")],1),t._v(" "),e("p",[t._v("前面的"),e("code",[t._v("webrtc.PeerConnection")]),t._v("已经配置好了音视频流格式，略去，从创建Offer的过程开始。")]),t._v(" "),e("div",{staticClass:"language-go line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Wait for the offer to be pasted")]),t._v("\noffer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" webrtc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SessionDescription"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nsignal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Decode")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("signal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("MustReadStdin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("offer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("这里的Offer SDP信息是从命令行读取来的，而命令行里的SDP是从浏览器里粘贴来的，所以这里相当于是手工担任了信令传输的工作。")]),t._v(" "),e("div",{staticClass:"language-go line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Set the remote SessionDescription")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" peerConnection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetRemoteDescription")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("offer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" err "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("panic")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[t._v("可以看到这里对对面的Offer调用了PeerConnection的"),e("code",[t._v("SetRemoteDescription")]),t._v("，和前面介绍的一样。")]),t._v(" "),e("div",{staticClass:"language-go line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create answer")]),t._v("\nanswer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" peerConnection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateAnswer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("panic")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[t._v("调用PeerConnection的"),e("code",[t._v("CreateAnswer")]),t._v("创建Answer，和前面介绍的一样。")]),t._v(" "),e("div",{staticClass:"language-go line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create channel that is blocked until ICE Gathering is complete")]),t._v("\ngatherComplete "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" webrtc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("GatheringCompletePromise")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("peerConnection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[t._v("这里的"),e("code",[t._v("GatheringCompletePromise")]),t._v("返回的是一个"),e("code",[t._v("context")]),t._v("(本质上是"),e("code",[t._v("<-chan struct{}")]),t._v(")，阻塞直到完成ICECandidate信息收集，实际上就是等待STUN和本地IP地址获取完成。")]),t._v(" "),e("div",{staticClass:"language-go line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Sets the LocalDescription, and starts our UDP listeners")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" peerConnection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetLocalDescription")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("answer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" err "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("panic")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[t._v("可以看到这里对方才生成的Answer调用了PeerConnection的"),e("code",[t._v("SetLocalDescription")]),t._v("，和前面介绍的一样。")]),t._v(" "),e("div",{staticClass:"language-go line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Block until ICE Gathering is complete, disabling trickle ICE")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// we do this because we only can exchange one signaling message")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in a production application you should exchange ICE Candidates via OnICECandidate")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v("gatherComplete\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[t._v("等待完成ICECandidate信息收集。")]),t._v(" "),e("div",{staticClass:"language-go line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Output the answer in base64 so we can paste it in browser")]),t._v("\nfmt"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("signal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Encode")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("peerConnection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("LocalDescription")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[t._v("输出SessionDescription，应该是包含收集到的ICECandidate信息和Answer，给用户在浏览器里粘贴，所以这里也相当于是手工担任了信令传输的工作。")]),t._v(" "),e("h2",{attrs:{id:"pion里的ice协商过程案例-用post请求传递offer-answer-sdp和icecandidate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pion里的ice协商过程案例-用post请求传递offer-answer-sdp和icecandidate"}},[t._v("#")]),t._v(" pion里的ICE协商过程案例 - 用POST请求传递Offer/Answer SDP和ICECandidate")]),t._v(" "),e("p",[t._v("见"),e("RouterLink",{attrs:{to:"/WebRTC/pion-to-pion.html"}},[t._v("《用实例学习pion - "),e("code",[t._v("pion-to-pion")]),t._v("》")])],1)])}),[],!1,null,null,null);n.default=a.exports}}]);