(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{790:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("v3.0.0 introduces a new Pion specific concept known as a interceptor. A Interceptor is a pluggable RTP/RTCP processor. Via a public API users can easily add and customize operations that are run on inbound/outbound RTP. Interceptors are an interface this means A user could provide their own implementation. Or you can use one of the interceptors Pion will have in-tree.")]),t._v(" "),a("p",[t._v("We designed this with the following vision.")]),t._v(" "),a("ul",[a("li",[t._v("Useful defaults. Nontechnical users should be able to build things without tuning.")]),t._v(" "),a("li",[t._v("Don't block unique use cases. We shouldn't paint ourself in a corner. We want to support interesting WebRTC users")]),t._v(" "),a("li",[t._v("Allow users to bring their own logic. We should encourage easy changing. Innovation in this area is important.")]),t._v(" "),a("li",[t._v("Allow users to learn. Don't put this stuff deep in the code base. Should be easy to jump into so people can learn.")])]),t._v(" "),a("p",[t._v("In this release we only are providing a NACK Generator/Responder interceptor. We will be implementing more and you can import the latest at anytime! This means you can update your pion/interceptor version without having to upgrade pion/webrtc!")])]),t._v(" "),a("p",[t._v("总的来说，在WebRTC通信中，要收发的包可以分为两类：")]),t._v(" "),a("ul",[a("li",[t._v("RTP包：传递媒体内容，如音视频片段等")]),t._v(" "),a("li",[t._v("RTCP包：传递控制信息，如NACK、接收方报告等")])]),t._v(" "),a("p",[a("code",[t._v("pion/interceptor")]),t._v("也是按照这样的思路进行实现的，其中实现的interceptor都同时要处理RTP包和RTCP包，处理方式基本上都是根据RTP包的收发情况构造RTCP包进行发送，以及根据收到的RTCP包调整RTP包的发送。")]),t._v(" "),a("ul",[a("li",[t._v("比如在"),a("code",[t._v("pion/interceptor/pkg/nack")]),t._v("里，就是一方根据RTP包的序列号发送NACK信息，另一方根据NACK信息重发RTP包")]),t._v(" "),a("li",[t._v("又比如在"),a("code",[t._v("pion/interceptor/pkg/nack")]),t._v("里，就是一方统计RTP包的接收情况发送SenderReport，另一方接收并存储之")]),t._v(" "),a("li",[t._v("再比如在"),a("code",[t._v("pion/interceptor/pkg/twcc")]),t._v("里，就是一方统计RTP包的接收情况反馈丢包信息，另一方接收然后调整RTP包发送窗口")])]),t._v(" "),a("p",[t._v("此外，从逻辑上讲，一个协议必须得收发双方都实现了才能正常运行，而且由于WebRTC是对等连接通信，一方可能既是接收方又是发送方，所以"),a("code",[t._v("pion/interceptor")]),t._v("里的interceptor都必须得实现收发双方的功能。在程序里，这个思想体现为收发方基础接口不是分"),a("code",[t._v("SenderInterceptor")]),t._v("和"),a("code",[t._v("ReceiverInterceptor")]),t._v("两个，而是在一个基础接口"),a("code",[t._v("Interceptor")]),t._v("中同时包含收发双方的方法。")]),t._v(" "),a("p",[t._v("本文可以和"),a("RouterLink",{attrs:{to:"/WebRTC/pion-nack.html"}},[t._v("《用实例学习pion interceptor - "),a("code",[t._v("nack")]),t._v("》")]),t._v("搭配着看。")],1),t._v(" "),a("h2",{attrs:{id:"核心接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心接口"}},[t._v("#")]),t._v(" 核心接口")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Interceptor can be used to add functionality to you PeerConnections by modifying any incoming/outgoing rtp/rtcp")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// packets, or sending your own packets as needed.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Interceptor "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[a("code",[t._v("Interceptor")]),t._v("接口是"),a("code",[t._v("pion/interceptor")]),t._v("包的核心，"),a("code",[t._v("pion/interceptor")]),t._v("包的主要功能代码是"),a("code",[t._v("pion/interceptor/pkg")]),t._v("里继承了"),a("code",[t._v("Interceptor")]),t._v("类的各种interceptor，其余的代码基本都是这个"),a("code",[t._v("Interceptor")]),t._v("的方法参数里用到的类。"),a("code",[t._v("pion/interceptor/pkg")]),t._v("里的这些interceptor都是"),a("code",[t._v("pion/webrtc")]),t._v("里要用到的。用户也可以自己定义interceptor用在"),a("code",[t._v("pion/webrtc")]),t._v("里，比如"),a("RouterLink",{attrs:{to:"/WebRTC/rtp-forwarder.html"}},[t._v("《用实例学习pion - "),a("code",[t._v("rtp-forwarder")]),t._v("》")]),t._v("。")],1),t._v(" "),a("h3",{attrs:{id:"bindrtcpreader方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bindrtcpreader方法"}},[t._v("#")]),t._v(" "),a("code",[t._v("BindRTCPReader")]),t._v("方法")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// BindRTCPReader lets you modify any incoming RTCP packets. It is called once per sender/receiver, however this might")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// change in the future. The returned method will be called once per packet batch.")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BindRTCPReader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reader RTCPReader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" RTCPReader\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("ul",[a("li",[t._v("从函数名上看，这是一个绑定"),a("code",[t._v("RTCPReader")]),t._v("的接口")]),t._v(" "),a("li",[t._v("从注释上看，这个接口是为了让用户自定义修改输入RTCP数据包的过程")]),t._v(" "),a("li",[t._v("从函数的输入输出上看，函数输入一个"),a("code",[t._v("RTCPReader")]),t._v("输出一个"),a("code",[t._v("RTCPReader")]),t._v("，这个方法在使用时应该是可以级联的")])]),t._v(" "),a("p",[t._v("再看看这个"),a("code",[t._v("RTCPReader")]),t._v("是什么")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// RTCPReader is used by Interceptor.BindRTCPReader.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" RTCPReader "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Read a batch of rtcp packets")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Read")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("可以看到，"),a("code",[t._v("RTCPReader")]),t._v("就是一个"),a("code",[t._v("Read")]),t._v("函数，输入一段字节数据和"),a("code",[t._v("Attributes")]),t._v("，输出整型、"),a("code",[t._v("Attributes")]),t._v("和错误。")]),t._v(" "),a("p",[t._v("结合前面"),a("code",[t._v("BindRTCPReader")]),t._v("里说的功能，这个"),a("code",[t._v("Read")]),t._v("应该就是用户实现自定义修改输入RTCP数据包过程的地方。")]),t._v(" "),a("p",[t._v("输出里的错误自不必多讲，这里输入的字节数据应该就是修改前的RTCP数据包，修改过程应该是直接在这个字节输入上进行，后面输出的整型应该是修改后的数据长度，让之后的操作可以直接从字节数据里读出RTCP包。这个"),a("code",[t._v("Attributes")]),t._v("在后面定义的，是一个"),a("code",[t._v("map[interface{}]interface{}")]),t._v("，应该是用于传递一些自定义参数的。")]),t._v(" "),a("p",[a("code",[t._v("pion/interceptor")]),t._v("里还提供了一种简便的构造"),a("code",[t._v("RTCPReader")]),t._v("的方式：")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// RTCPReaderFunc is an adapter for RTCPReader interface")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" RTCPReaderFunc "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Read a batch of rtcp packets")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f RTCPReaderFunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Read")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("这样，只要写好"),a("code",[t._v("Read")]),t._v("里的代码，可以不用再定义一个"),a("code",[t._v("RTCPReader")]),t._v("子类，直接把函数放进"),a("code",[t._v("RTCPReaderFunc")]),t._v("就行。函数式编程思想，很妙。"),a("code",[t._v("pion/interceptor/pkg")]),t._v("里的几个interceptor都是这么用的。")]),t._v(" "),a("p",[t._v("那么这么看，"),a("code",[t._v("BindRTCPReader")]),t._v("确实是可以级联的，并且"),a("code",[t._v("BindRTCPReader")]),t._v("里面要实现的操作也能大概猜得到：")]),t._v(" "),a("ul",[a("li",[t._v("以"),a("code",[t._v("BindRTCPReader")]),t._v("输入的"),a("code",[t._v("RTCPReader")]),t._v("构造自己的"),a("code",[t._v("RTCPReader")]),t._v("作为输出，在自己的"),a("code",[t._v("RTCPReader")]),t._v("的"),a("code",[t._v("Read")]),t._v("函数中：\n"),a("ol",[a("li",[t._v("调用"),a("code",[t._v("BindRTCPReader")]),t._v("输入的"),a("code",[t._v("RTCPReader")]),t._v("的"),a("code",[t._v("Read")]),t._v("函数")]),t._v(" "),a("li",[t._v("根据返回的整型值，读取修改后的字节数据，反序列化为RTCP包")]),t._v(" "),a("li",[t._v("修改RTCP包和"),a("code",[t._v("Attributes")]),t._v("，或进行一些其他自定义操作（比如记录统计信息、转发、筛选等）")]),t._v(" "),a("li",[t._v("把修改后RTCP包序列化到字节数据里（可选）")]),t._v(" "),a("li",[t._v("返回整型值和"),a("code",[t._v("Attributes")])])])])]),t._v(" "),a("p",[a("code",[t._v("pion/interceptor/pkg")]),t._v("里的几个interceptor都是这样的，不过它们都没有修改字节数据的操作。")]),t._v(" "),a("ul",[a("li",[t._v("比如在"),a("code",[t._v("pion/interceptor/pkg/nack")]),t._v("里，interceptor从字节数据里获取RTCP包，然后判断是不是NACK包，如果是就按照NACK里汇报的丢包情况重发RTCP包")]),t._v(" "),a("li",[t._v("再比如在"),a("code",[t._v("pion/interceptor/pkg/report")]),t._v("里，interceptor从字节数据里获取RTCP包，然后判断是不是SenderReport包，如果是就存储之")])]),t._v(" "),a("p",[t._v("于是，一级一级地调用一串interceptor的"),a("code",[t._v("BindRTCPReader")]),t._v("，每个"),a("code",[t._v("BindRTCPReader")]),t._v("都以上一个interceptor的"),a("code",[t._v("BindRTCPReader")]),t._v("返回的"),a("code",[t._v("RTCPReader")]),t._v("为输入；输出的"),a("code",[t._v("RTCPReader")]),t._v("的"),a("code",[t._v("Read")]),t._v("里面先调用了输入的"),a("code",[t._v("RTCPReader")]),t._v("的"),a("code",[t._v("Read")]),t._v("，再进行自定义的修改操作，返回修改后的RTCP包字节数据。这样，最后一个interceptor的"),a("code",[t._v("BindRTCPReader")]),t._v("输出的"),a("code",[t._v("RTCPReader")]),t._v("的"),a("code",[t._v("Read")]),t._v("就是一个顺序执行所有自定义操作的RTCP包处理函数。")]),t._v(" "),a("h3",{attrs:{id:"bindrtcpwriter方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bindrtcpwriter方法"}},[t._v("#")]),t._v(" "),a("code",[t._v("BindRTCPWriter")]),t._v("方法")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// BindRTCPWriter lets you modify any outgoing RTCP packets. It is called once per PeerConnection. The returned method")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// will be called once per packet batch.")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BindRTCPWriter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("writer RTCPWriter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" RTCPWriter\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("ul",[a("li",[t._v("从函数名上看，这是一个绑定"),a("code",[t._v("RTCPWriter")]),t._v("的接口")]),t._v(" "),a("li",[t._v("从注释上看，这个接口是为了让用户自定义修改输出RTCP数据包的过程")]),t._v(" "),a("li",[t._v("很明显，这个方法在使用时应该和"),a("code",[t._v("BindRTCPReader")]),t._v("一样也是可以级联的，级联方式应该也大差不离")])]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// RTCPWriter is used by Interceptor.BindRTCPWriter.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" RTCPWriter "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Write a batch of rtcp packets")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pkts "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("rtcp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Packet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attributes Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("一股子"),a("code",[t._v("RTCPReader")]),t._v("的既视感，明显也是可以级联的，要实现的操作应该也差不多：")]),t._v(" "),a("ul",[a("li",[t._v("以"),a("code",[t._v("BindRTCPWriter")]),t._v("输入的"),a("code",[t._v("RTCPWriter")]),t._v("构造自己的"),a("code",[t._v("RTCPWriter")]),t._v("作为输出，在"),a("code",[t._v("RTCPWriter")]),t._v("的"),a("code",[t._v("Write")]),t._v("函数里对输入的"),a("code",[t._v("rtcp.Packet")]),t._v("列表进行增减（也就是增减要发送的）")])]),t._v(" "),a("p",[t._v("但是"),a("code",[t._v("pion/interceptor/pkg")]),t._v("里的几个interceptor好像都没这样用，它们的"),a("code",[t._v("BindRTCPWriter")]),t._v("都是直接记录下"),a("code",[t._v("RTCPWriter")]),t._v("，然后开了个协程写数据：")]),t._v(" "),a("ul",[a("li",[t._v("比如在"),a("code",[t._v("pion/interceptor/pkg/nack")]),t._v("里是定期读取接收日志，找到有哪些缺失的包，收集序列号构造NACK包发送")]),t._v(" "),a("li",[t._v("再比如在"),a("code",[t._v("pion/interceptor/pkg/report")]),t._v("里是定期发送SenderReport包")]),t._v(" "),a("li",[t._v("又比如在"),a("code",[t._v("pion/interceptor/pkg/twcc")]),t._v("里是定期发送反馈信息")])]),t._v(" "),a("p",[a("code",[t._v("pion/interceptor")]),t._v("里也提供了一种简便的构造"),a("code",[t._v("RTCPWriter")]),t._v("的方式：")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// RTCPWriterFunc is an adapter for RTCPWriter interface")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" RTCPWriterFunc "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pkts "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("rtcp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Packet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attributes Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Write a batch of rtcp packets")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f RTCPWriterFunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pkts "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("rtcp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Packet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attributes Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pkts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("和"),a("code",[t._v("RTCPReaderFunc")]),t._v("一个道理，不必多讲。")]),t._v(" "),a("h2",{attrs:{id:"bindremotestream方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bindremotestream方法"}},[t._v("#")]),t._v(" "),a("code",[t._v("BindRemoteStream")]),t._v("方法")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// BindRemoteStream lets you modify any incoming RTP packets. It is called once for per RemoteStream. The returned method")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// will be called once per rtp packet.")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BindRemoteStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("info "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("StreamInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reader RTPReader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" RTPReader\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// UnbindRemoteStream is called when the Stream is removed. It can be used to clean up any data related to that track.")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("UnbindRemoteStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("info "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("StreamInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("绑定和解绑远端流，从方法和注释上看和"),a("code",[t._v("BindRTCPReader")]),t._v("是类似的，都是用来绑定处理发送出去的数据包的方法的。")]),t._v(" "),a("p",[t._v("这里绑定的"),a("code",[t._v("RTPReader")]),t._v("和"),a("code",[t._v("RTCPReader")]),t._v("的"),a("code",[t._v("Read")]),t._v("函数里的输入参数是一模一样的：")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// RTPReader is used by Interceptor.BindRemoteStream.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" RTPReader "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Read a rtp packet")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Read")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("code",[t._v("BindRemoteStream")]),t._v("和"),a("code",[t._v("BindRTCPReader")]),t._v("唯一的区别在于包处理的方式：RTP包和RTCP包在逻辑上的不同之处在于，RTP包是从属于一个流的连续序列，而RTCP包是一个个独立的包。因此在"),a("code",[t._v("BindRTCPReader")]),t._v("中，输入的数据直接就是一个"),a("code",[t._v("RTCPReader")]),t._v("；而"),a("code",[t._v("BindRemoteStream")]),t._v("不仅需要指定"),a("code",[t._v("RTPReader")]),t._v("，还需要指定一个存储流信息的"),a("code",[t._v("StreamInfo")]),t._v("。")]),t._v(" "),a("p",[t._v("这个"),a("code",[t._v("StreamInfo")]),t._v("长这样：")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// StreamInfo is the Context passed when a StreamLocal or StreamRemote has been Binded or Unbinded")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" StreamInfo "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tID                  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\tAttributes          Attributes\n\tSSRC                "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint32")]),t._v("\n\tPayloadType         "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint8")]),t._v("\n\tRTPHeaderExtensions "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("RTPHeaderExtension\n\tMimeType            "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\tClockRate           "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint32")]),t._v("\n\tChannels            "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint16")]),t._v("\n\tSDPFmtpLine         "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\tRTCPFeedback        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("RTCPFeedback\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// RTPHeaderExtension represents a negotiated RFC5285 RTP header extension.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" RTPHeaderExtension "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tURI "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\tID  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// RTCPFeedback signals the connection to use additional RTCP packet types.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://draft.ortc.org/#dom-rtcrtcpfeedback")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" RTCPFeedback "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Type is the type of feedback.")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// see: https://draft.ortc.org/#dom-rtcrtcpfeedback")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// valid: ack, ccm, nack, goog-remb, transport-cc")]),t._v("\n\tType "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The parameter value depends on the type.")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// For example, type="nack" parameter="pli" will send Picture Loss Indicator packets.')]),t._v("\n\tParameter "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br")])]),a("p",[t._v("可以看到，这个"),a("code",[t._v("StreamInfo")]),t._v("里面放的是一些与流有关的配置信息。由于RTP包承载的是流，流中的包可以看成是一个整体，是一系列相互关联的连续包，不像RTCP包那样是一个个独立的包，一会是NACK、一会又是SenderReport。"),a("code",[t._v("StreamInfo")]),t._v("就是这些连续RTP包中与流相关的标记信息，它可以用来区分RTP包属于哪个流、区分媒体的类型、记录时钟频率等等。")]),t._v(" "),a("p",[t._v("一些重要的"),a("code",[t._v("StreamInfo")]),t._v("参数：引自《RTP: audio and video for the Internet》")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("SSRC")]),t._v("：Synchronization Source（SSRC）标识RTP会话中的参与者。它是一个临时的，每个会话的标识符通过RTP控制协议映射到一个长期的规范名称CNAME。SSRC是一个32位整数，由参与者加入会话时随机选择。具有相同SSRC的所有数据包均构成单个时序和序列号空间的一部分，因此接收方必须按SSRC对数据包进行分组才能进行播放。如果参加者在一个RTP会话中生成多个流（例如，来自不同的摄像机），每个流都必须标识为不同的SSRC，以便接收方可以区分哪些数据包属于每个流。")]),t._v(" "),a("li",[a("code",[t._v("PayloadType")]),t._v("：有效负载类型。RTP头的负载类型（或者PT）与RTP传输的媒体数据关联。接收者应用检测负载类型来甄别如何处理数据，例如，传递给特定的解压缩器。")]),t._v(" "),a("li",[a("code",[t._v("MimeType")]),t._v("：有效负载格式。有效负载格式是根据MIME名称空间命名的。该名称空间最初是为电子邮件定义的，用于标识附件的内容，但此后它已成为媒体格式的通用名称空间，并在许多应用程序中使用。所有有效负载格式都应该具有MIME类型注册。更新的有效负载格式将其包含在其各自规范中； 在线维护MIME类型的完整列表，网址为："),a("a",{attrs:{href:"http://www.iana.org/assignments/media-types",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.iana.org/assignments/media-types"),a("OutboundLink")],1),t._v("。")])]),t._v(" "),a("p",[t._v("还有其他的一些参数在RTP包相关的IETF标准里都应该能找到。")]),t._v(" "),a("p",[a("code",[t._v("pion/interceptor")]),t._v("里也提供了一种简便的构造"),a("code",[t._v("RTPReader")]),t._v("的方式：")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// RTPReaderFunc is an adapter for RTPReader interface")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" RTPReaderFunc "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Read a rtp packet")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f RTPReaderFunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Read")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("和"),a("code",[t._v("RTCPReaderFunc")]),t._v("一个道理，不必多讲。")]),t._v(" "),a("h2",{attrs:{id:"bindlocalstream方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bindlocalstream方法"}},[t._v("#")]),t._v(" "),a("code",[t._v("BindLocalStream")]),t._v("方法")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// BindLocalStream lets you modify any outgoing RTP packets. It is called once for per LocalStream. The returned method")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// will be called once per rtp packet.")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BindLocalStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("info "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("StreamInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" writer RTPWriter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" RTPWriter\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// UnbindLocalStream is called when the Stream is removed. It can be used to clean up any data related to that track.")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("UnbindLocalStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("info "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("StreamInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("绑定和解绑本地流，从方法和注释上看和"),a("code",[t._v("BindRTCPWriter")]),t._v("是类似的，都是用来绑定处理发送出去的数据包的方法的，这里绑定的"),a("code",[t._v("RTPWriter")]),t._v("也和"),a("code",[t._v("RTCPWriter")]),t._v("大差不离：")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// RTPWriter is used by Interceptor.BindLocalStream.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" RTPWriter "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Write a rtp packet")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("header "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("rtp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" payload "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attributes Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("可以看到，唯一的区别在于包构建方式：从代码上看，"),a("code",[t._v("RTCPWriter.Write")]),t._v("的输入直接就是"),a("code",[t._v("rtcp.Packet")]),t._v("的列表；而"),a("code",[t._v("RTPWriter.Write")]),t._v("的输入是分开的一个包头"),a("code",[t._v("rtp.Header")]),t._v("和"),a("code",[t._v("[]byte")]),t._v("格式的内容。这可能是因为RTCP只会传递一些运行状态数据和控制信息，每种包都有自己独特的结构，而RTP包是由一长串媒体数据切开包装而来，结构比较规整，不能给用户随便调整，所以把包头和包内容分了两个变量。")]),t._v(" "),a("p",[a("code",[t._v("pion/interceptor")]),t._v("里也提供了一种简便的构造"),a("code",[t._v("RTPWriter")]),t._v("的方式：")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// RTPWriterFunc is an adapter for RTPWrite interface")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" RTPWriterFunc "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("header "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("rtp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" payload "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attributes Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Write a rtp packet")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f RTPWriterFunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("header "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("rtp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" payload "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attributes Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("和"),a("code",[t._v("RTCPReaderFunc")]),t._v("一个道理，不必多讲。")]),t._v(" "),a("h2",{attrs:{id:"close"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#close"}},[t._v("#")]),t._v(" "),a("code",[t._v("Close")])]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("\tio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Closer\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("这里好理解，当要销毁这个"),a("code",[t._v("Interceptor")]),t._v("的时候，必须要解绑所有的"),a("code",[t._v("RTCPReader")]),t._v("、"),a("code",[t._v("RTCPWriter")]),t._v("、"),a("code",[t._v("RTPReader")]),t._v("、"),a("code",[t._v("RTPWriter")]),t._v("，并且停止所有的相关协程，这个只能由实现"),a("code",[t._v("Interceptor")]),t._v("的用户来做。所以在这里加上了一个"),a("code",[t._v("io.Closer")]),t._v("，要求用户自己实现一个"),a("code",[t._v("Close")]),t._v("方法。")]),t._v(" "),a("h2",{attrs:{id:"来自《用实例学习pion-interceptor-nack》的附加知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#来自《用实例学习pion-interceptor-nack》的附加知识"}},[t._v("#")]),t._v(" 来自"),a("RouterLink",{attrs:{to:"/WebRTC/pion-nack.html"}},[t._v("《用实例学习pion interceptor - "),a("code",[t._v("nack")]),t._v("》")]),t._v("的附加知识")],1),t._v(" "),a("p",[t._v("以下是一些关于级联和"),a("code",[t._v("Interceptor")]),t._v("具体如何调用的知识。"),a("RouterLink",{attrs:{to:"/WebRTC/pion-nack.html"}},[t._v("《用实例学习pion interceptor - "),a("code",[t._v("nack")]),t._v("》")]),t._v("里的案例很是简洁，一看就能懂。")],1),t._v(" "),a("p",[t._v("从"),a("RouterLink",{attrs:{to:"/WebRTC/pion-nack.html"}},[t._v("《用实例学习pion interceptor - "),a("code",[t._v("nack")]),t._v("》")]),t._v("中的案例看:")],1),t._v(" "),a("ul",[a("li",[t._v("在级联的开头，用户需要自行调用"),a("code",[t._v("Read")]),t._v("把包传进级联的Reader里")]),t._v(" "),a("li",[t._v("在级联的末尾，用户需要自行在"),a("code",[t._v("Write")]),t._v("里写上发送包的函数，把级联的Writer传来的包发送出去")])]),t._v(" "),a("p",[t._v("比如NACK发送方接收RTP包就是首先获取到"),a("code",[t._v("RTPReader")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create the writer just for a single SSRC stream")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this is a callback that is fired everytime a RTP packet is ready to be sent")]),t._v("\nstreamReader "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" chain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BindRemoteStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("interceptor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StreamInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tSSRC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("         ssrc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tRTCPFeedback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("interceptor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RTCPFeedback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nack"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Parameter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" interceptor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("RTPReaderFunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" interceptor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" interceptor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("然后在循环里从UDP处收包之后放进"),a("code",[t._v("RTPReader.Read")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ReadFrom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("panic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nlog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Received RTP"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" streamReader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Read")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("panic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("由于级联了NACK Interceptor，所以就能执行一些包统计的操作，找出未接收到的RTP包，构造NACK。")]),t._v(" "),a("p",[t._v("然后NACK发送方发NACK包就是写在"),a("code",[t._v("RTCPWriter.Write")]),t._v("里的：")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("chain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BindRTCPWriter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("interceptor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("RTCPWriterFunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pkts "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("rtcp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Packet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" interceptor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tbuf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" rtcp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Marshal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pkts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteTo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("这样就能完成“收RTP包——统计丢包——发NACK”的操作。")]),t._v(" "),a("p",[t._v("NACK接收方也是一样，先获取"),a("code",[t._v("RTCPReader")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Set the interceptor wide RTCP Reader")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this is a handle to send NACKs back into the interceptor.")]),t._v("\nrtcpReader "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" chain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BindRTCPReader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("interceptor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("RTCPReaderFunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" interceptor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" interceptor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("然后也是在循环里UDP收包之后放进"),a("code",[t._v("RTCPReader.Read")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Read")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rtcpBuf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("panic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nlog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Received NACK"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rtcpWriter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Read")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rtcpBuf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("panic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("于是获取到NACK解包出来就知道要重发哪些RTP包了。")]),t._v(" "),a("p",[t._v("然后NACK接收方重发RTP包就是写在"),a("code",[t._v("RTPWriter.Write")]),t._v("里的：")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create the writer just for a single SSRC stream")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this is a callback that is fired everytime a RTP packet is ready to be sent")]),t._v("\nstreamWriter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" chain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BindLocalStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("interceptor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StreamInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tSSRC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("         ssrc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tRTCPFeedback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("interceptor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RTCPFeedback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nack"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Parameter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" interceptor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("RTPWriterFunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("header "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("rtp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" payload "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attributes interceptor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\theaderBuf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Marshal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("panic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("headerBuf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" payload"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("p",[t._v("这样就能完成“接收NACK包——找出需要重发的RTP包——重发RTP包”的操作了。")]),t._v(" "),a("h2",{attrs:{id:"总结一下interceptor的创建过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结一下interceptor的创建过程"}},[t._v("#")]),t._v(" 总结一下"),a("code",[t._v("Interceptor")]),t._v("的创建过程")]),t._v(" "),a("p",[t._v("首先是继承"),a("code",[t._v("interceptor.NoOp")]),t._v("，因为实际情况下不一定需要把"),a("code",[t._v("BindLocalStream")]),t._v("、"),a("code",[t._v("BindRTCPWriter")]),t._v("、"),a("code",[t._v("BindRemoteStream")]),t._v("、"),a("code",[t._v("BindRTCPReader")]),t._v("四个全实现。")]),t._v(" "),a("h3",{attrs:{id:"实现bindlocalstream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现bindlocalstream"}},[t._v("#")]),t._v(" 实现"),a("code",[t._v("BindLocalStream")])]),t._v(" "),a("ol",[a("li",[t._v("实现一个"),a("code",[t._v("RTPWriter")]),t._v("，在其中保存另一个"),a("code",[t._v("RTPWriter")]),t._v("，并在其"),a("code",[t._v("Write")]),t._v("函数中调用保存的"),a("code",[t._v("RTPWriter.Write")])]),t._v(" "),a("li",[t._v("实现"),a("code",[t._v("BindLocalStream")]),t._v("，将输入的"),a("code",[t._v("RTPWriter")]),t._v("保存到你实现的"),a("code",[t._v("RTPWriter")]),t._v("中并返回")]),t._v(" "),a("li",[t._v("(常见操作)让你实现的"),a("code",[t._v("RTPWriter")]),t._v("可以读到"),a("code",[t._v("Interceptor")]),t._v("里的数据，然后在"),a("code",[t._v("BindLocalStream")]),t._v("里开goroutine调用"),a("code",[t._v("RTPWriter")]),t._v("定期获取"),a("code",[t._v("Interceptor")]),t._v("里的数据并据此调用保存的另一个"),a("code",[t._v("RTPWriter")]),t._v("写一些特殊功能的包")])]),t._v(" "),a("h3",{attrs:{id:"实现bindrtcpwriter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现bindrtcpwriter"}},[t._v("#")]),t._v(" 实现"),a("code",[t._v("BindRTCPWriter")])]),t._v(" "),a("p",[t._v("同上，只不过"),a("code",[t._v("RTPWriter")]),t._v("变成"),a("code",[t._v("RTCPWriter")])]),t._v(" "),a("h3",{attrs:{id:"实现bindremotestream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现bindremotestream"}},[t._v("#")]),t._v(" 实现"),a("code",[t._v("BindRemoteStream")])]),t._v(" "),a("ol",[a("li",[t._v("实现一个"),a("code",[t._v("RTPReader")]),t._v("，在其中保存另一个"),a("code",[t._v("RTPReader")]),t._v("，并在其"),a("code",[t._v("Read")]),t._v("函数中调用保存的"),a("code",[t._v("RTPReader.Read")])]),t._v(" "),a("li",[t._v("实现"),a("code",[t._v("BindRemoteStream")]),t._v("，将输入的"),a("code",[t._v("RTPReader")]),t._v("保存到你实现的"),a("code",[t._v("RTPReader")]),t._v("中并返回")]),t._v(" "),a("li",[t._v("(常见操作)让"),a("code",[t._v("RTPReader")]),t._v("可以操作"),a("code",[t._v("Interceptor")]),t._v("里的数据，从而可以根据"),a("code",[t._v("RTPReader.Read")]),t._v("输入的数据修改"),a("code",[t._v("Interceptor")]),t._v("里的数据，进而影响其绑定的"),a("code",[t._v("RTPWriter")]),t._v("和"),a("code",[t._v("RTCPWriter")]),t._v("的行为")])]),t._v(" "),a("h3",{attrs:{id:"实现bindrtcpreader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现bindrtcpreader"}},[t._v("#")]),t._v(" 实现"),a("code",[t._v("BindRTCPReader")])]),t._v(" "),a("p",[t._v("同上，只不过"),a("code",[t._v("RTPReader")]),t._v("变成"),a("code",[t._v("RTCPReader")])])])}),[],!1,null,null,null);s.default=e.exports}}]);