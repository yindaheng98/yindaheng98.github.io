(window.webpackJsonp=window.webpackJsonp||[]).push([[245],{921:function(s,t,a){"use strict";a.r(t);var e=a(4),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[s._v("#")]),s._v(" 背景")]),s._v(" "),a("p",[s._v("最近在帮别人看他的一个项目，项目通过 git 管理。在我 "),a("code",[s._v("git clone")]),s._v(" 到本地的时候，发现这个工程目录十分大。经过分析，他将很多无谓的文件也 commit 上去，例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("venv/\n*.pyc\n.idea/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("等等目录，这些文件以及目录并没有必要上传，于是我便和他沟通，征得他同意后开始大改...")]),s._v(" "),a("p",[a("strong",[s._v("一般情况下，并不建议执行 "),a("code",[s._v("git push -f")]),s._v(" 这个操作")])]),s._v(" "),a("h2",{attrs:{id:"删除指定文件-文件夹"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除指定文件-文件夹"}},[s._v("#")]),s._v(" 删除指定文件/文件夹")]),s._v(" "),a("p",[s._v("如果我新增一个 commit 把这些不必要的文件删掉，并且使用 "),a("code",[s._v(".gitignore")]),s._v(" 来主动忽略，这是可行的。不过这些文件依然会在 commit 历史中出现，别人 "),a("code",[s._v("git clone")]),s._v(" 的时候也会被下载下来，因此打算从 commit 历史中完全删掉这些文件，就像他们从来没有出现过一样。")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" filter-branch --force --index-filter "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached --ignore-unmatch venv/ -r'")]),s._v(" --prune-empty --tag-name-filter "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" -- --all\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" for-each-ref --format"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'delete %(refname)'")]),s._v(" refs/original "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" update-ref --stdin\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reflog expire --expire"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("now --all\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" gc --prune"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("now\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push --force --verbose --dry-run\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push --force\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("其中，要删去的是目录 "),a("code",[s._v("venv/")]),s._v(" ，由于是目录所以我加上了 "),a("code",[s._v("-r")]),s._v(" 参数。")]),s._v(" "),a("h2",{attrs:{id:"删除除指定的文件-文件夹外的所有文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除除指定的文件-文件夹外的所有文件"}},[s._v("#")]),s._v(" 删除除指定的文件/文件夹外的所有文件")]),s._v(" "),a("p",[s._v("要删除所有文件，一个个的删麻烦不说还容易漏掉在历史里标记为删除HEAD里不显示的文件。\n所以换个思路，导出要保存的文件的历史记录：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" fast-export HEAD -- "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" code/ venv/ -type f"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/his.fi\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("然后在别的地方新建一个库导入之：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" fast-import "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/his.fi\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"缺陷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缺陷"}},[s._v("#")]),s._v(" 缺陷")]),s._v(" "),a("p",[s._v("正如上面所提到的，一定要尽可能少用这个功能，虽然他可以减少我们 git 目录的大小，但是这会对其他协作者产生极大的影响。")]),s._v(" "),a("p",[s._v("所有受到影响的 commit 的 ID 都会被重写，另外如果 commit 像我这样有 GPG 签名的话，就无法执行这个操作了。")])])}),[],!1,null,null,null);t.default=n.exports}}]);