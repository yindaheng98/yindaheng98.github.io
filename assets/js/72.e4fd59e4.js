(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{734:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"引入：linux上的资源隔离指令chroot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入：linux上的资源隔离指令chroot"}},[s._v("#")]),s._v(" 引入：Linux上的资源隔离指令"),a("code",[s._v("chroot")])]),s._v(" "),a("p",[a("code",[s._v("chroot")]),s._v("，即 change root directory，更改 root 目录。在 linux 系统中，系统默认的目录结构都是以"),a("code",[s._v("/")]),s._v("，即是以根 (root) 开始的。而在使用 "),a("code",[s._v("chroot")]),s._v(" 之后，系统的目录结构将以指定的位置作为"),a("code",[s._v("/")]),s._v("位置。")]),s._v(" "),a("p",[s._v("在经过 chroot 之后，系统读取到的目录和文件将不在是旧系统根下的而是新根下(即被指定的新的位置)的目录结构和文件。")]),s._v(" "),a("h3",{attrs:{id:"chroot的作用与用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chroot的作用与用法"}},[s._v("#")]),s._v(" "),a("code",[s._v("chroot")]),s._v("的作用与用法")]),s._v(" "),a("ol",[a("li",[s._v("增加了系统的安全性，限制了用户的权力；\n"),a("ul",[a("li",[s._v("在经过 chroot 之后，在新根下将访问不到旧系统的根目录结构和文件")]),s._v(" "),a("li",[s._v("一般是在登录 (login) 前使用 chroot，使得用户不能访问一些特定的文件")])])]),s._v(" "),a("li",[s._v("建立一个与原系统隔离的系统目录结构，方便用户的开发；")]),s._v(" "),a("li",[s._v("切换系统的根目录位置，引导 Linux 系统启动以及急救系统等；\n"),a("ul",[a("li",[s._v("最为明显的是在系统初始引导磁盘的处理过程中使用，从初始 RAM 磁盘 (initrd) 切换系统的根位置并执行真正的 init")])])])]),s._v(" "),a("h3",{attrs:{id:"chroot没有隔离的东西"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chroot没有隔离的东西"}},[s._v("#")]),s._v(" "),a("code",[s._v("chroot")]),s._v("没有隔离的东西")]),s._v(" "),a("ol",[a("li",[s._v("chroot没有在进程层面上进行隔离\n"),a("ul",[a("li",[s._v("在原系统下面可以看到新根目录下执行的进程")])])]),s._v(" "),a("li",[s._v("chroot没有在网络层面上进行隔离\n"),a("ul",[a("li",[s._v("在新根目录下执行ifconfig等网络操作可以看到网络信息跟原系统是完全一样的")])])])]),s._v(" "),a("h2",{attrs:{id:"namespace-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#namespace-api"}},[s._v("#")]),s._v(" namespace API")]),s._v(" "),a("p",[s._v("namespace的API包括clone()、setns()以及unshare()，和/proc下的部分文件。")]),s._v(" "),a("h3",{attrs:{id:"clone-：创建一个namespace然后在其中创建一个新进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clone-：创建一个namespace然后在其中创建一个新进程"}},[s._v("#")]),s._v(" "),a("code",[s._v("clone()")]),s._v("：创建一个namespace然后在其中创建一个新进程")]),s._v(" "),a("p",[a("code",[s._v("clone()")]),s._v("实际上是传统UNIX系统调用fork()的一种更通用的实现方式，它可以通过flags来控制使用多少功能。Linux namespace所指的功能实际上只是"),a("code",[s._v("clone()")]),s._v("功能的子集，一共有二十多种"),a("code",[s._v("CLONE_*")]),s._v("形式的flag（标志位）参数用来控制clone进程的方方面面，与namespace相关的只有以下7种：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("namespace")]),s._v(" "),a("th",[s._v("系统调用参数")]),s._v(" "),a("th",[s._v("隔离内容")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("Mount")]),s._v(" "),a("td",[s._v("CLONE_NEWNS")]),s._v(" "),a("td",[s._v("文件系统")])]),s._v(" "),a("tr",[a("td",[s._v("User")]),s._v(" "),a("td",[s._v("CLONE_NEWUSER")]),s._v(" "),a("td",[s._v("用户和用户组")])]),s._v(" "),a("tr",[a("td",[s._v("PID")]),s._v(" "),a("td",[s._v("CLONE_NEWPID")]),s._v(" "),a("td",[s._v("进程编号")])]),s._v(" "),a("tr",[a("td",[s._v("IPC")]),s._v(" "),a("td",[s._v("CLONE_NEWIPC")]),s._v(" "),a("td",[s._v("信号量、消息队列、共享内存")])]),s._v(" "),a("tr",[a("td",[s._v("Network")]),s._v(" "),a("td",[s._v("CLONE_NEWNET")]),s._v(" "),a("td",[s._v("网络设备。协议栈、端口")])]),s._v(" "),a("tr",[a("td",[s._v("UTS")]),s._v(" "),a("td",[s._v("CLONE_NEWUTS")]),s._v(" "),a("td",[s._v("主机名与域名")])]),s._v(" "),a("tr",[a("td",[s._v("Cgroup")]),s._v(" "),a("td",[s._v("CLONE_NEWCGROUP")]),s._v(" "),a("td",[s._v("Cgroup根目录")])])])]),s._v(" "),a("div",{staticClass:"language-C line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("clone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("child_func"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("child_stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("各参数定义如下：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("child_func")]),s._v("：指定一个由新进程执行的函数。当这个函数返回时，子进程终止。该函数返回一个整数，表示子进程的退出代码")]),s._v(" "),a("li",[a("code",[s._v("child_stack")]),s._v("：传入子进程使用的栈空间，也就是把用户态堆栈指针赋给子进程的 esp 寄存器")]),s._v(" "),a("li",[a("code",[s._v("flags")]),s._v("：前文所述的"),a("code",[s._v("CLONE_*")]),s._v("形式的标志位参数，多个标志位通过"),a("code",[s._v("|")]),s._v("（位或）操作来实现")]),s._v(" "),a("li",[a("code",[s._v("arg")]),s._v("：指向传递给"),a("code",[s._v("child_func")]),s._v("函数的参数")])]),s._v(" "),a("h4",{attrs:{id:"clone-的用法：类比fork"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clone-的用法：类比fork"}},[s._v("#")]),s._v(" "),a("code",[s._v("clone()")]),s._v("的用法：类比"),a("code",[s._v("fork()")])]),s._v(" "),a("p",[a("code",[s._v("clone()")]),s._v("的运行方式与"),a("code",[s._v("fork()")]),s._v("基本相同，它们都会创建一个新的进程；不同的是，"),a("code",[s._v("clone()")]),s._v("的子进程栈空间和所运行的函数由"),a("code",[s._v("child_stack")]),s._v("和"),a("code",[s._v("child_func")]),s._v("指定，而"),a("code",[s._v("fork()")]),s._v("直接将当前进程的当前栈空间和运行过程复制一份。")]),s._v(" "),a("p",[s._v("例如：")]),s._v(" "),a("div",{staticClass:"language-C line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<unistd.h>")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    pid_t fpid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//fpid表示fork函数返回的值")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" count"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    fpid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fork")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fpid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"error in fork!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fpid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"我是父进程%d的输出/n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getpid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"我是子进程%d的输出/n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getpid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[a("code",[s._v("fork()")]),s._v("在父进程中返回"),a("code",[s._v("fpid")]),s._v("为0，而其创建的子进程从"),a("code",[s._v("if (fpid < 0)")]),s._v("处开始运行（栈空间和运行过程被复制），返回的"),a("code",[s._v("fpid")]),s._v("为1。因此输出：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("root@local:~$ gcc -Wall fork_example.c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" ./a.out\n我是父进程28365的输出\n我是子进程28366的输出\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"proc-pid-ns文件夹"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#proc-pid-ns文件夹"}},[s._v("#")]),s._v(" "),a("code",[s._v("/proc/[pid]/ns")]),s._v("文件夹")]),s._v(" "),a("p",[s._v("查看当前进程的"),a("code",[s._v("/proc/[pid]/ns")]),s._v("文件夹（"),a("code",[s._v("$$")]),s._v("表示当前bash进程的pid）：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("yin@yin-v:~$ ll /proc/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$$")]),s._v("/ns\ntotal "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\ndr-x--x--x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" yin yin "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Jun "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":44 ./\ndr-xr-xr-x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" yin yin "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Jun "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":03 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/\nlrwxrwxrwx "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" yin yin "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Jun "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":44 cgroup -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'cgroup:[4026531835]'")]),s._v("\nlrwxrwxrwx "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" yin yin "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Jun "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":44 ipc -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ipc:[4026531839]'")]),s._v("\nlrwxrwxrwx "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" yin yin "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Jun "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":44 mnt -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mnt:[4026531840]'")]),s._v("\nlrwxrwxrwx "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" yin yin "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Jun "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":44 net -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'net:[4026531993]'")]),s._v("\nlrwxrwxrwx "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" yin yin "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Jun "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":44 pid -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'pid:[4026531836]'")]),s._v("\nlrwxrwxrwx "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" yin yin "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Jun "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":44 pid_for_children -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'pid:[4026531836]'")]),s._v("\nlrwxrwxrwx "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" yin yin "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Jun "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":44 user -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'user:[4026531837]'")]),s._v("\nlrwxrwxrwx "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" yin yin "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Jun "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":44 uts -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'uts:[4026531838]'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("这些 namespace 文件都是链接文件。从名字上就能看出，它们和前面所讲的7种namespace对应。链接文件的内容的格式为"),a("code",[s._v("namespace 的类型:[Inode number]")]),s._v("（"),a("code",[s._v("Inode number")]),s._v("是namespace 的标识符，相当于ID）。如果两个进程的某个 namespace 文件指向同一个链接文件，说明其相关资源在同一个 namespace 中。")]),s._v(" "),a("h4",{attrs:{id:"为什么是链接文件？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么是链接文件？"}},[s._v("#")]),s._v(" 为什么是链接文件？")]),s._v(" "),a("p",[s._v("在 "),a("code",[s._v("/proc/[pid]/ns")]),s._v(" 里放置链接文件的作用是：一旦这些链接文件被打开，只要打开的文件描述符(fd)存在，那么就算该 namespace 下的所有进程都已结束，这个 namespace 也会一直存在，后续的进程还可以再加入进来。")]),s._v(" "),a("p",[s._v("除了打开文件外，通过文件挂载的方式也可以阻止 namespace 被删除。")]),s._v(" "),a("h3",{attrs:{id:"setns-：将当前进程加入到一个已有的namespace中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setns-：将当前进程加入到一个已有的namespace中"}},[s._v("#")]),s._v(" "),a("code",[s._v("setns()")]),s._v("：将当前进程加入到一个已有的namespace中")]),s._v(" "),a("p",[s._v("将当前进程加入到已有的namespace中。")]),s._v(" "),a("div",{staticClass:"language-C line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" fd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" nstype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("参数如下：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("fd")]),s._v("：要加入 namespace 的文件描述符。它是一个指向 "),a("code",[s._v("/proc/[pid]/ns")]),s._v(" 目录中文件的文件描述符（可以通过直接打开该目录下的链接文件得到）")]),s._v(" "),a("li",[a("code",[s._v("nstype")]),s._v("：让调用者可以检查 fd 指向的 namespace 类型是否符合实际要求。若把该参数设置为 0 表示不检查")])]),s._v(" "),a("h4",{attrs:{id:"用法示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用法示例"}},[s._v("#")]),s._v(" 用法示例")]),s._v(" "),a("div",{staticClass:"language-C line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[s._v("fd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" O_RDONLY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 获取namespace文件描述符 */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 加入新的namespace */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("execve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 创建子进程执行程序 */")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"unshare-：创建新的-namespace-并将当前进程加入其中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unshare-：创建新的-namespace-并将当前进程加入其中"}},[s._v("#")]),s._v(" "),a("code",[s._v("unshare()")]),s._v("：创建新的 namespace 并将当前进程加入其中")]),s._v(" "),a("div",{staticClass:"language-C line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("unshare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("参数："),a("code",[s._v("flags")]),s._v("同"),a("code",[s._v("clone()")]),s._v("的"),a("code",[s._v("flags")]),s._v("参数")]),s._v(" "),a("h2",{attrs:{id:"namespace类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#namespace类型"}},[s._v("#")]),s._v(" namespace类型")]),s._v(" "),a("h3",{attrs:{id:"mount"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mount"}},[s._v("#")]),s._v(" "),a("RouterLink",{attrs:{to:"/Docker/namespaces/Mount.html"}},[s._v("Mount")])],1),s._v(" "),a("h3",{attrs:{id:"uts-unix-time-sharing-system"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uts-unix-time-sharing-system"}},[s._v("#")]),s._v(" "),a("RouterLink",{attrs:{to:"/Docker/namespaces/UTSandUser.html"}},[s._v("UTS(UNIX Time-sharing System)")])],1),s._v(" "),a("h3",{attrs:{id:"user"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#user"}},[s._v("#")]),s._v(" "),a("RouterLink",{attrs:{to:"/Docker/namespaces/UTSandUser.html"}},[s._v("User")])],1),s._v(" "),a("h3",{attrs:{id:"pid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pid"}},[s._v("#")]),s._v(" "),a("RouterLink",{attrs:{to:"/Docker/namespaces/PIDandIPC.html"}},[s._v("PID")])],1),s._v(" "),a("h3",{attrs:{id:"ipc-interprocess-communication"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ipc-interprocess-communication"}},[s._v("#")]),s._v(" "),a("RouterLink",{attrs:{to:"/Docker/namespaces/PIDandIPC.html"}},[s._v("IPC(Interprocess Communication)")])],1),s._v(" "),a("h3",{attrs:{id:"network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#network"}},[s._v("#")]),s._v(" "),a("RouterLink",{attrs:{to:"/Docker/namespaces/Network.html"}},[s._v("Network")])],1),s._v(" "),a("h3",{attrs:{id:"cgroups"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cgroups"}},[s._v("#")]),s._v(" Cgroups")]),s._v(" "),a("p",[s._v("将Cgroups进行隔离，docker中没有用到，略")])])}),[],!1,null,null,null);t.default=e.exports}}]);