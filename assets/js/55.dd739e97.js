(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{720:function(t,v,_){"use strict";_.r(v);var r=_(4),e=Object(r.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[_("a",{attrs:{href:"https://landscape.cncf.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("云原生图景"),_("OutboundLink")],1),t._v(" "),_("img",{attrs:{src:"https://landscape.cncf.io/images/landscape.png",alt:"云原生图景"}})]),t._v(" "),_("h2",{attrs:{id:"cncf是什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cncf是什么"}},[t._v("#")]),t._v(" CNCF是什么")]),t._v(" "),_("p",[t._v("从孵化成熟阶段开始，要想最终毕业，项目必须表现出高度的多样性，被大量用户广泛使用，拥有正式的治理过程，并且面向整个开源社区坚持其可持续性及包容性。")]),t._v(" "),_("h3",{attrs:{id:"何谓之cncf-毕业项目-？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#何谓之cncf-毕业项目-？"}},[t._v("#")]),t._v(" 何谓之CNCF“毕业项目”？")]),t._v(" "),_("p",[t._v("CNCF 项目毕业标准中关于毕业条件是这样定义的：")]),t._v(" "),_("ul",[_("li",[t._v("有来自至少两个机构的提交者。")]),t._v(" "),_("li",[t._v("已经实现并维护了核心基础结构计划（CII）的最佳实践徽章。")]),t._v(" "),_("li",[t._v("采用 CNCF 行为准则。")]),t._v(" "),_("li",[t._v("明确定义项目治理和提交者流程。这最好在 GOVERNANCE.md 文件中进行，并引用 OWNERS.md 文件显示当前和荣誉提交者。")]),t._v(" "),_("li",[t._v("至少在主要仓库提供项目采用者的公开列表（例如，ADOPTERS.md 文件或项目网站上的徽标）。")]),t._v(" "),_("li",[t._v("获得 TOC 的绝对多数选票进入毕业阶段。如果项目能够表现出足够的成熟度，项目可以尝试直接从沙箱移动到毕业。项目可以无限期地保持在孵化状态，但通常预计在两年内毕业。")])]),t._v(" "),_("h2",{attrs:{id:"cncf层次架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cncf层次架构"}},[t._v("#")]),t._v(" CNCF层次架构")]),t._v(" "),_("p",[t._v("从文章开头的云原生图景可以看到：云原生所使用的相关软件按照功能划分为了很多不同的模块，每个模块都解决了一个特定的问题：")]),t._v(" "),_("p",[_("img",{attrs:{src:"i/CNCF.png",alt:"层次架构"}})]),t._v(" "),_("h3",{attrs:{id:"供应层（provisioning）"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#供应层（provisioning）"}},[t._v("#")]),t._v(" "),_("RouterLink",{attrs:{to:"/CNCF/供应层.html"}},[t._v("供应层（Provisioning）")])],1),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("-")]),t._v(" "),_("th",[t._v("功能")]),t._v(" "),_("th",[t._v("相关软件举例")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("自动化和配置工具（Automation & Configuration）")]),t._v(" "),_("td",[t._v("自动帮你在机器上装环境")]),t._v(" "),_("td",[t._v("KubeEdge：以容器的形式管理边缘设备"),_("br"),t._v("OpenStack、Ansible、VMWare vSphere等")])]),t._v(" "),_("tr",[_("td",[t._v("容器仓库（Container Registry）")]),t._v(" "),_("td",[t._v("存储你的容器镜像")]),t._v(" "),_("td",[t._v("Harbor：企业级私有Registry 服务器"),_("br"),t._v("Dragonfly：支持镜像分发的P2P文件分发系统")])]),t._v(" "),_("tr",[_("td",[t._v("安全与合规（Security & Compliance）")]),t._v(" "),_("td",[t._v("确保系统运行的是正确的容器")]),t._v(" "),_("td",[t._v("TUF：专注于保护软件的更新过程"),_("br"),t._v("Notary：确保下载了正确的镜像"),_("br"),t._v("Falco：侦测异常操作"),_("br"),t._v("Open Policy Agent：云原生时代的策略引擎，控制几乎所有活动的权限")])]),t._v(" "),_("tr",[_("td",[t._v("密钥管理（Key management）")]),t._v(" "),_("td",[t._v("安全地存储、分发、销毁机密信息")]),t._v(" "),_("td",[t._v("Spiffe/Spire：内部微服务间通信的消息加密验证")])])])]),t._v(" "),_("h3",{attrs:{id:"运行时层（runtime）"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#运行时层（runtime）"}},[t._v("#")]),t._v(" "),_("RouterLink",{attrs:{to:"/CNCF/运行时层.html"}},[t._v("运行时层（Runtime）")])],1),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("-")]),t._v(" "),_("th",[t._v("功能")]),t._v(" "),_("th",[t._v("相关软件举例")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("云原生存储（Cloud native storage）")]),t._v(" "),_("td",[t._v("存放必须长久保存的持久数据")]),t._v(" "),_("td",[t._v("ROOK：在各种分布式存储系统上套一层统一的API")])]),t._v(" "),_("tr",[_("td",[t._v("容器运行时（Container runtime）")]),t._v(" "),_("td",[t._v("约束容器的活动范围")]),t._v(" "),_("td",[t._v("containerd：Docker引擎的底层运行时管理器"),_("br"),t._v("CRI-O：想成为Kubernetes默认容器驱动的Docker替代品")])]),t._v(" "),_("tr",[_("td",[t._v("云网络（Cloud native networking）")]),t._v(" "),_("td",[t._v("容器间的网络连接")]),t._v(" "),_("td",[t._v("CNI(Container Network Interface)容器网络接口标准")])])])]),t._v(" "),_("h3",{attrs:{id:"编排和管理层（orchestration-management）"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#编排和管理层（orchestration-management）"}},[t._v("#")]),t._v(" "),_("RouterLink",{attrs:{to:"/CNCF/编排和管理层.html"}},[t._v("编排和管理层（Orchestration & Management）")])],1),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("-")]),t._v(" "),_("th",[t._v("功能")]),t._v(" "),_("th",[t._v("相关软件举例")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("编排和调度（Orchestration & scheduling）")]),t._v(" "),_("td",[t._v("在集群中自动地运行和管理容器")]),t._v(" "),_("td",[t._v("Kubernetes、MESOS、Docker Swarm")])]),t._v(" "),_("tr",[_("td",[t._v("协调和服务发现（Coordination and service discovery）")]),t._v(" "),_("td",[t._v("让快速生生灭灭的大批容器互相能找到对方")]),t._v(" "),_("td",[t._v("CoreDNS：用DNS找到对方"),_("br"),t._v("etcd：在数据库中找到对方")])]),t._v(" "),_("tr",[_("td",[t._v("远程过程调用（RPC）")]),t._v(" "),_("td",[t._v("应用间的相互远程调用")]),t._v(" "),_("td",[t._v("Google家的gRPC、腾讯的TARS、阿里的Dubbo")])]),t._v(" "),_("tr",[_("td",[t._v("服务代理（Service proxy）")]),t._v(" "),_("td",[t._v("在应用不知道的情况下把它的请求转发到正确的地方并监控之")]),t._v(" "),_("td",[t._v("Envoy：一个牛逼的L3/L4/L7代理服务器"),_("br"),t._v("Contour：基于Envoy的K8S Ingress Controller"),_("br"),t._v("Nginx、Haproxy、traefik等")])]),t._v(" "),_("tr",[_("td",[t._v("API网关（API gateway）")]),t._v(" "),_("td",[t._v("在代理转发之前对请求进行验证鉴权转换等处理")]),t._v(" "),_("td",[t._v("基于Envoy的API网关：Ambassador、Gloo等")])]),t._v(" "),_("tr",[_("td",[t._v("服务网格（Service mesh）")]),t._v(" "),_("td",[t._v("在应用不知道的情况下进行配置、路由、遥测、记录、断路等网络功能")]),t._v(" "),_("td",[t._v("服务网格接口规范：SMI(Service Mesh Interface)"),_("br"),t._v("Linkerd：自带代理程序的Service mesh控制面板"),_("br"),t._v("Istio：基于Envoy代理的Service mesh控制面板")])])])]),t._v(" "),_("ul",[_("li",[_("RouterLink",{attrs:{to:"/CNCF/应用程序定义和开发层.html"}},[t._v("应用程序定义和开发层（Application Definition & Development）")]),t._v(" "),_("ul",[_("li",[t._v("数据库（Databases）")]),t._v(" "),_("li",[t._v("流和消息传递（Streaming & messaging）")]),t._v(" "),_("li",[t._v("应用程序定义和镜像构建（Application definition &image build）")]),t._v(" "),_("li",[t._v("持续集成和持续交付（CI/CD）")])])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/CNCF/可观察性与分析.html"}},[t._v("可观察性与分析（Observability &Analysis）")]),t._v(" "),_("ul",[_("li",[t._v("日志记录（Logging）")]),t._v(" "),_("li",[t._v("监视（Monitoring）")]),t._v(" "),_("li",[t._v("跟踪（Tracing）")]),t._v(" "),_("li",[t._v("混沌工程（Chaos engineering）")])])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/CNCF/平台类.html"}},[t._v("平台类（Platforms）")]),t._v(" "),_("ul",[_("li",[t._v("Kubernetes发行版")]),t._v(" "),_("li",[t._v("Kubernetes托管")]),t._v(" "),_("li",[t._v("Kubernetes安装程序")]),t._v(" "),_("li",[t._v("PaaS/容器服务")])])],1)])])}),[],!1,null,null,null);v.default=e.exports}}]);