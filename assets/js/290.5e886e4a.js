(window.webpackJsonp=window.webpackJsonp||[]).push([[290],{967:function(e,t,r){"use strict";r.r(t);var o=r(4),a=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/559429803",target:"_blank",rel:"noopener noreferrer"}},[e._v("原文"),r("OutboundLink")],1)]),e._v(" "),r("p",[r("strong",[e._v("介绍")])]),e._v(" "),r("p",[e._v("本文档旨在尽可能使用 "),r("strong",[e._v("浅显的词语，丰富的图像和实际例子")]),e._v(" 介绍数字视频概念，使这些知识能适用于各种场合。你可以随时反馈意见或建议，以改进这篇文档。")]),e._v(" "),r("h2",{attrs:{id:"基本术语"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#基本术语"}},[e._v("#")]),e._v(" "),r("strong",[e._v("基本术语")])]),e._v(" "),r("p",[e._v("一个 "),r("strong",[e._v("图像")]),e._v(" 可以视作一个 "),r("strong",[e._v("二维矩阵")]),e._v(" 。如果将 "),r("strong",[e._v("色彩")]),e._v(" 考虑进来，我们可以做出推广：将这个图像视作一个 "),r("strong",[e._v("三维矩阵")]),e._v(" ——多出来的维度用于储存色彩信息。")]),e._v(" "),r("p",[e._v("如果我们选择三原色（红、绿、蓝）代表这些色彩，这就定义了三个平面：第一个是红色平面，第二个是绿色平面，最后一个是蓝色平面。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-8ea6f953e394cdc005fb05859f214512_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("我们把这个矩阵里的每一个点称为 "),r("strong",[e._v("像素")]),e._v(" （图像元素）。像素的色彩由三原色的 "),r("strong",[e._v("强度")]),e._v(" （通常用数值表示）表示。例如，一个 "),r("strong",[e._v("红色像素")]),e._v(" 是指强度为 0 的绿色，强度为 0 的蓝色和强度最大的红色。 "),r("strong",[e._v("粉色像素")]),e._v(" 可以通过三种颜色的组合表示。如果规定强度的取值范围是 0 到 255， "),r("strong",[e._v("红色 255、绿色 192、蓝色 203")]),e._v("  则表示粉色。")]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("编码彩色图像的其它方法")]),e._v("\n还有许多其它模型也可以用来表示色彩，进而组成图像。例如，给每种颜色都标上序号（如下图），这样每个像素仅需一个字节就可以表示出来，而不是 RGB 模型通常所需的 3 个。在这样一个模型里我们可以用一个二维矩阵来代替三维矩阵去表示我们的色彩，这将节省存储空间，但色彩的数量将会受限。")])]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-439d1af8de18ae81ff28279b5f9226f8_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("例如以下几张图片。第一张包含所有颜色平面。剩下的分别是红、绿、蓝色平面（显示为灰调）（译注：颜色强度高的地方显示为亮色，强度低为暗色）。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-992228e4f87e73294c6aa4bda8f9fd31_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("我们可以看到，对于最终的成像，红色平面对强度的贡献更多（三个平面最亮的是红色平面），蓝色平面（最后一张图片）的贡献大多只在马里奥的眼睛和他衣服的一部分。所有颜色平面对马里奥的胡子（最暗的部分）均贡献较少。")]),e._v(" "),r("p",[e._v("存储颜色的强度，需要占用一定大小的数据空间，这个大小被称为颜色深度。假如每个颜色（平面）的强度占用 8 bit（取值范围为 0 到 255），那么颜色深度就是 24（8*3）bit，我们还可以推导出我们可以使用 2 的 24 次方种不同的颜色。")]),e._v(" "),r("blockquote",[r("p",[e._v("很棒的学习材料："),r("a",{attrs:{href:"http://www.cambridgeincolour.com/tutorials/camera-sensors.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("现实世界的照片是如何拍摄成 0 和 1 的"),r("OutboundLink")],1),e._v("。")])]),e._v(" "),r("p",[e._v("图片的另一个属性是 "),r("strong",[e._v("分辨率")]),e._v(" ，即一个平面内像素的数量。通常表示成宽*高，例如下面这张  "),r("strong",[e._v("4x4")]),e._v("  的图片。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-c6b5b40c5983ac9ab6f2472c0878d20c_r.jpg",alt:""}})]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("自己动手：玩转图像和颜色")]),e._v("\n你可以使用 "),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/write#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-jupyter",target:"_blank",rel:"noopener noreferrer"}},[e._v("jupyter"),r("OutboundLink")],1),e._v("（python, numpy, matplotlib 等等）"),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/image_as_3d_array.ipynb",target:"_blank",rel:"noopener noreferrer"}},[e._v("玩转图像"),r("OutboundLink")],1),e._v("。\n你也可以学习"),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/filters_are_easy.ipynb",target:"_blank",rel:"noopener noreferrer"}},[e._v("图像滤镜（边缘检测，锐化，模糊。。。）的原理"),r("OutboundLink")],1),e._v("。")])]),e._v(" "),r("p",[e._v("图像或视频还有一个属性是宽高比，它简单地描述了图像或像素的宽度和高度之间的比例关系。")]),e._v(" "),r("p",[e._v("当人们说这个电影或照片是 16:9 时，通常是指显示宽高比（DAR），然而我们也可以有不同形状的单个像素，我们称为像素宽高比（PAR）。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-2e2c034185dbc2ce2dfdd2256249d2a9_r.jpg",alt:""}})]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-9773ff3c28641ef1bdf07fdd6572c3fc_r.jpg",alt:""}})]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("DVD 的 DAR 是 4:3")]),e._v("\n虽然 DVD 的实际分辨率是 704x480，但它依然保持 4:3 的宽高比，因为它有一个 10:11（704x10／480x11）的 PAR。")])]),e._v(" "),r("p",[e._v("现在我们可以将 "),r("strong",[e._v("视频")]),e._v(" 定义为在 "),r("strong",[e._v("单位时间")]),e._v(" 内 "),r("strong",[e._v("连续的 n 帧")]),e._v(" ，这可以视作一个新的维度，n 即为帧率，若单位时间为秒，则等同于 FPS (每秒帧数 Frames Per Second)。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-a55d76103fe832096fcff40f3a53771b_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("播放一段视频每秒所需的数据量就是它的 "),r("strong",[e._v("比特率")]),e._v(" （即常说的码率）。")]),e._v(" "),r("blockquote",[r("p",[e._v("比特率 = 宽 * 高 * 颜色深度 * 帧每秒")])]),e._v(" "),r("p",[e._v("例如，一段每秒 30 帧，每像素 24 bits，分辨率是 480x240 的视频，如果我们不做任何压缩，它将需要  "),r("strong",[e._v("82,944,000 比特每秒")]),e._v(" 或 82.944 Mbps (30x480x240x24)。")]),e._v(" "),r("p",[e._v("当 "),r("strong",[e._v("比特率")]),e._v(" 几乎恒定时称为恒定比特率（ "),r("strong",[e._v("CBR")]),e._v(" ）；但它也可以变化，称为可变比特率（ "),r("strong",[e._v("VBR")]),e._v(" ）。")]),e._v(" "),r("blockquote",[r("p",[e._v("这个图形显示了一个受限的 VBR，当帧为黑色时不会花费太多的数据量。")])]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-09828f23ae63ba64f0fb66add196f5a4_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("在早期，工程师们想出了一项技术能将视频的感官帧率加倍而 "),r("strong",[e._v("没有消耗额外带宽")]),e._v(" 。这项技术被称为 "),r("strong",[e._v("隔行扫描")]),e._v(" ；总的来说，它在一个时间点发送一个画面——画面用于填充屏幕的一半，而下一个时间点发送的画面用于填充屏幕的另一半。")]),e._v(" "),r("p",[e._v("如今的屏幕渲染大多使用 "),r("strong",[e._v("逐行扫描技术")]),e._v(" 。这是一种显示、存储、传输运动图像的方法，每帧中的所有行都会被依次绘制。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-0fa0ce6ba26fb329a2b31d7cd73c5f0c_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("现在我们知道了数字化 "),r("strong",[e._v("图像")]),e._v(" 的原理；它的 "),r("strong",[e._v("颜色")]),e._v(" 的编排方式；给定 "),r("strong",[e._v("帧率")]),e._v(" 和 "),r("strong",[e._v("分辨率")]),e._v(" 时，展示一个视频需要花费多少 "),r("strong",[e._v("比特率")]),e._v(" ；它是恒定的（CBR）还是可变的（VBR）；还有很多其它内容，如隔行扫描和 PAR。")]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("自己动手：检查视频属性")]),e._v("\n你可以"),r("a",{attrs:{href:"https://github.com/leandromoreira/introduction_video_technology/blob/master/encoding_pratical_examples.md#inspect-stream",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用 ffmpeg 或 mediainfo 检查大多数属性的解释"),r("OutboundLink")],1),e._v("。")])]),e._v(" "),r("h2",{attrs:{id:"消除冗余"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#消除冗余"}},[e._v("#")]),e._v(" "),r("strong",[e._v("消除冗余")])]),e._v(" "),r("p",[e._v("我们认识到，不对视频进行压缩是不行的； "),r("strong",[e._v("一个单独的一小时长的视频")]),e._v(" ，分辨率为 720p 和 30fps 时将 "),r("strong",[e._v("需要 278GB")]),e._v("* 。仅仅使用无损数据压缩算法——如 DEFLATE（被PKZIP, Gzip, 和 PNG 使用）——也无法充分减少视频所需的带宽，我们需要找到其它压缩视频的方法。")]),e._v(" "),r("blockquote",[r("p",[e._v("*我们使用乘积得出这个数字 1280 x 720 x 24 x 30 x 3600 （宽，高，每像素比特数，fps 和秒数）")])]),e._v(" "),r("p",[e._v("为此，我们可以 "),r("strong",[e._v("利用视觉特性")]),e._v(" ：和区分颜色相比，我们区分亮度要更加敏锐。 "),r("strong",[e._v("时间上的重复")]),e._v(" ：一段视频包含很多只有一点小小改变的图像。 "),r("strong",[e._v("图像内的重复")]),e._v(" ：每一帧也包含很多颜色相同或相似的区域。")]),e._v(" "),r("h2",{attrs:{id:"颜色，亮度和我们的眼睛"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#颜色，亮度和我们的眼睛"}},[e._v("#")]),e._v(" "),r("strong",[e._v("颜色，亮度和我们的眼睛")])]),e._v(" "),r("p",[e._v("我们的眼睛"),r("a",{attrs:{href:"http://vanseodesign.com/web-design/color-luminance/",target:"_blank",rel:"noopener noreferrer"}},[e._v("对亮度比对颜色更敏感"),r("OutboundLink")],1),e._v("，你可以看看下面的图片自己测试。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-6d4b53325360bd314f9c3c4b124e396e_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("如果你看不出左图的 "),r("strong",[e._v("方块 A 和方块 B")]),e._v("  的颜色是 "),r("strong",[e._v("相同的")]),e._v(" ，那么好，是我们的大脑玩了一个小把戏，这让我们更多的去注意光与暗，而不是颜色。右边这里有一个使用同样颜色的连接器，那么我们（的大脑）就能轻易分辨出事实，它们是同样的颜色。")]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("简单解释我们的眼睛工作的原理")]),e._v(" "),r("a",{attrs:{href:"http://www.biologymad.com/nervoussystem/eyenotes.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("眼睛是一个复杂的器官"),r("OutboundLink")],1),e._v("，有许多部分组成，但我们最感兴趣的是视锥细胞和视杆细胞。眼睛有"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Photoreceptor_cell",target:"_blank",rel:"noopener noreferrer"}},[e._v("大约1.2亿个视杆细胞和6百万个视锥细胞"),r("OutboundLink")],1),e._v("。\n"),r("strong",[e._v("简单来说")]),e._v(" ，让我们把颜色和亮度放在眼睛的功能部位上。"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Rod_cell",target:"_blank",rel:"noopener noreferrer"}},[e._v("视杆细胞"),r("OutboundLink")],1),e._v(" "),r("strong",[e._v("主要负责亮度")]),e._v(" ，而"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Cone_cell",target:"_blank",rel:"noopener noreferrer"}},[e._v("视锥细胞"),r("OutboundLink")],1),e._v(" "),r("strong",[e._v("负责颜色")]),e._v(" ，有三种类型的视锥，每个都有不同的颜料，叫做："),r("a",{attrs:{href:"https://upload.wikimedia.org/wikipedia/commons/1/1e/Cones_SMJ2_E.svg",target:"_blank",rel:"noopener noreferrer"}},[e._v("S-视锥（蓝色），M-视锥（绿色）和L-视锥（红色）"),r("OutboundLink")],1),e._v("。\n既然我们的视杆细胞（亮度）比视锥细胞多很多，一个合理的推断是相比颜色，我们有更好的能力去区分黑暗和光亮。")])]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-c7414b7d4f7e48d9391ba7c84153e025_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("一旦我们知道我们对 "),r("strong",[e._v("亮度")]),e._v(" （图像中的亮度）更敏感，我们就可以利用它。")]),e._v(" "),r("h3",{attrs:{id:"颜色模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#颜色模型"}},[e._v("#")]),e._v(" "),r("strong",[e._v("颜色模型")])]),e._v(" "),r("p",[e._v("我们最开始学习的"),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/write#%E5%9F%BA%E6%9C%AC%E6%9C%AF%E8%AF%AD",target:"_blank",rel:"noopener noreferrer"}},[e._v("彩色图像的原理"),r("OutboundLink")],1),e._v("使用的是  "),r("strong",[e._v("RGB 模型")]),e._v(" ，但也有其他模型。有一种模型将亮度（光亮）和色度（颜色）分离开，它被称为  "),r("strong",[e._v("YCbCr")]),e._v(" *。")]),e._v(" "),r("blockquote",[r("ul",[r("li",[e._v("有很多种模型做同样的分离。")])])]),e._v(" "),r("p",[e._v("这个颜色模型使用  "),r("strong",[e._v("Y")]),e._v("  来表示亮度，还有两种颜色通道：Cb（蓝色色度） 和 Cr（红色色度）。YCbCr 可以由 RGB 转换得来，也可以转换回 RGB。使用这个模型我们可以创建拥有完整色彩的图像，如下图。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-21a63aa7848a2d5944401b7885d5acce_r.jpg",alt:""}})]),e._v(" "),r("h3",{attrs:{id:"ycbcr-和-rgb-之间的转换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ycbcr-和-rgb-之间的转换"}},[e._v("#")]),e._v(" "),r("strong",[e._v("YCbCr 和 RGB 之间的转换")])]),e._v(" "),r("p",[e._v("有人可能会问，在  "),r("strong",[e._v("不使用绿色(色度)")]),e._v("  的情况下，我们如何表现出所有的色彩？")]),e._v(" "),r("p",[e._v("为了回答这个问题，我们将介绍从 RGB 到 YCbCr 的转换。我们将使用 "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/ITU-R",target:"_blank",rel:"noopener noreferrer"}},[e._v("ITU-R 小组"),r("OutboundLink")],1),e._v("*建议的"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Rec._601",target:"_blank",rel:"noopener noreferrer"}},[e._v("标准 BT.601"),r("OutboundLink")],1),e._v(" 中的系数。")]),e._v(" "),r("p",[e._v("第一步是计算亮度，我们将使用 ITU 建议的常量，并替换 RGB 值。")]),e._v(" "),r("div",{staticClass:"language-language-text line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("Y = 0.299R + 0.587G + 0.114B\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("p",[e._v("一旦我们有了亮度后，我们就可以拆分颜色（蓝色色度和红色色度）：")]),e._v(" "),r("div",{staticClass:"language-language-text line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("Cb = 0.564(B - Y)\nCr = 0.713(R - Y)\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br")])]),r("p",[e._v("并且我们也可以使用 YCbCr 转换回来，甚至得到绿色。")]),e._v(" "),r("div",{staticClass:"language-language-text line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("R = Y + 1.402Cr\nB = Y + 1.772Cb\nG = Y - 0.344Cb - 0.714Cr\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br")])]),r("blockquote",[r("p",[e._v("*组织和标准在数字视频领域中很常见，它们通常定义什么是标准，例如，"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Rec._2020",target:"_blank",rel:"noopener noreferrer"}},[e._v("什么是 4K？我们应该使用什么帧率？分辨率？颜色模型？"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("通常， "),r("strong",[e._v("显示屏")]),e._v(" （监视器，电视机，屏幕等等） "),r("strong",[e._v("仅使用 RGB 模型")]),e._v(" ，并以不同的方式来组织，看看下面这些放大效果：")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-0caad98bed9bf7416d8ebd5267ea0c7e_r.jpg",alt:""}})]),e._v(" "),r("h3",{attrs:{id:"色度子采样"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#色度子采样"}},[e._v("#")]),e._v(" "),r("strong",[e._v("色度子采样")])]),e._v(" "),r("p",[e._v("一旦我们能从图像中分离出亮度和色度，我们就可以利用人类视觉系统对亮度比色度更敏感的特点，选择性地剔除信息。 "),r("strong",[e._v("色度子采样")]),e._v(" 是一种编码图像时，使 "),r("strong",[e._v("色度分辨率低于亮度")]),e._v(" 的技术。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-7c3708a68c9a11f907f202abb6778568_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("我们应该减少多少色度分辨率呢？已经有一些模式定义了如何处理分辨率和合并（ "),r("code",[e._v("最终的颜色 = Y + Cb + Cr")]),e._v(" ）。")]),e._v(" "),r("p",[e._v("这些模式称为子采样系统，并被表示为 3 部分的比率 -  "),r("code",[e._v("a:x:y")]),e._v(" ，其定义了色度平面的分辨率，与亮度平面上的、分辨率为  "),r("code",[e._v("a x 2")]),e._v("  的小块之间的关系。")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("a")]),e._v("  是水平采样参考 (通常是 4)，")]),e._v(" "),r("li",[r("code",[e._v("x")]),e._v("  是第一行的色度样本数（相对于 a 的水平分辨率），")]),e._v(" "),r("li",[r("code",[e._v("y")]),e._v("  是第二行的色度样本数。")])]),e._v(" "),r("blockquote",[r("p",[e._v("存在的一个例外是 4:1:0，其在每个亮度平面分辨率为 4 x 4 的块内提供一个色度样本。")])]),e._v(" "),r("p",[e._v("现代编解码器中使用的常用方案是： 4:4:4 (没有子采样), 4:2:2, 4:1:1, 4:2:0, 4:1:0 and 3:1:1。")]),e._v(" "),r("blockquote",[r("p",[e._v("YCbCr 4:2:0 合并\n这是使用 YCbCr 4:2:0 合并的一个图像的一块，注意我们每像素只花费 12bit。")])]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-84b8531d36e2eba66b106d5091f3c7d8_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("下图是同一张图片使用几种主要的色度子采样技术进行编码，第一行图像是最终的 YCbCr，而最后一行图像展示了色度的分辨率。这么小的损失确实是一个伟大的胜利。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-59b0cbd0a653b80c4535300ae0e91ed9_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("前面我们计算过我们需要 "),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/write#%E6%B6%88%E9%99%A4%E5%86%97%E4%BD%99",target:"_blank",rel:"noopener noreferrer"}},[e._v("278GB 去存储一个一小时长，分辨率在720p和30fps的视频文件"),r("OutboundLink")],1),e._v("。如果我们使用  "),r("code",[e._v("YCbCr 4:2:0")]),e._v("  我们能减少 "),r("code",[e._v("一半的大小（139GB）")]),e._v(" *，但仍然不够理想。")]),e._v(" "),r("blockquote",[r("ul",[r("li",[e._v("我们通过将宽、高、颜色深度和 fps 相乘得出这个值。前面我们需要 24 bit，现在我们只需要 12 bit。\n"),r("strong",[e._v("自己动手：检查 YCbCr 直方图")]),e._v("\n你可以"),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/encoding_pratical_examples.md#generates-yuv-histogram",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用 ffmpeg 检查 YCbCr 直方图"),r("OutboundLink")],1),e._v("。这个场景有更多的蓝色贡献，由"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Histogram",target:"_blank",rel:"noopener noreferrer"}},[e._v("直方图"),r("OutboundLink")],1),e._v("显示。")])])]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-f973fb20df721b31cbab6bdf32a0b60b_r.jpg",alt:""}})]),e._v(" "),r("h3",{attrs:{id:"颜色-亮度-视频亮度-伽马-视频回顾"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#颜色-亮度-视频亮度-伽马-视频回顾"}},[e._v("#")]),e._v(" "),r("strong",[e._v("颜色, 亮度, 视频亮度, 伽马 视频回顾")])]),e._v(" "),r("p",[e._v("观看这段精彩的视频，它解释什么是亮度并了解视频亮度、伽马和颜色。")]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("自己动手: 检查 YCbCr 强度")]),e._v("\n你可以使用"),r("a",{attrs:{href:"https://ffmpeg.org/ffmpeg-filters.html#oscilloscope",target:"_blank",rel:"noopener noreferrer"}},[e._v("FFmpeg's oscilloscope滤镜"),r("OutboundLink")],1),e._v("可视化给定视频行的Y强度.\nffplay -f lavfi -i 'testsrc2=size=1280x720:rate=30000/1001,format=yuv420p' -vf oscilloscope=x=0.5:y=200/720:s=1:c=1")])]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-cac4ac31c380eec355c2fed800b3b892_r.jpg",alt:""}})]),e._v(" "),r("h2",{attrs:{id:"帧类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#帧类型"}},[e._v("#")]),e._v(" "),r("strong",[e._v("帧类型")])]),e._v(" "),r("p",[e._v("现在我们进一步消除 "),r("code",[e._v("时间冗余")]),e._v(" ，但在这之前让我们来确定一些基本术语。假设我们一段 30fps 的影片，这是最开始的 4 帧。")]),e._v(" "),r("blockquote"),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-b173437c0b89f34c890fb2aec42043b6_b.jpg",alt:""}})]),e._v(" "),r("blockquote"),e._v(" "),r("p",[e._v("我们可以在帧内看到 "),r("strong",[e._v("很多重复内容")]),e._v(" ，如 "),r("strong",[e._v("蓝色背景")]),e._v(" ，从 0 帧到第 3 帧它都没有变化。为了解决这个问题，我们可以将它们 "),r("strong",[e._v("抽象地分类")]),e._v(" 为三种类型的帧。")]),e._v(" "),r("h3",{attrs:{id:"i-帧（帧内，关键帧）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#i-帧（帧内，关键帧）"}},[e._v("#")]),e._v(" "),r("strong",[e._v("I 帧（帧内，关键帧）")])]),e._v(" "),r("p",[e._v("I 帧（可参考，关键帧，帧内编码）是一个 "),r("strong",[e._v("自足的帧")]),e._v(" 。它不依靠任何东西来渲染，I 帧与静态图片相似。第一帧通常是 I 帧，但我们将看到 I 帧被定期插入其它类型的帧之间。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-9d324e1a009e0e9729e4f3367c7d6f70_b.png",alt:""}})]),e._v(" "),r("h3",{attrs:{id:"p-帧（预测）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#p-帧（预测）"}},[e._v("#")]),e._v(" "),r("strong",[e._v("P 帧（预测）")])]),e._v(" "),r("p",[e._v("P 帧利用了一个事实：当前的画面几乎总能 "),r("strong",[e._v("使用之前的一帧进行渲染")]),e._v(" 。例如，在第二帧，唯一的改变是球向前移动了。仅仅使用（第二帧）对前一帧的引用和差值，我们就能重建前一帧。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-c8fa2c329c3da53575b0c5e6d60a370c_b.jpg",alt:""}})]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("自己动手：具有单个 I 帧的视频")]),e._v("\n既然 P 帧使用较少的数据，为什么我们不能用"),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/encoding_pratical_examples.md#1-i-frame-and-the-rest-p-frames",target:"_blank",rel:"noopener noreferrer"}},[e._v("单个 I 帧和其余的 P 帧"),r("OutboundLink")],1),e._v("来编码整个视频？\n编码完这个视频之后，开始观看它，并 "),r("strong",[e._v("快进到视频的末尾部分")]),e._v(" ，你会注意到 "),r("strong",[e._v("它需要花一些时间")]),e._v(" 才真正跳转到这部分。这是因为  "),r("strong",[e._v("P 帧需要一个引用帧")]),e._v(" （比如 I 帧）才能渲染。\n你可以做的另一个快速试验，是使用单个 I 帧编码视频，然后"),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/encoding_pratical_examples.md#1-i-frames-per-second-vs-05-i-frames-per-second",target:"_blank",rel:"noopener noreferrer"}},[e._v("再次编码且每 2 秒插入一个 I 帧"),r("OutboundLink")],1),e._v("，并 "),r("strong",[e._v("比较成品的大小")]),e._v(" 。")])]),e._v(" "),r("h3",{attrs:{id:"b-帧（双向预测）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#b-帧（双向预测）"}},[e._v("#")]),e._v(" "),r("strong",[e._v("B 帧（双向预测）")])]),e._v(" "),r("p",[e._v("如何引用前面和后面的帧去做更好的压缩？！简单地说 B 帧就是这么做的。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-da8aa5e2cbb497ce96d5a8c5e6dd8ddc_b.jpg",alt:""}})]),e._v(" "),r("blockquote"),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("自己动手：使用 B 帧比较视频")]),e._v("\n你可以生成两个版本，一个使用 B 帧，另一个"),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/encoding_pratical_examples.md#no-b-frames-at-all",target:"_blank",rel:"noopener noreferrer"}},[e._v("全部不使用 B 帧"),r("OutboundLink")],1),e._v("，然后查看文件的大小以及画质。")])]),e._v(" "),r("h3",{attrs:{id:"小结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[e._v("#")]),e._v(" "),r("strong",[e._v("小结")])]),e._v(" "),r("p",[e._v("这些帧类型用于提供更好的压缩率，我们将在下一章看到这是如何发生的。现在，我们可以想到 I 帧是昂贵的，P 帧是便宜的，最便宜的是 B 帧。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-61f4c5176d8e741841c2f68dd3ec44c4_r.jpg",alt:""}})]),e._v(" "),r("h2",{attrs:{id:"时间冗余（帧间预测）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#时间冗余（帧间预测）"}},[e._v("#")]),e._v(" "),r("strong",[e._v("时间冗余（帧间预测）")])]),e._v(" "),r("p",[e._v("让我们探究去除 "),r("strong",[e._v("时间上的重复")]),e._v(" ，去除这一类冗余的技术就是 "),r("strong",[e._v("帧间预测")]),e._v(" 。")]),e._v(" "),r("p",[e._v("我们将尝试 "),r("strong",[e._v("花费较少的数据量")]),e._v(" 去编码在时间上连续的 0 号帧和 1 号帧。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-0a13d5c12aa201b349796ba0ad9ef623_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("我们可以做个减法，我们简单地 "),r("strong",[e._v("用 0 号帧减去 1 号帧")]),e._v(" ，得到残差，这样我们就只需要 "),r("strong",[e._v("对残差进行编码")]),e._v(" 。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-369d848eced6da95c1227636b361ffde_b.jpg",alt:""}})]),e._v(" "),r("p",[e._v("但我们有一个 "),r("strong",[e._v("更好的方法")]),e._v(" 来节省数据量。首先，我们将 "),r("code",[e._v("0 号帧")]),e._v("  视为一个个分块的集合，然后我们将尝试将  "),r("code",[e._v("帧 1")]),e._v("  和  "),r("code",[e._v("帧 0")]),e._v("  上的块相匹配。我们可以将这看作是 "),r("strong",[e._v("运动预测")]),e._v(" 。")]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("维基百科—块运动补偿")]),e._v("\n“运动补偿是一种描述相邻帧（相邻在这里表示在编码关系上相邻，在播放顺序上两帧未必相邻）差别的方法，具体来说是描述前面一帧（相邻在这里表示在编码关系上的前面，在播放顺序上未必在当前帧前面）的每个小块怎样移动到当前帧中的某个位置去。”")])]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-0ae82b0b9993425b1a072078899e20ee_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("我们预计那个球会从  "),r("code",[e._v("x=0, y=25")]),e._v("  移动到  "),r("code",[e._v("x=6, y=26")]),e._v(" ， "),r("strong",[e._v("x")]),e._v("  和  "),r("strong",[e._v("y")]),e._v("  的值就是 "),r("strong",[e._v("运动向量")]),e._v(" 。 "),r("strong",[e._v("进一步")]),e._v(" 节省数据量的方法是，只编码这两者运动向量的差。所以，最终运动向量就是  "),r("code",[e._v("x=6 (6-0), y=1 (26-25)")]),e._v(" 。")]),e._v(" "),r("blockquote",[r("p",[e._v("实际情况下，这个球会被切成 n 个分区，但处理过程是相同的。")])]),e._v(" "),r("p",[e._v("帧上的物体 "),r("strong",[e._v("以三维方式移动")]),e._v(" ，当球移动到背景时会变小。当我们尝试寻找匹配的块， "),r("strong",[e._v("找不到完美匹配的块")]),e._v(" 是正常的。这是一张运动预测与实际值相叠加的图片。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-4d551034b184de95c646c37fcf245ed8_b.jpg",alt:""}})]),e._v(" "),r("p",[e._v("但我们能看到当我们使用 "),r("strong",[e._v("运动预测")]),e._v(" 时， "),r("strong",[e._v("编码的数据量少于")]),e._v(" 使用简单的残差帧技术。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-3bfb0e9adef6f3b1489f8cc823b3f767_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("你可以"),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/frame_difference_vs_motion_estimation_plus_residual.ipynb",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用 jupyter 玩转这些概念"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("自己动手：查看运动向量")]),e._v("\n我们可以"),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/encoding_pratical_examples.md#generate-debug-video",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用 ffmpeg 生成包含帧间预测（运动向量）的视频"),r("OutboundLink")],1),e._v("。")])]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-9b62c9e5ef3ed0cbb86b9bcd60c7490e_r.jpg",alt:""}})]),e._v(" "),r("blockquote",[r("p",[e._v("或者我们也可使用 "),r("a",{attrs:{href:"https://software.intel.com/en-us/intel-video-pro-analyzer",target:"_blank",rel:"noopener noreferrer"}},[e._v("Intel® Video Pro Analyzer"),r("OutboundLink")],1),e._v("（需要付费，但也有只能查看前 10 帧的免费试用版）。")])]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-fb8ec92baa044c98663e78c1a557891e_r.jpg",alt:""}})]),e._v(" "),r("h2",{attrs:{id:"空间冗余（帧内预测）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#空间冗余（帧内预测）"}},[e._v("#")]),e._v(" "),r("strong",[e._v("空间冗余（帧内预测）")])]),e._v(" "),r("p",[e._v("如果我们分析一个视频里的 "),r("strong",[e._v("每一帧")]),e._v(" ，我们会看到有 "),r("strong",[e._v("许多区域是相互关联的")]),e._v(" 。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-61e34435bf681cc194e87f7380e7a378_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("让我们举一个例子。这个场景大部分由蓝色和白色组成。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-6ad0228cd153687a193b94db0503f332_b.jpg",alt:""}})]),e._v(" "),r("p",[e._v("这是一个  "),r("code",[e._v("I 帧")]),e._v(" ，我们 "),r("strong",[e._v("不能使用前面的帧来预测")]),e._v(" ，但我们仍然可以压缩它。我们将编码我们选择的那块红色区域。如果我们 "),r("strong",[e._v("看看它的周围")]),e._v(" ，我们可以 "),r("strong",[e._v("估计它周围颜色的变化")]),e._v(" 。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-316de0c491c40bd5979b1f00fd5420a5_b.jpg",alt:""}})]),e._v(" "),r("p",[e._v("我们预测:帧中的颜色在垂直方向上保持一致，这意味着 "),r("strong",[e._v("未知像素的颜色与临近的像素相同")]),e._v(" 。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-eab3c86d85f890e411beead9b7a21437_b.jpg",alt:""}})]),e._v(" "),r("p",[e._v("我们的 "),r("strong",[e._v("预测会出错")]),e._v(" ，所以我们需要先利用这项技术（ "),r("strong",[e._v("帧内预测")]),e._v(" ），然后 "),r("strong",[e._v("减去实际值")]),e._v(" ，算出残差，得出的矩阵比原始数据更容易压缩。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-7939195ff8a31d109bf73c6e7437d3c7_r.jpg",alt:""}})]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("自己动手：查看帧内预测")]),e._v("\n你可以"),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/encoding_pratical_examples.md#generate-debug-video",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用 ffmpeg 生成包含宏块及预测的视频"),r("OutboundLink")],1),e._v("。请查看 ffmpeg 文档以了解"),r("a",{attrs:{href:"https://trac.ffmpeg.org/wiki/Debug/MacroblocksAndMotionVectors",target:"_blank",rel:"noopener noreferrer"}},[e._v("每个块颜色的含义"),r("OutboundLink")],1),e._v("。")])]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-0e59dc569116446b397434dc04a7dfa5_r.jpg",alt:""}})]),e._v(" "),r("blockquote",[r("p",[e._v("或者我们也可使用 "),r("a",{attrs:{href:"https://software.intel.com/en-us/intel-video-pro-analyzer",target:"_blank",rel:"noopener noreferrer"}},[e._v("Intel® Video Pro Analyzer"),r("OutboundLink")],1),e._v("（需要付费，但也有只能查看前 10 帧的免费试用版）。")])]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-29fe3fe00525c3a211b5bddb46730dab_r.jpg",alt:""}})]),e._v(" "),r("h2",{attrs:{id:"视频编解码器是如何工作的？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#视频编解码器是如何工作的？"}},[e._v("#")]),e._v(" "),r("strong",[e._v("视频编解码器是如何工作的？")])]),e._v(" "),r("h2",{attrs:{id:"是什么？为什么？怎么做？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#是什么？为什么？怎么做？"}},[e._v("#")]),e._v(" "),r("strong",[e._v("是什么？为什么？怎么做？")])]),e._v(" "),r("p",[r("strong",[e._v("是什么？")]),e._v("  就是用于压缩或解压数字视频的软件或硬件。 "),r("strong",[e._v("为什么？")]),e._v("  人们需要在有限带宽或存储空间下提高视频的质量。还记得当我们计算每秒 30 帧，每像素 24 bit，分辨率是 480x240 的视频"),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/write#%E5%9F%BA%E6%9C%AC%E6%9C%AF%E8%AF%AD",target:"_blank",rel:"noopener noreferrer"}},[e._v("需要多少带宽"),r("OutboundLink")],1),e._v("吗？没有压缩时是  "),r("strong",[e._v("82.944 Mbps")]),e._v(" 。电视或互联网提供 HD/FullHD/4K 只能靠视频编解码器。 "),r("strong",[e._v("怎么做？")]),e._v("  我们将简单介绍一下主要的技术。")]),e._v(" "),r("blockquote",[r("p",[e._v("视频编解码 vs 容器\n初学者一个常见的错误是混淆数字视频编解码器和"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Digital_container_format",target:"_blank",rel:"noopener noreferrer"}},[e._v("数字视频容器"),r("OutboundLink")],1),e._v("。我们可以将 "),r("strong",[e._v("容器")]),e._v(" 视为包含视频（也很可能包含音频）元数据的包装格式， "),r("strong",[e._v("压缩过的视频")]),e._v(" 可以看成是它承载的内容。\n通常，视频文件的格式定义其视频容器。例如，文件  "),r("code",[e._v("video.mp4")]),e._v("  可能是 "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/MPEG-4_Part_14",target:"_blank",rel:"noopener noreferrer"}},[e._v("MPEG-4 Part 14"),r("OutboundLink")],1),e._v(" 容器，一个叫  "),r("code",[e._v("video.mkv")]),e._v("  的文件可能是 "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Matroska",target:"_blank",rel:"noopener noreferrer"}},[e._v("matroska"),r("OutboundLink")],1),e._v("。我们可以使用 "),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/encoding_pratical_examples.md#inspect-stream",target:"_blank",rel:"noopener noreferrer"}},[e._v("ffmpeg 或 mediainfo"),r("OutboundLink")],1),e._v(" 来完全确定编解码器和容器格式。")])]),e._v(" "),r("h2",{attrs:{id:"历史"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#历史"}},[e._v("#")]),e._v(" "),r("strong",[e._v("历史")])]),e._v(" "),r("p",[e._v("在我们跳进通用编解码器内部工作之前，让我们回头了解一些旧的视频编解码器。")]),e._v(" "),r("p",[e._v("视频编解码器 "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/H.261",target:"_blank",rel:"noopener noreferrer"}},[e._v("H.261"),r("OutboundLink")],1),e._v(" 诞生在 1990（技术上是 1988），被设计为以  "),r("strong",[e._v("64 kbit/s 的数据速率")]),e._v(" 工作。它已经使用如色度子采样、宏块，等等理念。在 1995 年， "),r("strong",[e._v("H.263")]),e._v("  视频编解码器标准被发布，并继续延续到 2001 年。")]),e._v(" "),r("p",[e._v("在 2003 年  "),r("strong",[e._v("H.264/AVC")]),e._v("  的第一版被完成。在同一年，一家叫做  "),r("strong",[e._v("TrueMotion")]),e._v("  的公司发布了他们的 "),r("strong",[e._v("免版税")]),e._v(" 有损视频压缩的视频编解码器，称为  "),r("strong",[e._v("VP3")]),e._v(" 。在 2008 年， "),r("strong",[e._v("Google 收购了")]),e._v(" 这家公司，在同一年发布  "),r("strong",[e._v("VP8")]),e._v(" 。在 2012 年 12 月，Google 发布了  "),r("strong",[e._v("VP9")]),e._v(" ， "),r("strong",[e._v("市面上大约有 3/4 的浏览器")]),e._v(" （包括手机）支持。")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/AOMedia_Video_1",target:"_blank",rel:"noopener noreferrer"}},[e._v("AV1"),r("OutboundLink")],1),e._v(" 是由  "),r("strong",[e._v("Google, Mozilla, Microsoft, Amazon, Netflix, AMD, ARM, NVidia, Intel, Cisco")]),e._v("  等公司组成的"),r("a",{attrs:{href:"http://aomedia.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("开放媒体联盟（AOMedia）"),r("OutboundLink")],1),e._v("设计的一种新的免版税和开源的视频编解码器。 "),r("strong",[e._v("第一版")]),e._v("  0.1.0 参考编解码器 "),r("strong",[e._v("发布于 2016 年 4 月 7 号")]),e._v(" 。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-c7754e6c8cbd60e5b7995e200e82362c_r.jpg",alt:""}})]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("AV1 的诞生")]),e._v("\n2015 年早期，Google 正在开发VP10，Xiph (Mozilla) 正在开发Daala，Cisco 开源了其称为 Thor 的免版税视频编解码器。\n接着 MPEG LA 宣布了 HEVC (H.265) 每年版税的的上限，比 H.264 高 8 倍，但很快他们又再次改变了条款：")])]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("不设年度收费上限")])]),e._v(" "),r("li",[r("strong",[e._v("收取内容费")]),e._v(" （收入的 0.5%）")]),e._v(" "),r("li",[r("strong",[e._v("每单位费用高于 h264 的 10 倍")])])]),e._v(" "),r("p",[r("a",{attrs:{href:"http://aomedia.org/about/",target:"_blank",rel:"noopener noreferrer"}},[e._v("开放媒体联盟"),r("OutboundLink")],1),e._v("由硬件厂商（Intel, AMD, ARM , Nvidia, Cisco），内容分发商（Google, Netflix, Amazon），浏览器维护者（Google, Mozilla），等公司创建。")]),e._v(" "),r("blockquote",[r("p",[e._v("这些公司有一个共同目标，一个免版税的视频编解码器，所以 AV1 诞生时使用了一个更"),r("a",{attrs:{href:"http://aomedia.org/license/patent/",target:"_blank",rel:"noopener noreferrer"}},[e._v("简单的专利许可证"),r("OutboundLink")],1),e._v("。 "),r("strong",[e._v("Timothy B. Terriberry")]),e._v("  做了一个精彩的介绍，"),r("a",{attrs:{href:"https://www.youtube.com/watch?v=lzPaldsmJbk",target:"_blank",rel:"noopener noreferrer"}},[e._v("关于 AV1 的概念，许可证模式和它当前的状态"),r("OutboundLink")],1),e._v("，就是本节的来源。\n前往 "),r("a",{attrs:{href:"https://arewecompressedyet.com/analyzer/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://arewecompressedyet.com/analyzer/"),r("OutboundLink")],1),e._v("， 你会惊讶于 "),r("strong",[e._v("使用你的浏览器就可以分析 AV1 编解码器")]),e._v(" 。")])]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-ad65dc136b26eeee7a18852026e5de13_r.jpg",alt:""}})]),e._v(" "),r("blockquote",[r("p",[e._v("附：如果你想了解更多编解码器的历史，你需要了解"),r("a",{attrs:{href:"https://www.vcodex.com/video-compression-patents/",target:"_blank",rel:"noopener noreferrer"}},[e._v("视频压缩专利"),r("OutboundLink")],1),e._v("背后的基本知识。")])]),e._v(" "),r("h2",{attrs:{id:"通用编解码器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#通用编解码器"}},[e._v("#")]),e._v(" "),r("strong",[e._v("通用编解码器")])]),e._v(" "),r("p",[e._v("我们接下来要介绍 "),r("strong",[e._v("通用视频编解码器背后的主要机制")]),e._v(" ，大多数概念都很实用，并被现代编解码器如 VP9, AV1 和 HEVC 使用。需要注意：我们将简化许多内容。有时我们会使用真实的例子（主要是 H.264）来演示技术。")]),e._v(" "),r("h2",{attrs:{id:"第一步-图片分区"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第一步-图片分区"}},[e._v("#")]),e._v(" "),r("strong",[e._v("第一步 - 图片分区")])]),e._v(" "),r("p",[e._v("第一步是 "),r("strong",[e._v("将帧")]),e._v(" 分成几个 "),r("strong",[e._v("分区")]),e._v(" ， "),r("strong",[e._v("子分区")]),e._v(" 甚至更多。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-0d24165e65d189e1c4000176522bed4d_b.jpg",alt:""}})]),e._v(" "),r("p",[r("strong",[e._v("但是为什么呢")]),e._v(" 有许多原因，比如，当我们分割图片时，我们可以更精确的处理预测，在微小移动的部分使用较小的分区，而在静态背景上使用较大的分区。")]),e._v(" "),r("p",[e._v("通常，编解码器 "),r("strong",[e._v("将这些分区组织")]),e._v(" 成切片（或瓦片），宏（或编码树单元）和许多子分区。这些分区的最大大小有所不同，HEVC 设置成 64x64，而 AVC 使用 16x16，但子分区可以达到 4x4 的大小。")]),e._v(" "),r("p",[e._v("还记得我们学过的 "),r("strong",[e._v("帧的分类")]),e._v(" 吗？你也可以 "),r("strong",[e._v("把这些概念应用到块")]),e._v(" ，因此我们可以有 I 切片，B 切片，I 宏块等等。")]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("自己动手：查看分区")]),e._v("\n我们也可以使用 "),r("a",{attrs:{href:"https://software.intel.com/en-us/intel-video-pro-analyzer",target:"_blank",rel:"noopener noreferrer"}},[e._v("Intel® Video Pro Analyzer"),r("OutboundLink")],1),e._v("（需要付费，但也有只能查看前 10 帧的免费试用版）。这是 "),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/encoding_pratical_examples.md#transcoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("VP9 分区"),r("OutboundLink")],1),e._v("的分析。")])]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-f677226719e8e8d968357c1a6d782b2a_r.jpg",alt:""}})]),e._v(" "),r("h2",{attrs:{id:"第二步-预测"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第二步-预测"}},[e._v("#")]),e._v(" "),r("strong",[e._v("第二步 - 预测")])]),e._v(" "),r("p",[e._v("一旦我们有了分区，我们就可以在它们之上做出预测。对于"),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/write#%E6%97%B6%E9%97%B4%E5%86%97%E4%BD%99%E5%B8%A7%E9%97%B4%E9%A2%84%E6%B5%8B",target:"_blank",rel:"noopener noreferrer"}},[e._v("帧间预测"),r("OutboundLink")],1),e._v("，我们需要 "),r("strong",[e._v("发送运动向量和残差")]),e._v(" ；至于"),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/write#%E7%A9%BA%E9%97%B4%E5%86%97%E4%BD%99%E5%B8%A7%E5%86%85%E9%A2%84%E6%B5%8B",target:"_blank",rel:"noopener noreferrer"}},[e._v("帧内预测"),r("OutboundLink")],1),e._v("，我们需要 "),r("strong",[e._v("发送预测方向和残差")]),e._v(" 。")]),e._v(" "),r("h2",{attrs:{id:"第三步-转换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第三步-转换"}},[e._v("#")]),e._v(" "),r("strong",[e._v("第三步 - 转换")])]),e._v(" "),r("p",[e._v("在我们得到残差块（ "),r("code",[e._v("预测分区-真实分区")]),e._v(" ）之后，我们可以用一种方式 "),r("strong",[e._v("变换")]),e._v(" 它，这样我们就知道 "),r("strong",[e._v("哪些像素我们应该丢弃")]),e._v(" ，还依然能保持 "),r("strong",[e._v("整体质量")]),e._v(" 。这个确切的行为有几种变换方式。")]),e._v(" "),r("p",[e._v("尽管有"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/List_of_Fourier-related_transforms#Discrete_transforms",target:"_blank",rel:"noopener noreferrer"}},[e._v("其它的变换方式"),r("OutboundLink")],1),e._v("，但我们重点关注离散余弦变换（DCT）。"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Discrete_cosine_transform",target:"_blank",rel:"noopener noreferrer"}},[e._v("DCT"),r("OutboundLink")],1),e._v(" 的主要功能有：")]),e._v(" "),r("ul",[r("li",[e._v("将 "),r("strong",[e._v("像素")]),e._v(" 块 "),r("strong",[e._v("转换")]),e._v(" 为相同大小的 "),r("strong",[e._v("频率系数块")]),e._v(" 。")]),e._v(" "),r("li",[r("strong",[e._v("压缩")]),e._v(" 能量，更容易消除空间冗余。")]),e._v(" "),r("li",[r("strong",[e._v("可逆的")]),e._v(" ，也意味着你可以还原回像素。")])]),e._v(" "),r("blockquote",[r("p",[e._v("2017 年 2 月 2 号，F. M. Bayer 和 R. J. Cintra 发表了他们的论文："),r("a",{attrs:{href:"https://arxiv.org/abs/1702.00817",target:"_blank",rel:"noopener noreferrer"}},[e._v("图像压缩的 DCT 类变换只需要 14 个加法"),r("OutboundLink")],1),e._v("。")])]),e._v(" "),r("p",[e._v("如果你不理解每个要点的好处，不用担心，我们会尝试进行一些实验，以便从中看到真正的价值。")]),e._v(" "),r("p",[e._v("我们来看下面的 "),r("strong",[e._v("像素块")]),e._v(" （8x8）：")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-4b4a18f968752980c8ea8999a01b16dc_b.jpg",alt:""}})]),e._v(" "),r("p",[e._v("下面是其渲染的块图像（8x8）：")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-9ceb6efd2fe63e566921ad594b1d451a_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("当我们对这个像素块 "),r("strong",[e._v("应用 DCT")]),e._v("  时， 得到如下 "),r("strong",[e._v("系数块")]),e._v(" （8x8）：")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-305ece52f87fc46c97daab4a0f5c2626_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("接着如果我们渲染这个系数块，就会得到这张图片：")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-47e40833199a65ac3b71d4d78e34515e_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("如你所见它看起来完全不像原图像，我们可能会注意到 "),r("strong",[e._v("第一个系数")]),e._v(" 与其它系数非常不同。第一个系数被称为直流分量，代表了输入数组中的 "),r("strong",[e._v("所有样本")]),e._v(" ，有点 "),r("strong",[e._v("类似于平均值")]),e._v(" 。")]),e._v(" "),r("p",[e._v("这个系数块有一个有趣的属性：高频部分和低频部分是分离的。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-dec44e47f2711fbe167b7265c6323860_b.jpg",alt:""}})]),e._v(" "),r("blockquote"),e._v(" "),r("p",[e._v("在一张图像中， "),r("strong",[e._v("大多数能量")]),e._v(" 会集中在"),r("a",{attrs:{href:"https://www.iem.thm.de/telekom-labor/zinke/mk/mpeg2beg/whatisit.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("低频部分"),r("OutboundLink")],1),e._v("，所以如果我们将图像转换成频率系数，并 "),r("strong",[e._v("丢掉高频系数")]),e._v(" ，我们就能 "),r("strong",[e._v("减少描述图像所需的数据量")]),e._v(" ，而不会牺牲太多的图像质量。")]),e._v(" "),r("blockquote",[r("p",[e._v("频率是指信号变化的速度。")])]),e._v(" "),r("p",[e._v("让我们通过实验学习这点，我们将使用 DCT 把原始图像转换为频率（系数块），然后丢掉最不重要的系数。")]),e._v(" "),r("p",[e._v("首先，我们将它转换为其 "),r("strong",[e._v("频域")]),e._v(" 。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-305ece52f87fc46c97daab4a0f5c2626_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("然后我们丢弃部分（67%）系数，主要是它的右下角部分。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-53704794a58dcd142033e2db19e05b75_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("然后我们从丢弃的系数块重构图像（记住，这需要可逆），并与原始图像相比较。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-f57d3ebf25d5321302d7c7af498fc8a1_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("如我们所见它酷似原始图像，但它引入了许多与原来的不同，我们 "),r("strong",[e._v("丢弃了67.1875%")]),e._v(" ，但我们仍然得到至少类似于原来的东西。我们可以更加智能的丢弃系数去得到更好的图像质量，但这是下一个主题。")]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("使用全部像素形成每个系数")]),e._v("\n需要注意的是，每个系数并不直接映射到单个像素，而是所有像素的加权和。这个神奇的图形展示了如何使用每个指数唯一的权重来计算第一个和第二个系数。")])]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-710f7c17dda0b6b5fd1555a2e7a951fb_b.jpg",alt:""}})]),e._v(" "),r("blockquote",[r("p",[e._v("来源："),r("a",{attrs:{href:"https://web.archive.org/web/20150129171151/https://www.iem.thm.de/telekom-labor/zinke/mk/mpeg2beg/whatisit.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://web.archive.org/web/20150129171151/https://www.iem.thm.de/telekom-labor/zinke/mk/mpeg2beg/whatisit.htm"),r("OutboundLink")],1),e._v("\n你也可以尝试"),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/dct_better_explained.ipynb",target:"_blank",rel:"noopener noreferrer"}},[e._v("通过查看在 DCT 基础上形成的简单图片来可视化 DCT"),r("OutboundLink")],1),e._v("。例如，这是使用每个系数权重"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Discrete_cosine_transform#Example_of_IDCT",target:"_blank",rel:"noopener noreferrer"}},[e._v("形成的字符 A"),r("OutboundLink")],1),e._v("。\n维基百科给出了一个DCT的演示动画：\n"),r("a",{attrs:{href:"https://upload.wikimedia.org/wikipedia/commons/5/5e/Idct-animation.gif",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://upload.wikimedia.org/wikipedia/commons/5/5e/Idct-animation.gif"),r("OutboundLink")],1),e._v(" "),r("strong",[e._v("自己动手：丢弃不同的系数")]),e._v("\n你可以玩转 "),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/uniform_quantization_experience.ipynb",target:"_blank",rel:"noopener noreferrer"}},[e._v("DCT 变换"),r("OutboundLink")],1)])]),e._v(" "),r("h2",{attrs:{id:"第四步-量化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第四步-量化"}},[e._v("#")]),e._v(" "),r("strong",[e._v("第四步 - 量化")])]),e._v(" "),r("p",[e._v("当我们丢弃一些系数时，在最后一步（变换），我们做了一些形式的量化。这一步，我们选择性地剔除信息（ "),r("strong",[e._v("有损部分")]),e._v(" ）或者简单来说，我们将 "),r("strong",[e._v("量化系数以实现压缩")]),e._v(" 。")]),e._v(" "),r("p",[e._v("我们如何量化一个系数块？一个简单的方法是均匀量化，我们取一个块并 "),r("strong",[e._v("将其除以单个的值")]),e._v(" （10），并舍入值。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-a20d0d87febc41dd85b989bdbeda8b6b_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("我们如何 "),r("strong",[e._v("逆转")]),e._v(" （重新量化）这个系数块？我们可以通过 "),r("strong",[e._v("乘以我们先前除以的相同的值")]),e._v(" （10）来做到。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-c1cdb474c8c2f73a894fd2780f2f9c3c_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("这 "),r("strong",[e._v("不是最好的方法")]),e._v(" ，因为它没有考虑到每个系数的重要性，我们可以使用一个 "),r("strong",[e._v("量化矩阵")]),e._v(" 来代替单个值，这个矩阵可以利用 DCT 的属性，多量化右下部，而少（量化）左上部，"),r("a",{attrs:{href:"https://www.hdm-stuttgart.de/~maucher/Python/MMCodecs/html/jpegUpToQuant.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JPEG 使用了类似的方法"),r("OutboundLink")],1),e._v("，你可以通过"),r("a",{attrs:{href:"https://github.com/google/guetzli/blob/master/guetzli/jpeg_data.h#L40",target:"_blank",rel:"noopener noreferrer"}},[e._v("查看源码看看这个矩阵"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("自己动手：量化")]),e._v("\n你可以玩转"),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/dct_experiences.ipynb",target:"_blank",rel:"noopener noreferrer"}},[e._v("量化"),r("OutboundLink")],1)])]),e._v(" "),r("h2",{attrs:{id:"第五步-熵编码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第五步-熵编码"}},[e._v("#")]),e._v(" "),r("strong",[e._v("第五步 - 熵编码")])]),e._v(" "),r("p",[e._v("在我们量化数据（图像块／切片／帧）之后，我们仍然可以以无损的方式来压缩它。有许多方法（算法）可用来压缩数据。我们将简单体验其中几个，你可以阅读这本很棒的书去深入理解："),r("a",{attrs:{href:"https://www.amazon.com/Understanding-Compression-Data-Modern-Developers/dp/1491961538/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Understanding Compression: Data Compression for Modern Developers"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("h3",{attrs:{id:"vlc-编码："}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vlc-编码："}},[e._v("#")]),e._v(" "),r("strong",[e._v("VLC 编码：")])]),e._v(" "),r("p",[e._v("让我们假设我们有一个符号流： "),r("strong",[e._v("a")]),e._v(" ,  "),r("strong",[e._v("e")]),e._v(" ,  "),r("strong",[e._v("r")]),e._v("  和  "),r("strong",[e._v("t")]),e._v(" ，它们的概率（从0到1）由下表所示。\n"),r("table",{attrs:{"data-draft-node":"block","data-draft-type":"table","data-row-style":"normal","data-size":"normal"}},[r("tbody",[r("tr",[r("th"),r("th",[e._v("a")]),r("th",[e._v("e")]),r("th",[e._v("r")]),r("th",[e._v("t")])]),r("tr",[r("td",[e._v("概率")]),r("td",[e._v("0.3")]),r("td",[e._v("0.3")]),r("td",[e._v("0.2")]),r("td",[e._v("0.2")])])])]),e._v("\n我们可以分配不同的二进制码，（最好是）小的码给最可能（出现的字符），大些的码给最少可能（出现的字符）。\n"),r("table",{attrs:{"data-draft-node":"block","data-draft-type":"table","data-row-style":"normal","data-size":"normal"}},[r("tbody",[r("tr",[r("th"),r("th",[e._v("a")]),r("th",[e._v("e")]),r("th",[e._v("r")]),r("th",[e._v("t")])]),r("tr",[r("td",[e._v("概率")]),r("td",[e._v("0.3")]),r("td",[e._v("0.3")]),r("td",[e._v("0.2")]),r("td",[e._v("0.2")])]),r("tr",[r("td",[e._v("二进制码")]),r("td",[e._v("0")]),r("td",[e._v("10")]),r("td",[e._v("110")]),r("td",[e._v("1110")])])])]),e._v("\n让我们压缩  "),r("strong",[e._v("eat")]),e._v("  流，假设我们为每个字符花费 8 bit，在没有做任何压缩时我们将花费  "),r("strong",[e._v("24 bit")]),e._v(" 。但是在这种情况下，我们使用各自的代码来替换每个字符，我们就能节省空间。")]),e._v(" "),r("p",[e._v("第一步是编码字符  "),r("strong",[e._v("e")]),e._v("  为  "),r("code",[e._v("10")]),e._v(" ，第二个字符是  "),r("strong",[e._v("a")]),e._v(" ，追加（不是数学加法）后是  "),r("code",[e._v("[10][0]")]),e._v(" ，最后是第三个字符  "),r("strong",[e._v("t")]),e._v(" ，最终组成已压缩的比特流  "),r("code",[e._v("[10][0][1110]")]),e._v("  或  "),r("code",[e._v("1001110")]),e._v(" ，这只需  "),r("strong",[e._v("7 bit")]),e._v(" （比原来的空间少 3.4 倍）。")]),e._v(" "),r("p",[e._v("请注意每个代码必须是唯一的前缀码，"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Huffman_coding",target:"_blank",rel:"noopener noreferrer"}},[e._v("Huffman 能帮你找到这些数字"),r("OutboundLink")],1),e._v("。虽然它有一些问题，但是"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Context-adaptive_variable-length_coding",target:"_blank",rel:"noopener noreferrer"}},[e._v("视频编解码器仍然提供该方法"),r("OutboundLink")],1),e._v("，它也是很多应用程序的压缩算法。")]),e._v(" "),r("p",[e._v("编码器和解码器都 "),r("strong",[e._v("必须知道")]),e._v(" 这个（包含编码的）字符表，因此，你也需要传送这个表。")]),e._v(" "),r("h3",{attrs:{id:"算术编码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#算术编码"}},[e._v("#")]),e._v(" "),r("strong",[e._v("算术编码")])]),e._v(" "),r("p",[e._v("让我们假设我们有一个符号流： "),r("strong",[e._v("a")]),e._v(" ,  "),r("strong",[e._v("e")]),e._v(" ,  "),r("strong",[e._v("r")]),e._v(" ,  "),r("strong",[e._v("s")]),e._v("  和  "),r("strong",[e._v("t")]),e._v(" ，它们的概率由下表所示。\n"),r("table",{attrs:{"data-draft-node":"block","data-draft-type":"table","data-row-style":"normal","data-size":"normal"}},[r("tbody",[r("tr",[r("th"),r("th",[e._v("a")]),r("th",[e._v("e")]),r("th",[e._v("r")]),r("th",[e._v("s")]),r("th",[e._v("t")])]),r("tr",[r("td",[e._v("概率")]),r("td",[e._v("0.3")]),r("td",[e._v("0.3")]),r("td",[e._v("0.15")]),r("td",[e._v("0.05")]),r("td",[e._v("0.2")])])])]),e._v("\n考虑到这个表，我们可以构建一个区间，区间包含了所有可能的字符，字符按出现概率排序。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-d8195fcc414cfe7e339650d63124e11c_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("让我们编码  "),r("strong",[e._v("eat")]),e._v("  流，我们选择第一个字符  "),r("strong",[e._v("e")]),e._v("  位于  "),r("strong",[e._v("0.3 到 0.6")]),e._v("  （但不包括 0.6）的子区间，我们选择这个子区间，按照之前同等的比例再次分割。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-72008822d6b17c92192962381baea175_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("让我们继续编码我们的流  "),r("strong",[e._v("eat")]),e._v(" ，现在使第二个  "),r("strong",[e._v("a")]),e._v("  字符位于  "),r("strong",[e._v("0.3 到 0.39")]),e._v("  的区间里，接着再次用同样的方法编码最后的字符  "),r("strong",[e._v("t")]),e._v(" ，得到最后的子区间  "),r("strong",[e._v("0.354 到 0.372")]),e._v(" 。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-e7f31ced0f5c309d343ca295519e3193_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("我们只需从最后的子区间 0.354 到 0.372 里选择一个数，让我们选择 0.36，不过我们可以选择这个子区间里的任何数。仅靠这个数，我们将可以恢复原始流  "),r("strong",[e._v("eat")]),e._v(" 。就像我们在区间的区间里画了一根线来编码我们的流。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-4ccc4b8cc4fbd03eff2e1fbeb71ce2ba_r.jpg",alt:""}})]),e._v(" "),r("p",[r("strong",[e._v("反向过程")]),e._v(" （又名解码）一样简单，用数字  "),r("strong",[e._v("0.36")]),e._v("  和我们原始区间，我们可以进行同样的操作，不过现在是使用这个数字来还原被编码的流。")]),e._v(" "),r("p",[e._v("在第一个区间，我们发现数字落入了一个子区间，因此，这个子区间是我们的第一个字符，现在我们再次切分这个子区间，像之前一样做同样的过程。我们会注意到  "),r("strong",[e._v("0.36")]),e._v("  落入了  "),r("strong",[e._v("a")]),e._v("  的区间，然后我们重复这一过程直到得到最后一个字符  "),r("strong",[e._v("t")]),e._v(" （形成我们原始编码过的流 eat）。")]),e._v(" "),r("p",[e._v("编码器和解码器都 "),r("strong",[e._v("必须知道")]),e._v(" 字符概率表，因此，你也需要传送这个表。")]),e._v(" "),r("p",[e._v("非常巧妙，不是吗？人们能想出这样的解决方案实在是太聪明了，一些"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Context-adaptive_binary_arithmetic_coding",target:"_blank",rel:"noopener noreferrer"}},[e._v("视频编解码器使用"),r("OutboundLink")],1),e._v("这项技术（或至少提供这一选择）。")]),e._v(" "),r("p",[e._v("关于无损压缩量化比特流的办法，这篇文章无疑缺少了很多细节、原因、权衡等等。作为一个开发者你"),r("a",{attrs:{href:"https://www.amazon.com/Understanding-Compression-Data-Modern-Developers/dp/1491961538/",target:"_blank",rel:"noopener noreferrer"}},[e._v("应该学习更多"),r("OutboundLink")],1),e._v("。刚入门视频编码的人可以尝试使用不同的"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Asymmetric_Numeral_Systems",target:"_blank",rel:"noopener noreferrer"}},[e._v("熵编码算法，如ANS"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("自己动手：CABAC vs CAVLC")]),e._v("\n你可以"),r("a",{attrs:{href:"https://github.com/leandromoreira/introduction_video_technology/blob/master/encoding_pratical_examples.md#cabac-vs-cavlc",target:"_blank",rel:"noopener noreferrer"}},[e._v("生成两个流，一个使用 CABAC，另一个使用 CAVLC"),r("OutboundLink")],1),e._v("，并比较生成每一个的时间以及最终的大小。")])]),e._v(" "),r("h2",{attrs:{id:"第六步-比特流格式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第六步-比特流格式"}},[e._v("#")]),e._v(" "),r("strong",[e._v("第六步 - 比特流格式")])]),e._v(" "),r("p",[e._v("完成所有这些步之后，我们需要将 "),r("strong",[e._v("压缩过的帧和内容打包进去")]),e._v(" 。需要明确告知解码器 "),r("strong",[e._v("编码定义")]),e._v(" ，如颜色深度，颜色空间，分辨率，预测信息（运动向量，帧内预测方向），档次*，级别*，帧率，帧类型，帧号等等更多信息。")]),e._v(" "),r("blockquote",[r("ul",[r("li",[e._v("译注：原文为 profile 和 level，没有通用的译名")])])]),e._v(" "),r("p",[e._v("我们将简单地学习 H.264 比特流。第一步是"),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/encoding_pratical_examples.md#generate-a-single-frame-h264-bitstream",target:"_blank",rel:"noopener noreferrer"}},[e._v("生成一个小的 H.264* 比特流"),r("OutboundLink")],1),e._v("，可以使用本 repo 和 "),r("a",{attrs:{href:"http://ffmpeg.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("ffmpeg"),r("OutboundLink")],1),e._v(" 来做。")]),e._v(" "),r("div",{staticClass:"language-language-text line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("./s/ffmpeg -i /files/i/minimal.png -pix_fmt yuv420p /files/v/minimal_yuv420.h264\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("blockquote",[r("ul",[r("li",[e._v("ffmpeg 默认将所有参数添加为  "),r("strong",[e._v("SEI NAL")]),e._v(" ，很快我们会定义什么是 NAL。")])])]),e._v(" "),r("p",[e._v("这个命令会使用下面的图片作为帧，生成一个具有 "),r("strong",[e._v("单个帧")]),e._v(" ，64x64 和颜色空间为 yuv420 的原始 h264 比特流。")]),e._v(" "),r("h3",{attrs:{id:"h-264-比特流"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#h-264-比特流"}},[e._v("#")]),e._v(" "),r("strong",[e._v("H.264 比特流")])]),e._v(" "),r("p",[e._v("AVC (H.264) 标准规定信息将在宏帧（网络概念上的）内传输，称为 "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Network_Abstraction_Layer",target:"_blank",rel:"noopener noreferrer"}},[e._v("NAL"),r("OutboundLink")],1),e._v("（网络抽象层）。NAL 的主要目标是提供“网络友好”的视频呈现方式，该标准必须适用于电视（基于流），互联网（基于数据包）等。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-147412debffd59283b0cc98e0b5460c4_r.jpg",alt:""}})]),e._v(" "),r("p",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Frame_synchronization",target:"_blank",rel:"noopener noreferrer"}},[e._v("同步标记"),r("OutboundLink")],1),e._v("用来定义 NAL 单元的边界。每个同步标记的值固定为  "),r("code",[e._v("0x00 0x00 0x01")]),e._v("  ，最开头的标记例外，它的值是  "),r("code",[e._v("0x00 0x00 0x00 0x01")]),e._v("  。如果我们在生成的 h264 比特流上运行  "),r("strong",[e._v("hexdump")]),e._v(" ，我们可以在文件的开头识别至少三个 NAL。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-afc80db4413a13703629161ca7116bad_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("我们之前说过，解码器需要知道不仅仅是图片数据，还有视频的详细信息，如：帧、颜色、使用的参数等。每个 NAL 的 "),r("strong",[e._v("第一位")]),e._v(" 定义了其分类和 "),r("strong",[e._v("类型")]),e._v(" 。\n"),r("table",{attrs:{"data-draft-node":"block","data-draft-type":"table","data-row-style":"normal","data-size":"normal"}},[r("tbody",[r("tr",[r("th",[e._v("NAL type id")]),r("th",[e._v("描述")])]),r("tr",[r("td",[e._v("0")]),r("td",[e._v("Undefined")])]),r("tr",[r("td",[e._v("1")]),r("td",[e._v("Coded slice of a non-IDR picture")])]),r("tr",[r("td",[e._v("2")]),r("td",[e._v("Coded slice data partition A")])]),r("tr",[r("td",[e._v("3")]),r("td",[e._v("Coded slice data partition B")])]),r("tr",[r("td",[e._v("4")]),r("td",[e._v("Coded slice data partition C")])]),r("tr",[r("td",[e._v("5")]),r("td",[e._v("IDR Coded slice of an IDR picture")])]),r("tr",[r("td",[e._v("6")]),r("td",[e._v("SEI Supplemental enhancement information")])]),r("tr",[r("td",[e._v("7")]),r("td",[e._v("SPS Sequence parameter set")])]),r("tr",[r("td",[e._v("8")]),r("td",[e._v("PPS Picture parameter set")])]),r("tr",[r("td",[e._v("9")]),r("td",[e._v("Access unit delimiter")])]),r("tr",[r("td",[e._v("10")]),r("td",[e._v("End of sequence")])]),r("tr",[r("td",[e._v("11")]),r("td",[e._v("End of stream")])]),r("tr",[r("td",[e._v("...")]),r("td",[e._v("...")])])])]),e._v("\n通常，比特流的第一个 NAL 是  "),r("strong",[e._v("SPS")]),e._v(" ，这个类型的 NAL 负责传达通用编码参数，如 "),r("strong",[e._v("档次，级别，分辨率")]),e._v(" 等。")]),e._v(" "),r("p",[e._v("如果我们跳过第一个同步标记，就可以通过解码 "),r("strong",[e._v("第一个字节")]),e._v(" 来了解第一个  "),r("strong",[e._v("NAL 的类型")]),e._v(" 。")]),e._v(" "),r("p",[e._v("例如同步标记之后的第一个字节是  "),r("code",[e._v("01100111")]),e._v(" ，第一位（ "),r("code",[e._v("0")]),e._v(" ）是  "),r("strong",[e._v("forbidden_zero_bit")]),e._v("  字段，接下来的两位（ "),r("code",[e._v("11")]),e._v(" ）告诉我们是  "),r("strong",[e._v("nal_ref_idc")]),e._v("  字段，其表示该 NAL 是否是参考字段，其余 5 位（ "),r("code",[e._v("00111")]),e._v(" ）告诉我们是  "),r("strong",[e._v("nal_unit_type")]),e._v("  字段，在这个例子里是 NAL 单元  "),r("strong",[e._v("SPS")]),e._v("  (7)。")]),e._v(" "),r("p",[e._v("SPS NAL 的第 2 位 ( "),r("code",[e._v("binary=01100100, hex=0x64, dec=100")]),e._v(" ) 是  "),r("strong",[e._v("profile_idc")]),e._v("  字段，显示编码器使用的配置，在这个例子里，我们使用"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/H.264/MPEG-4_AVC#Profiles",target:"_blank",rel:"noopener noreferrer"}},[e._v("高阶档次"),r("OutboundLink")],1),e._v("，一种没有 B（双向预测） 切片支持的高阶档次。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-b9127b476e36c2da6ce565515334325e_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("当我们阅读 SPS NAL 的 H.264 比特流规范时，会为 "),r("strong",[e._v("参数名称")]),e._v(" ， "),r("strong",[e._v("分类")]),e._v(" 和 "),r("strong",[e._v("描述")]),e._v(" 找到许多值，例如，看看字段  "),r("code",[e._v("pic_width_in_mbs_minus_1")]),e._v("  和  "),r("code",[e._v("pic_height_in_map_units_minus_1")]),e._v(" 。\n"),r("table",{attrs:{"data-draft-node":"block","data-draft-type":"table","data-row-style":"normal","data-size":"normal"}},[r("tbody",[r("tr",[r("th",[e._v("参数名称")]),r("th",[e._v("分类")]),r("th",[e._v("描述")])]),r("tr",[r("td",[e._v("pic_width_in_mbs_minus_1")]),r("td",[e._v("0")]),r("td",[e._v("ue(v)")])]),r("tr",[r("td",[e._v("pic_height_in_map_units_minus_1")]),r("td",[e._v("0")]),r("td",[e._v("ue(v)")])])])])]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("ue(v)")]),e._v(" : 无符号整形 "),r("a",{attrs:{href:"https://pythonhosted.org/bitstring/exp-golomb.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Exp-Golomb-coded"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("如果我们对这些字段的值进行一些计算，将最终得出 "),r("strong",[e._v("分辨率")]),e._v(" 。我们可以使用值为  "),r("code",[e._v("119（ (119 + 1) * macroblock_size = 120 * 16 = 1920）")]),e._v(" 的  "),r("code",[e._v("pic_width_in_mbs_minus_1")]),e._v("  表示  "),r("code",[e._v("1920 x 1080")]),e._v(" ，再次为了减少空间，我们使用  "),r("code",[e._v("119")]),e._v("  来代替编码  "),r("code",[e._v("1920")]),e._v(" 。")]),e._v(" "),r("p",[e._v("如果我们再次使用二进制视图检查我们创建的视频 (ex:  "),r("code",[e._v("xxd -b -c 11 v/minimal_yuv420.h264")]),e._v(" )，可以跳到帧自身上一个 NAL。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-810f851ae6349b85edb87a378cced72c_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("我们可以看到最开始的 6 个字节： "),r("code",[e._v("01100101 10001000 10000100 00000000 00100001 11111111")]),e._v(" 。我们已经知道第一个字节告诉我们 NAL 的类型，在这个例子里， ( "),r("code",[e._v("00101")]),e._v(" ) 是  "),r("strong",[e._v("IDR 切片 (5)")]),e._v(" ，可以进一步检查它：")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-da6ab9d83820623af73fd59d0dd73266_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("对照规范，我们能解码切片的类型（ "),r("strong",[e._v("slice_type")]),e._v(" ），帧号（ "),r("strong",[e._v("frame_num")]),e._v(" ）等重要字段。")]),e._v(" "),r("p",[e._v("为了获得一些字段（ "),r("code",[e._v("ue(v), me(v), se(v) 或 te(v)")]),e._v(" ）的值，我们需要称为 "),r("a",{attrs:{href:"https://pythonhosted.org/bitstring/exp-golomb.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Exponential-Golomb"),r("OutboundLink")],1),e._v(" 的特定解码器来解码它。当存在很多默认值时，这个方法编码变量值特别高效。")]),e._v(" "),r("blockquote",[r("p",[e._v("这个视频里  "),r("strong",[e._v("slice_type")]),e._v("  和  "),r("strong",[e._v("frame_num")]),e._v("  的值是 7（I 切片）和 0（第一帧）。")])]),e._v(" "),r("p",[e._v("我们可以将 "),r("strong",[e._v("比特流视为一个协议")]),e._v(" ，如果你想学习更多关于比特流的内容，请参考 "),r("a",{attrs:{href:"http://www.itu.int/rec/T-REC-H.264-201610-I",target:"_blank",rel:"noopener noreferrer"}},[e._v("ITU H.264 规范"),r("OutboundLink")],1),e._v("。这个宏观图展示了图片数据（压缩过的 YUV）所在的位置。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-06b829eae8d070e92f0c6789d3d57b37_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("我们可以探究其它比特流，如 "),r("a",{attrs:{href:"https://storage.googleapis.com/downloads.webmproject.org/docs/vp9/vp9-bitstream-specification-v0.6-20160331-draft.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("VP9 比特流"),r("OutboundLink")],1),e._v("，"),r("a",{attrs:{href:"http://handle.itu.int/11.1002/1000/11885-en?locatt=format:pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("H.265（HEVC）"),r("OutboundLink")],1),e._v("或是我们的新朋友 "),r("a",{attrs:{href:"https://medium.com/@mbebenita/av1-bitstream-analyzer-d25f1c27072b#.d5a89oxz8",target:"_blank",rel:"noopener noreferrer"}},[e._v("AV1 比特流"),r("OutboundLink")],1),e._v("，"),r("a",{attrs:{href:"http://www.gpac-licensing.com/2016/07/12/vp9-av1-bitstream-format/",target:"_blank",rel:"noopener noreferrer"}},[e._v("他们很相似吗？不"),r("OutboundLink")],1),e._v("，但只要学习了其中之一，学习其他的就简单多了。")]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("自己动手：检查 H.264 比特流")]),e._v("\n我们可以"),r("a",{attrs:{href:"https://github.com/leandromoreira/introduction_video_technology/blob/master/encoding_pratical_examples.md#generate-a-single-frame-video",target:"_blank",rel:"noopener noreferrer"}},[e._v("生成一个单帧视频"),r("OutboundLink")],1),e._v("，使用 "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/MediaInfo",target:"_blank",rel:"noopener noreferrer"}},[e._v("mediainfo"),r("OutboundLink")],1),e._v(" 检查它的 H.264 比特流。事实上，你甚至可以查看"),r("a",{attrs:{href:"https://github.com/MediaArea/MediaInfoLib/blob/master/Source/MediaInfo/Video/File_Avc.cpp",target:"_blank",rel:"noopener noreferrer"}},[e._v("解析 h264(AVC) 视频流的源代码"),r("OutboundLink")],1),e._v("。")])]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-06cd980e05a85181cdb3cd27f5b784c8_r.jpg",alt:""}})]),e._v(" "),r("blockquote",[r("p",[e._v("我们也可使用 "),r("a",{attrs:{href:"https://software.intel.com/en-us/intel-video-pro-analyzer",target:"_blank",rel:"noopener noreferrer"}},[e._v("Intel® Video Pro Analyzer"),r("OutboundLink")],1),e._v("，需要付费，但也有只能查看前 10 帧的免费试用版，这已经够达成学习目的了。")])]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-440dce29108fd2836f093e94530e3f79_r.jpg",alt:""}})]),e._v(" "),r("h2",{attrs:{id:"回顾"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#回顾"}},[e._v("#")]),e._v(" "),r("strong",[e._v("回顾")])]),e._v(" "),r("p",[e._v("我们可以看到我们学了许多 "),r("strong",[e._v("使用相同模型的现代编解码器")]),e._v(" 。事实上，让我们看看 Thor 视频编解码器框图，它包含所有我们学过的步骤。你现在应该能更好地理解数字视频领域内的创新和论文。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-af18458f12a14f4f323d26da10d028c5_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("之前我们计算过我们"),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/write#%E8%89%B2%E5%BA%A6%E5%AD%90%E9%87%87%E6%A0%B7",target:"_blank",rel:"noopener noreferrer"}},[e._v("需要 139GB 来保存一个一小时，720p 分辨率和30fps的视频文件"),r("OutboundLink")],1),e._v("，如果我们使用在这里学过的技术，如 "),r("strong",[e._v("帧间和帧内预测，转换，量化，熵编码和其它")]),e._v(" 我们能实现——假设我们 "),r("strong",[e._v("每像素花费 0.031 bit")]),e._v(" ——同样观感质量的视频， "),r("strong",[e._v("对比 139GB 的存储，只需 367.82MB")]),e._v(" 。")]),e._v(" "),r("blockquote",[r("p",[e._v("我们根据这里提供的示例视频选择 "),r("strong",[e._v("每像素使用 0.031 bit")]),e._v(" 。")])]),e._v(" "),r("h2",{attrs:{id:"h-265-如何实现比-h-264-更好的压缩率"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#h-265-如何实现比-h-264-更好的压缩率"}},[e._v("#")]),e._v(" "),r("strong",[e._v("H.265 如何实现比 H.264 更好的压缩率")])]),e._v(" "),r("p",[e._v("我们已经更多地了解了编解码器的工作原理，那么就容易理解新的编解码器如何使用更少的数据量传输更高分辨率的视频。")]),e._v(" "),r("p",[e._v("我们将比较 AVC 和 HEVC，要记住的是：我们几乎总是要在压缩率和更多的 CPU 周期（复杂度）之间作权衡。")]),e._v(" "),r("p",[e._v("HEVC 比 AVC 有更大和更多的 "),r("strong",[e._v("分区")]),e._v(" （和 "),r("strong",[e._v("子分区")]),e._v(" ）选项，更多 "),r("strong",[e._v("帧内预测方向")]),e._v(" ， "),r("strong",[e._v("改进的熵编码")]),e._v(" 等，所有这些改进使得 H.265 比 H.264 的压缩率提升 50%。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-94907085bd7153278472d43d2d3ee552_r.jpg",alt:""}})]),e._v(" "),r("h2",{attrs:{id:"在线流媒体"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#在线流媒体"}},[e._v("#")]),e._v(" "),r("strong",[e._v("在线流媒体")])]),e._v(" "),r("h2",{attrs:{id:"通用架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#通用架构"}},[e._v("#")]),e._v(" "),r("strong",[e._v("通用架构")])]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-b2f5570acc14b070bb3f2644efcb0627_r.jpg",alt:""}})]),e._v(" "),r("h2",{attrs:{id:"渐进式下载和自适应流"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#渐进式下载和自适应流"}},[e._v("#")]),e._v(" "),r("strong",[e._v("渐进式下载和自适应流")])]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-4c66e53b5dabff3d6b9dea5326761c7b_r.jpg",alt:""}})]),e._v(" "),r("h2",{attrs:{id:"内容保护"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内容保护"}},[e._v("#")]),e._v(" "),r("strong",[e._v("内容保护")])]),e._v(" "),r("p",[e._v("我们可以用一个简单的令牌认证系统来保护视频。用户需要拥有一个有效的令牌才可以播放视频，CDN 会拒绝没有令牌的用户的请求。它与大多数网站的身份认证系统非常相似。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-da8e2c8fb631d16cb196893c6c440031_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("仅仅使用令牌认证系统，用户仍然可以下载并重新分发视频。DRM 系统可以用来避免这种情况。")]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-5d60add7e4e753b42c04403dae2ae30d_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("实际情况下，人们通常同时使用这两种技术提供授权和认证。")]),e._v(" "),r("h3",{attrs:{id:"drm"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#drm"}},[e._v("#")]),e._v(" "),r("strong",[e._v("DRM")])]),e._v(" "),r("h3",{attrs:{id:"主要系统"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#主要系统"}},[e._v("#")]),e._v(" "),r("strong",[e._v("主要系统")])]),e._v(" "),r("ul",[r("li",[e._v("FPS -  "),r("strong",[e._v("FairPlay Streaming")])]),e._v(" "),r("li",[e._v("PR -  "),r("strong",[e._v("PlayReady")])]),e._v(" "),r("li",[e._v("WV -  "),r("strong",[e._v("Widevine")])])]),e._v(" "),r("h3",{attrs:{id:"是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#是什么"}},[e._v("#")]),e._v(" "),r("strong",[e._v("是什么")])]),e._v(" "),r("p",[e._v("DRM 指的是数字版权管理，是一种 "),r("strong",[e._v("为数字媒体提供版权保护")]),e._v(" 的方法，例如数字视频和音频。尽管用在了很多场合，但它并"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Digital_rights_management#DRM-free_works",target:"_blank",rel:"noopener noreferrer"}},[e._v("没有被普遍接受"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("h3",{attrs:{id:"为什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么"}},[e._v("#")]),e._v(" "),r("strong",[e._v("为什么")])]),e._v(" "),r("p",[e._v("内容的创作者（大多是工作室/制片厂）希望保护他们的知识产权，使他们的数字媒体免遭未经授权的分发。")]),e._v(" "),r("h3",{attrs:{id:"怎么做"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#怎么做"}},[e._v("#")]),e._v(" "),r("strong",[e._v("怎么做")])]),e._v(" "),r("p",[e._v("我们将用一种简单的、抽象的方式描述 DRM")]),e._v(" "),r("p",[e._v("现有一份 "),r("strong",[e._v("内容 C1")]),e._v(" （如 HLS 或 DASH 视频流），一个 "),r("strong",[e._v("播放器 P1")]),e._v(" （如 shaka-clappr, exo-player 或 iOS），装在 "),r("strong",[e._v("设备 D1")]),e._v(" （如智能手机、电视或台式机/笔记本）上，使用  "),r("strong",[e._v("DRM 系统 DRM1")]),e._v(" （如 FairPlay Streaming, PlayReady, Widevine）")]),e._v(" "),r("p",[e._v("内容 C1 由 DRM1 用一个 "),r("strong",[e._v("对称密钥 K1")]),e._v("  加密，生成 "),r("strong",[e._v("加密内容 C'1")])]),e._v(" "),r("p",[r("img",{attrs:{src:"zhimg.com/v2-5acfb4e16cf91da3e032088be0eee2d6_r.jpg",alt:""}})]),e._v(" "),r("p",[e._v("设备 D1 上的播放器 P1 有一个非对称密钥对，密钥对包含一个 "),r("strong",[e._v("私钥 PRK1")]),e._v(" （这个密钥是受保护的1，只有  "),r("strong",[e._v("D1")]),e._v("  知道密钥内容），和一个 "),r("strong",[e._v("公钥 PUK1")])]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("1受保护的")]),e._v(" : 这种保护可以 "),r("strong",[e._v("通过硬件")]),e._v(" 进行保护，例如, 将这个密钥存储在一个特殊的芯片（只读）中，芯片的工作方式就像一个用来解密的[黑箱]。 或 "),r("strong",[e._v("通过软件")]),e._v(" 进行保护（较低的安全系数）。DRM 系统提供了识别设备所使用的保护类型的方法。")])]),e._v(" "),r("p",[e._v("当  "),r("strong",[e._v("播放器 P1 希望播放")]),e._v("* 加密内容 C'1** 时，它需要与  "),r("strong",[e._v("DRM1")]),e._v("  协商，将公钥  "),r("strong",[e._v("PUK1")]),e._v("  发送给 DRM1, DRM1 会返回一个被公钥  "),r("strong",[e._v("PUK1")]),e._v(" "),r("strong",[e._v("加密过的 K1")]),e._v(" 。按照推论，结果就是 "),r("strong",[e._v("只有 D1 能够解密")]),e._v(" 。")]),e._v(" "),r("p",[r("code",[e._v("K1P1D1 = enc(K1, PUK1)")])]),e._v(" "),r("p",[r("strong",[e._v("P1")]),e._v("  使用它的本地 DRM 系统（这可以使用 "),r("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E7%B3%BB%E7%BB%9F%E8%8A%AF%E7%89%87",target:"_blank",rel:"noopener noreferrer"}},[e._v("SoC"),r("OutboundLink")],1),e._v(" ，一个专门的硬件和软件，这个系统可以使用它的私钥 PRK1 用来 "),r("strong",[e._v("解密")]),e._v(" 内容，它可以解密被加密过的 "),r("strong",[e._v("K1P1D1 的对称密钥 K1")]),e._v(" 。理想情况下，密钥不会被导出到内存以外的地方。")]),e._v(" "),r("div",{staticClass:"language-language-text line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" K1 = dec(K1P1D1, PRK1)\n​\n P1.play(dec(C'1, K1))\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br")])]),r("p",[r("img",{attrs:{src:"zhimg.com/v2-0ff4d791a9ac066d17059a42a6264481_r.jpg",alt:""}})]),e._v(" "),r("h2",{attrs:{id:"如何使用-jupyter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如何使用-jupyter"}},[e._v("#")]),e._v(" "),r("strong",[e._v("如何使用 jupyter")])]),e._v(" "),r("p",[e._v("确保你已安装 docker，只需运行  "),r("code",[e._v("./s/start_jupyter.sh")]),e._v(" ，然后按照控制台的说明进行操作。")]),e._v(" "),r("h2",{attrs:{id:"参考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" "),r("strong",[e._v("参考")])]),e._v(" "),r("p",[e._v("这里有最丰富的资源，这篇文档包含的信息，均摘录、依据或受它们启发。你可以用这些精彩的链接，书籍，视频等深化你的知识。")]),e._v(" "),r("p",[e._v("在线课程和教程：")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.coursera.org/learn/digital/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.coursera.org/learn/digital/"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://people.xiph.org/~tterribe/pubs/lca2012/auckland/intro_to_video1.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://people.xiph.org/~tterribe/pubs/lca2012/auckland/intro_to_video1.pdf"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://xiph.org/video/vid1.shtml",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://xiph.org/video/vid1.shtml"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://xiph.org/video/vid2.shtml",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://xiph.org/video/vid2.shtml"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://slhck.info/ffmpeg-encoding-course",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://slhck.info/ffmpeg-encoding-course"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.cambridgeincolour.com/tutorials/camera-sensors.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.cambridgeincolour.com/tutorials/camera-sensors.htm"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.slideshare.net/vcodex/a-short-history-of-video-coding",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.slideshare.net/vcodex/a-short-history-of-video-coding"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.slideshare.net/vcodex/introduction-to-video-compression-13394338",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.slideshare.net/vcodex/introduction-to-video-compression-1339433"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://developer.android.com/guide/topics/media/media-formats.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://developer.android.com/guide/topics/media/media-formats.html"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.slideshare.net/MadhawaKasun/audio-compression-23398426",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.slideshare.net/MadhawaKasun/audio-compression-23398426"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://inst.eecs.berkeley.edu/~ee290t/sp04/lectures/02-Motion_Compensation_girod.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://inst.eecs.berkeley.edu/~ee290t/sp04/lectures/02-Motion_Compensation_girod.pdf"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("书籍:")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.amazon.com/Understanding-Compression-Data-Modern-Developers/dp/1491961538/ref=sr_1_1?s=books&ie=UTF8&qid=1486395327&sr=1-1",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.amazon.com/Understanding-Compression-Data-Modern-Developers/dp/1491961538/ref=sr_1_1?s=books&ie=UTF8&qid=1486395327&sr=1-1"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.amazon.com/H-264-Advanced-Video-Compression-Standard/dp/0470516925",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.amazon.com/H-264-Advanced-Video-Compression-Standard/dp/0470516925"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.amazon.com/Practical-Guide-Video-Audio-Compression/dp/0240806301/ref=sr_1_3?s=books&ie=UTF8&qid=1486396914&sr=1-3&keywords=A+PRACTICAL+GUIDE+TO+VIDEO+AUDIO",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.amazon.com/Practical-Guide-Video-Audio-Compression/dp/0240806301/ref=sr_1_3?s=books&ie=UTF8&qid=1486396914&sr=1-3&keywords=A+PRACTICAL+GUIDE+TO+VIDEO+AUDIO"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.amazon.com/Video-Encoding-Numbers-Eliminate-Guesswork/dp/0998453005/ref=sr_1_1?s=books&ie=UTF8&qid=1486396940&sr=1-1&keywords=jan+ozer",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.amazon.com/Video-Encoding-Numbers-Eliminate-Guesswork/dp/0998453005/ref=sr_1_1?s=books&ie=UTF8&qid=1486396940&sr=1-1&keywords=jan+ozer"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("比特流规范:")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://www.itu.int/rec/T-REC-H.264-201610-I",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.itu.int/rec/T-REC-H.264-201610-I"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=12904&lang=en",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=12904&lang=en"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://storage.googleapis.com/downloads.webmproject.org/docs/vp9/vp9-bitstream-specification-v0.6-20160331-draft.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://storage.googleapis.com/downloads.webmproject.org/docs/vp9/vp9-bitstream-specification-v0.6-20160331-draft.pdf"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://iphome.hhi.de/wiegand/assets/pdfs/2012_12_IEEE-HEVC-Overview.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://iphome.hhi.de/wiegand/assets/pdfs/2012_12_IEEE-HEVC-Overview.pdf"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://phenix.int-evry.fr/jct/doc_end_user/current_document.php?id=7243",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://phenix.int-evry.fr/jct/doc_end_user/current_document.php?id=7243"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://gentlelogic.blogspot.com.br/2011/11/exploring-h264-part-2-h264-bitstream.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://gentlelogic.blogspot.com.br/2011/11/exploring-h264-part-2-h264-bitstream.html"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("软件:")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://ffmpeg.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://ffmpeg.org/"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://ffmpeg.org/ffmpeg-all.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://ffmpeg.org/ffmpeg-all.html"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://ffmpeg.org/ffprobe.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://ffmpeg.org/ffprobe.html"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://trac.ffmpeg.org/wiki/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://trac.ffmpeg.org/wiki/"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://software.intel.com/en-us/intel-video-pro-analyzer",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://software.intel.com/en-us/intel-video-pro-analyzer"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://medium.com/@mbebenita/av1-bitstream-analyzer-d25f1c27072b#.d5a89oxz8",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://medium.com/@mbebenita/av1-bitstream-analyzer-d25f1c27072b#.d5a89oxz8"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("非-ITU 编解码器:")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://aomedia.googlesource.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://aomedia.googlesource.com/"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/webmproject/libvpx/tree/master/vp9",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/webmproject/libvpx/tree/master/vp9"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://people.xiph.org/~xiphmont/demo/daala/demo1.shtml",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://people.xiph.org/~xiphmont/demo/daala/demo1.shtml"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://people.xiph.org/~jm/daala/revisiting/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://people.xiph.org/~jm/daala/revisiting/"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=lzPaldsmJbk",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.youtube.com/watch?v=lzPaldsmJbk"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://fosdem.org/2017/schedule/event/om_av1/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://fosdem.org/2017/schedule/event/om_av1/"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("编码概念:")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://x265.org/hevc-h265/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://x265.org/hevc-h265/"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://slhck.info/video/2017/03/01/rate-control.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://slhck.info/video/2017/03/01/rate-control.html"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://slhck.info/video/2017/02/24/vbr-settings.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://slhck.info/video/2017/02/24/vbr-settings.html"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://slhck.info/video/2017/02/24/crf-guide.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://slhck.info/video/2017/02/24/crf-guide.html"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://arxiv.org/pdf/1702.00817v1.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://arxiv.org/pdf/1702.00817v1.pdf"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://trac.ffmpeg.org/wiki/Debug/MacroblocksAndMotionVectors",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://trac.ffmpeg.org/wiki/Debug/MacroblocksAndMotionVectors"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://web.ece.ucdavis.edu/cerl/ReliableJPEG/Cung/jpeg.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://web.ece.ucdavis.edu/cerl/ReliableJPEG/Cung/jpeg.html"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.adobe.com/devnet/adobe-media-server/articles/h264_encoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.adobe.com/devnet/adobe-media-server/articles/h264_encoding.html"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://prezi.com/8m7thtvl4ywr/mp3-and-aac-explained/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://prezi.com/8m7thtvl4ywr/mp3-and-aac-explained/"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("测试用视频序列:")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://bbb3d.renderfarming.net/download.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://bbb3d.renderfarming.net/download.html"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.its.bldrdoc.gov/vqeg/video-datasets-and-organizations.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.its.bldrdoc.gov/vqeg/video-datasets-and-organizations.aspx"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("杂项:")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://stackoverflow.com/a/24890903",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://stackoverflow.com/a/24890903"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://stackoverflow.com/questions/38094302/how-to-understand-header-of-h264",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://stackoverflow.com/questions/38094302/how-to-understand-header-of-h264"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://techblog.netflix.com/2016/08/a-large-scale-comparison-of-x264-x265.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://techblog.netflix.com/2016/08/a-large-scale-comparison-of-x264-x265.html"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://vanseodesign.com/web-design/color-luminance/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://vanseodesign.com/web-design/color-luminance/"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.biologymad.com/nervoussystem/eyenotes.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.biologymad.com/nervoussystem/eyenotes.htm"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.compression.ru/video/codec_comparison/h264_2012/mpeg4_avc_h264_video_codecs_comparison.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.compression.ru/video/codec_comparison/h264_2012/mpeg4_avc_h264_video_codecs_comparison.pdf"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.csc.villanova.edu/~rschumey/csc4800/dct.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.csc.villanova.edu/~rschumey/csc4800/dct.html"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.explainthatstuff.com/digitalcameras.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.explainthatstuff.com/digitalcameras.html"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.hkvstar.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.hkvstar.com"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.hometheatersound.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.hometheatersound.com/"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.lighterra.com/papers/videoencodingh264/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.lighterra.com/papers/videoencodingh264/"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.red.com/learn/red-101/video-chroma-subsampling",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.red.com/learn/red-101/video-chroma-subsampling"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.slideshare.net/ManoharKuse/hevc-intra-coding",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.slideshare.net/ManoharKuse/hevc-intra-coding"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.slideshare.net/mwalendo/h264vs-hevc",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.slideshare.net/mwalendo/h264vs-hevc"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.slideshare.net/rvarun7777/final-seminar-46117193",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.slideshare.net/rvarun7777/final-seminar-46117193"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.springer.com/cda/content/document/cda_downloaddocument/9783642147029-c1.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.springer.com/cda/content/document/cda_downloaddocument/9783642147029-c1.pdf"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.streamingmedia.com/Articles/Editorial/Featured-Articles/A-Progress-Report-The-Alliance-for-Open-Media-and-the-AV1-Codec-110383.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.streamingmedia.com/Articles/Editorial/Featured-Articles/A-Progress-Report-The-Alliance-for-Open-Media-and-the-AV1-Codec-110383.aspx"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.streamingmediaglobal.com/Articles/ReadArticle.aspx?ArticleID=116505&PageNum=1",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.streamingmediaglobal.com/Articles/ReadArticle.aspx?ArticleID=116505&PageNum=1"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://yumichan.net/video-processing/video-compression/introduction-to-h264-nal-unit/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://yumichan.net/video-processing/video-compression/introduction-to-h264-nal-unit/"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://cardinalpeak.com/blog/the-h-264-sequence-parameter-set/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://cardinalpeak.com/blog/the-h-264-sequence-parameter-set/"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://cardinalpeak.com/blog/worlds-smallest-h-264-encoder/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://cardinalpeak.com/blog/worlds-smallest-h-264-encoder/"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://codesequoia.wordpress.com/category/video/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://codesequoia.wordpress.com/category/video/"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://developer.apple.com/library/content/technotes/tn2224/_index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://developer.apple.com/library/content/technotes/tn2224/_index.html"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikibooks.org/wiki/MeGUI/x264_Settings",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://en.wikibooks.org/wiki/MeGUI/x264_Settings"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Adaptive_bitrate_streaming",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://en.wikipedia.org/wiki/Adaptive_bitrate_streaming"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/AOMedia_Video_1",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://en.wikipedia.org/wiki/AOMedia_Video_1"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Chroma_subsampling#/media/File:Colorcomp.jpg",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://en.wikipedia.org/wiki/Chroma_subsampling#/media/File:Colorcomp.jpg"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Cone_cell",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://en.wikipedia.org/wiki/Cone_cell"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/File:H.264_block_diagram_with_quality_score.jpg",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://en.wikipedia.org/wiki/File:H.264_block_diagram_with_quality_score.jpg"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Inter_frame",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://en.wikipedia.org/wiki/Inter_frame"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Intra-frame_coding",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://en.wikipedia.org/wiki/Intra-frame_coding"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Photoreceptor_cell",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://en.wikipedia.org/wiki/Photoreceptor_cell"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Pixel_aspect_ratio",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://en.wikipedia.org/wiki/Pixel_aspect_ratio"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Presentation_timestamp",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://en.wikipedia.org/wiki/Presentation_timestamp"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Rod_cell",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://en.wikipedia.org/wiki/Rod_cell"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://it.wikipedia.org/wiki/File:Pixel_geometry_01_Pengo.jpg",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://it.wikipedia.org/wiki/File:Pixel_geometry_01_Pengo.jpg"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://leandromoreira.com.br/2016/10/09/how-to-measure-video-quality-perception/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://leandromoreira.com.br/2016/10/09/how-to-measure-video-quality-perception/"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://sites.google.com/site/linuxencoding/x264-ffmpeg-mapping",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://sites.google.com/site/linuxencoding/x264-ffmpeg-mapping"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://softwaredevelopmentperestroika.wordpress.com/2014/02/11/image-processing-with-python-numpy-scipy-image-convolution/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://softwaredevelopmentperestroika.wordpress.com/2014/02/11/image-processing-with-python-numpy-scipy-image-convolution/"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://tools.ietf.org/html/draft-fuldseth-netvc-thor-03",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://tools.ietf.org/html/draft-fuldseth-netvc-thor-03"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.encoding.com/android/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.encoding.com/android/"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.encoding.com/http-live-streaming-hls/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.encoding.com/http-live-streaming-hls/"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.iem.thm.de/telekom-labor/zinke/mk/mpeg2beg/whatisit.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.iem.thm.de/telekom-labor/zinke/mk/mpeg2beg/whatisit.htm"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lifewire.com/cmos-image-sensor-493271",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.lifewire.com/cmos-image-sensor-493271"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.linkedin.com/pulse/brief-history-video-codecs-yoav-nativ",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.linkedin.com/pulse/brief-history-video-codecs-yoav-nativ"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.linkedin.com/pulse/video-streaming-methodology-reema-majumdar",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.linkedin.com/pulse/video-streaming-methodology-reema-majumdar"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.vcodex.com/h264avc-intra-precition/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.vcodex.com/h264avc-intra-precition/"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=9vgtJJ2wwMA",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.youtube.com/watch?v=9vgtJJ2wwMA"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=LFXN9PiOGtY",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.youtube.com/watch?v=LFXN9PiOGtY"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=Lto-ajuqW3w&list=PLzH6n4zXuckpKAj1_88VS-8Z6yn9zX_P6",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.youtube.com/watch?v=Lto-ajuqW3w&list=PLzH6n4zXuckpKAj1_88VS-8Z6yn9zX_P6"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=LWxu4rkZBLw",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.youtube.com/watch?v=LWxu4rkZBLw"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=a.exports}}]);