(window.webpackJsonp=window.webpackJsonp||[]).push([[247],{923:function(s,a,t){"use strict";t.r(a);var n=t(4),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"go语言的核心思想"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#go语言的核心思想"}},[s._v("#")]),s._v(" Go语言的核心思想")]),s._v(" "),t("h3",{attrs:{id:"并发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#并发"}},[s._v("#")]),s._v(" 并发")]),s._v(" "),t("blockquote",[t("p",[s._v("Go 语言被设计成一门应用于搭载 Web 服务器，存储集群或类似用途的巨型中央服务器的系统编程语言。")]),s._v(" "),t("p",[s._v("对于高性能分布式系统领域而言，Go 语言无疑比大多数其它语言有着更高的开发效率。它提供了海量并行的支持，这对于游戏服务端的开发而言是再好不过了。")])]),s._v(" "),t("h2",{attrs:{id:"go语言的线程模型：csp线程模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#go语言的线程模型：csp线程模型"}},[s._v("#")]),s._v(" Go语言的线程模型：CSP线程模型")]),s._v(" "),t("h3",{attrs:{id:"传统的线程模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#传统的线程模型"}},[s._v("#")]),s._v(" 传统的线程模型")]),s._v(" "),t("h3",{attrs:{id:"go语言推荐的线程模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#go语言推荐的线程模型"}},[s._v("#")]),s._v(" Go语言推荐的线程模型")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.runoob.com/go/go-select-statement.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Go条件语句select"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("CSP communicating sequential processes")]),s._v(" "),t("h2",{attrs:{id:"go的包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#go的包"}},[s._v("#")]),s._v(" Go的包")]),s._v(" "),t("p",[s._v("在 Go 中，如果一个名字以大写字母开头，那么它就是已导出的。例如，Pizza 就是个已导出名，Pi 也同样，它导出自 math 包。")]),s._v(" "),t("p",[s._v("pizza 和 pi 并未以大写字母开头，所以它们是未导出的。")]),s._v(" "),t("p",[s._v("在导入一个包时，你只能引用其中已导出的名字。任何“未导出”的名字在该包外均无法访问。就算是在一个已导出的类中定义的方法，如果是以小写字母开头，也是不能导出的。")]),s._v(" "),t("h2",{attrs:{id:"go的函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#go的函数"}},[s._v("#")]),s._v(" Go的函数")]),s._v(" "),t("p",[s._v("函数外的每个语句都必须以关键字开始（var, func 等等），因此 := 结构不能在函数外使用。")]),s._v(" "),t("h2",{attrs:{id:"go的指针"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#go的指针"}},[s._v("#")]),s._v(" Go的指针")]),s._v(" "),t("p",[s._v("go的指针用法和C语言基本相同，用"),t("code",[s._v("&")]),s._v("取地址、"),t("code",[s._v("*")]),s._v("解指针；指针和值修改的各种特性也和C语言相同。此处只介绍几个go语言独特的地方。")]),s._v(" "),t("h3",{attrs:{id:"type-和new-type"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#type-和new-type"}},[s._v("#")]),s._v(" "),t("code",[s._v("&Type{}")]),s._v("和"),t("code",[s._v("new(Type)")])]),s._v(" "),t("p",[s._v("下面这几个例子是等价的：")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[s._v("a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("Type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("i\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\na"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[s._v("a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("new")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("Type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("new")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\na"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("看出来什么了吗？没错，在go语言里面"),t("code",[s._v("a:=&Type{}")]),s._v("和"),t("code",[s._v("a:=new(Type)")]),s._v("都是分配堆空间，每次"),t("code",[s._v("a:=&Type{}")]),s._v("和"),t("code",[s._v("a:=new(Type)")]),s._v("操作得到的都是不同的地址。比如调用上面两个"),t("code",[s._v("f")]),s._v("函数的任一个：")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   pp"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n   fmt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("这里的输出是0。这就和C语言不一样了，因为在C语言里面，函数里的变量都分配的是栈空间，比如下面这个函数：")]),s._v(" "),t("div",{staticClass:"language-C line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("这里会返回程序中的局部变量在函数栈中的地址，在编译时会报"),t("code",[s._v("warning: address of local variable ‘i’ returned [-Wreturn-local-addr]")]),s._v("。")]),s._v(" "),t("p",[s._v("一般来说，go里面"),t("code",[s._v("a:=&Type{}")]),s._v("用的比"),t("code",[s._v("a:=new(Type)")]),s._v("多，因为"),t("code",[s._v("a:=new(Type)")]),s._v("在新建Type实例时只能初始化为0值，而"),t("code",[s._v("a:=&Type{}")]),s._v("可以指定初始值。")])])}),[],!1,null,null,null);a.default=e.exports}}]);