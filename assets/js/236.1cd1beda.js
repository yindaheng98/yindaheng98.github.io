(window.webpackJsonp=window.webpackJsonp||[]).push([[236],{914:function(t,s,a){"use strict";a.r(s);var r=a(4),n=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"总述：数据库分类和典型产品"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总述：数据库分类和典型产品"}},[t._v("#")]),t._v(" 总述：数据库分类和典型产品")]),t._v(" "),a("ul",[a("li",[t._v("关系型数据库\n"),a("ul",[a("li",[t._v("关键词：SQL(结构化查询语言)、RDB(关系型数据库)")]),t._v(" "),a("li",[t._v("典型产品：MySQL、Oracle、SQL Server")])])]),t._v(" "),a("li",[t._v("非关系型数据库\n"),a("ul",[a("li",[t._v("关键词：NoSQL(Not only SQL)")]),t._v(" "),a("li",[t._v("典型产品：\n"),a("ul",[a("li",[t._v("键值对数据库：Memcached(临时性键值存储)、Redis(临时+永久键值存储)")]),t._v(" "),a("li",[t._v("文档数据库：MongoDB、CouchDB")]),t._v(" "),a("li",[t._v("图数据库：Neo4J、InfoGrid")]),t._v(" "),a("li",[t._v("列数据库：Cassandra、HBase")])])])])])]),t._v(" "),a("h2",{attrs:{id:"关系型数据库的数据模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系型数据库的数据模型"}},[t._v("#")]),t._v(" 关系型数据库的数据模型")]),t._v(" "),a("p",[t._v("建立在关系模型基础上的数据库，借助于集合代数等数学概念和方法来处理数据库中的数据。")]),t._v(" "),a("h2",{attrs:{id:"键值对数据库的数据模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#键值对数据库的数据模型"}},[t._v("#")]),t._v(" 键值对数据库的数据模型")]),t._v(" "),a("ul",[a("li",[t._v("Key指向Value的键值对，通常用HashTable来实现")]),t._v(" "),a("li",[t._v("键值对数据库中的Value值是纯非结构数据，一般作为字符串或者二进制处理")]),t._v(" "),a("li",[t._v("就是一个多功能的大字符串数组")])]),t._v(" "),a("h2",{attrs:{id:"文档数据库的数据模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档数据库的数据模型"}},[t._v("#")]),t._v(" 文档数据库的数据模型")]),t._v(" "),a("ul",[a("li",[t._v("Key指向(Attribute,Value)的键值对")]),t._v(" "),a("li",[t._v("和键值对数据库不同，文档数据库中的Value值是结构化数据")]),t._v(" "),a("li",[t._v("文档数据模型和关系型数据库的数据模型类比关系如下（以MySQL和MongoDB为例）：")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("关系型数据库")]),t._v(" "),a("th",[t._v("文档数据库")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("database")]),t._v(" "),a("td",[t._v("database")])]),t._v(" "),a("tr",[a("td",[t._v("table")]),t._v(" "),a("td",[t._v("collection(集合)")])]),t._v(" "),a("tr",[a("td",[t._v("row(行)")]),t._v(" "),a("td",[t._v("document(文档)")])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"i/%E6%96%87%E6%A1%A3%E5%92%8C%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%AF%B9%E6%AF%94.jpg",alt:"文档和关系数据库的简单对比"}})]),t._v(" "),a("h3",{attrs:{id:"文档与关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档与关系"}},[t._v("#")]),t._v(" 文档与关系")]),t._v(" "),a("h4",{attrs:{id:"关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系"}},[t._v("#")]),t._v(" “关系”")]),t._v(" "),a("p",[t._v("如上所示，关系型数据库中的每一条记录存储都需要"),a("strong",[t._v("遵守一个固定的模式")]),t._v("（固定的列数/属性数），每一列有特定的意义而且规定了数据类型。如果要获取不同的数据，数据库的模式就需要重新修改。")]),t._v(" "),a("p",[t._v("此外，关系型模型还有一个特点就是“数据库标准化”。按照关系型数据的"),a("strong",[t._v("NF法则")]),t._v("，在关系型数据库结构时，会"),a("strong",[t._v("将大的表（多个列/属性）压缩成小的、整合的表（把重复的属性值拎出来单独一张表）")]),t._v("，然后互相之间以“"),a("strong",[t._v("外键")]),t._v("”连接，就像下图所展示的一样。"),a("strong",[t._v("这种“外键”就是关系型数据库中的“关系”的体现")]),t._v("。")]),t._v(" "),a("p",[a("img",{attrs:{src:"i/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A4%96%E9%94%AE.jpg",alt:"关系数据库的“外键”"}})]),t._v(" "),a("h4",{attrs:{id:"文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档"}},[t._v("#")]),t._v(" “文档”")]),t._v(" "),a("p",[t._v("使用“文档”这个词似乎让人觉得奇怪，但是其实 “文档型数据模型”真的和传统意义的文字“文档”没有什么关系。他不是书、信或者文章，这里说的“文档”其实是一个数据记录，这个记录"),a("strong",[t._v("能够对包含的数据类型和内容进行“自我描述”")]),t._v("。XML文档、HTML文档和JSON 文档就属于这一类。例如，上面的四条错误信息记录在JSON文档数据库中可能会是像下面这样：")]),t._v(" "),a("ul",[a("li",[t._v("记录1")])]),t._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"_id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Err"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ERR"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Time"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"00:08"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"DC"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Loc"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"北京"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Num"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"010"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Street"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"长安街"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"level"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("ul",[a("li",[t._v("记录2")])]),t._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"_id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Err"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ERR"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Time"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"02:06"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"DC"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Loc"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"上海"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Num"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"021"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Range"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"闵行区"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Note"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h4",{attrs:{id:"比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#比较"}},[t._v("#")]),t._v(" 比较")]),t._v(" "),a("p",[t._v("从上面的对比中也可以很容易的看出，这种文档型的记录方式所记录的数据是不规则的，很容易出现冗余信息，而关系型数据库则不会，比如上面的记录中，“DC”信息在关系型数据库中只会存储一次，由其他的表通过“外键”建立指向性的“关系”，使得一条数据被多条记录共享，极大地减少了重复数据的出现；并且当“DC”的某些信息发生改变时也完全不需要对其他数据进行进一步的修改。这也是关系型数据模型的“一致性”所带来的好处。")]),t._v(" "),a("p",[t._v("但是，这种“一致性”的缺陷在于，复杂的共享数据内部关系网的存在，使得关系型数据在多个服务器之间的传递变得复杂而缓慢，同时让读和写操作的性能变差，不"),a("strong",[t._v("利于分布式")]),t._v("系统的构建。")]),t._v(" "),a("p",[t._v("而文档数据库则可以很好地解决这个问题。从上面文档数据库存储的方式可以看出，文档数据的每一条记录包含了所记录的抽象个体的全部信息，没有任何外部的引用，这条记录就是“"),a("strong",[t._v("自包含")]),t._v("”的。这就使得记录很容易完全移动到其他服务器，因为这条记录的所有信息都包含在里面了，不需要考虑还有信息在别的表没有一起迁移走。")]),t._v(" "),a("p",[t._v("有利于分布式部署是文档型数据库最有力的优势。除此之外，用不规则的结构化文档存储数据的优势还有以下两点：")]),t._v(" "),a("h5",{attrs:{id:"并发性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#并发性"}},[t._v("#")]),t._v(" 并发性")]),t._v(" "),a("p",[t._v("并发性的原理和分布式相同，都是源自文档数据库的“"),a("strong",[t._v("自包含")]),t._v("”特性。关系型数据库中，为了保证数据的一致性，一张表一次只能由一个线程进行修改，当并发量大的时候显然很低效。而文档数据库因为“"),a("strong",[t._v("自包含")]),t._v("”，所以可以由多个线程同时修改不同的文档，因此可以并发操作。")]),t._v(" "),a("h5",{attrs:{id:"灵活性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#灵活性"}},[t._v("#")]),t._v(" 灵活性")]),t._v(" "),a("p",[t._v("面对大量而多样性的数据，如果使用关系型模型，就需要不断修改数据操作模式，这样，可能会引起系统负载的大大提升，同时也会大大增加处理的时间。这一点在社交网站应用中尤其明显：有人会发布风景照片、有人发布对时事的评论还有人分享音乐表达心情，不同的数据有不同的关系，不利于在关系数据库中处理。")]),t._v(" "),a("h4",{attrs:{id:"优缺点总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优缺点总结"}},[t._v("#")]),t._v(" 优缺点总结")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("-")]),t._v(" "),a("th",[t._v("优点")]),t._v(" "),a("th",[t._v("缺点")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("文档数据库")]),t._v(" "),a("td",[t._v("没有数据间的依赖关系，有利于分布和并发")]),t._v(" "),a("td",[t._v("数据之间没有一致性")])]),t._v(" "),a("tr",[a("td",[t._v("关系数据库")]),t._v(" "),a("td",[t._v("数据之间有一致性，不容易出错且节约存储空间")]),t._v(" "),a("td",[t._v("数据间严格而复杂的关系不利于分布式部署")])])])]),t._v(" "),a("h2",{attrs:{id:"图数据库的数据模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图数据库的数据模型"}},[t._v("#")]),t._v(" 图数据库的数据模型")]),t._v(" "),a("p",[t._v("图数据库是关系型数据库在“外键”连接方面进行特化后的一种数据库。相对于关系数据库来说，图数据库善于处理大量复杂互连接且低结构化的数据，这些数据变化迅速，需要频繁的查询——在关系数据库中，这些查询会导致大量的表连接，因此会产生性能上的问题。图数据库重点解决了拥有大量连接的传统RDBMS在查询时出现的性能衰退问题。")]),t._v(" "),a("h2",{attrs:{id:"列数据库的数据模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列数据库的数据模型"}},[t._v("#")]),t._v(" 列数据库的数据模型")]),t._v(" "),a("h3",{attrs:{id:"bigtable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bigtable"}},[t._v("#")]),t._v(" BigTable")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://dblab.xmu.edu.cn/post/google-bigtable/",target:"_blank",rel:"noopener noreferrer"}},[t._v("教程参考"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("列数据库模型最初来源于Google提出的Bigtable。Bigtable看起来像一个关系型数据库，采用了很多数据库的实现策略。但是Bigtable并不支持完整的关系型数据模型；而是为客户端提供了一种简单的数据模型，客户端可以动态地控制数据的布局和格式，并且利用底层数据存储的局部性特征。本质上说，Bigtable是一个键值（key-value）映射。")]),t._v(" "),a("p",[t._v("按作者的说法，Bigtable是一个"),a("strong",[t._v("稀疏")]),t._v("的，"),a("strong",[t._v("分布式")]),t._v("的，"),a("strong",[t._v("持久化")]),t._v("的，"),a("strong",[t._v("多维")]),t._v("的"),a("strong",[t._v("排序映射")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"多维"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多维"}},[t._v("#")]),t._v(" 多维")]),t._v(" "),a("p",[t._v("Bigtable的键有三维："),a("code",[t._v("(row:string, column:string, time:int64)->string")])]),t._v(" "),a("ul",[a("li",[t._v("row：行键（row key）：\n"),a("ul",[a("li",[t._v("行键可以是任意字节串，通常有10-100字节。")]),t._v(" "),a("li",[t._v("行的读写都是原子性的。")]),t._v(" "),a("li",[t._v("Bigtable"),a("strong",[t._v("按照行键的字典序存储数据")]),t._v("。")]),t._v(" "),a("li",[t._v("Bigtable的表会根据行键"),a("strong",[t._v("自动划分为片")]),t._v("（tablet），"),a("strong",[t._v("片是负载均衡的单元")]),t._v("。最初表都只有一个片，但随着表不断增大，"),a("strong",[t._v("片会自动分裂")]),t._v("，片的大小控制在100-200MB。")]),t._v(" "),a("li",[t._v("行是表的第一级索引，我们可以把该行的列、时间和值看成一个整体，简化为一维键值映射")])])]),t._v(" "),a("li",[t._v("column：列键（column key）：\n"),a("ul",[a("li",[t._v("列是第二级索引，每行拥有的列是不受限制的，可以随时增加减少")]),t._v(" "),a("li",[t._v("为了方便管理，"),a("strong",[t._v("列被分为多个列族")]),t._v("（column family，是访问控制的单元），一个"),a("strong",[t._v("列族里的列一般存储相同类型的数据")]),t._v("。\n"),a("ul",[a("li",[t._v("一行的"),a("strong",[t._v("列族很少变化")]),t._v("，但是"),a("strong",[t._v("列族里的列可以随意添加删除")]),t._v("。列键是按照"),a("code",[t._v("[列族名]:[列名]")]),t._v("格式命名的。")]),t._v(" "),a("li",[t._v("访问控制以及磁盘和内存审计是在列家族层面上进行的。这些控制允许我们管理几种不同类型的应用，可以让应用只被允许浏览某些列，无法浏览全部列家族。")])])])])]),t._v(" "),a("li",[t._v("time：时间戳（timestamp）：\n"),a("ul",[a("li",[t._v("时间戳是第三级索引。")]),t._v(" "),a("li",[t._v("Bigtable允许"),a("strong",[t._v("保存数据的多个版本")]),t._v("，版本区分的依据就是时间戳。")]),t._v(" "),a("li",[t._v("时间戳可以由Bigtable赋值，代表数据进入Bigtable的准确时间，也可以由客户端赋值。")]),t._v(" "),a("li",[t._v("数据的不同版本按照时间戳降序存储，因此先读到的是最新版本的数据。")]),t._v(" "),a("li",[t._v("用户可以设定只保存单元格中数据的最近n个版本，或者只保存足够新版本（比如只保存最近7天内的数据版本）。")])])])]),t._v(" "),a("p",[t._v("BigTable的一行可以以如下所示的方式存储（以JSON为例）：")]),t._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"aaaaa"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//行键")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"A:foo"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//列键，A族foo键")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"y"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//时间戳")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"m"')]),t._v("  \n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"A:bar"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//一列，A族bar列")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//一个版本")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"B:"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//一列，空列族")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"w"')]),t._v("  \n        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"o"')]),t._v("  \n        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"w"')]),t._v("  \n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("p",[t._v("例如GFS原论文中给出的“Webtable”示例：")]),t._v(" "),a("p",[a("img",{attrs:{src:"i/bigtable.jpg",alt:"例子"}})]),t._v(" "),a("p",[t._v("在“Webtable”中：")]),t._v(" "),a("ul",[a("li",[t._v("行键是倒序的URL，表示一个网页（倒序是为了让同一域名下的不同子域存储在一个地方）")]),t._v(" "),a("li",[t._v("列键分两个族：\n"),a("ul",[a("li",[a("code",[t._v("contents")]),t._v("族：该族中没有键，其中直接存储了网页内容及历史版本")]),t._v(" "),a("li",[a("code",[t._v("anchor:[网址]")]),t._v("键："),a("code",[t._v("archor")]),t._v("族中的键代表那些引用了该行对应网页的页面")])])])]),t._v(" "),a("h4",{attrs:{id:"稀疏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#稀疏"}},[t._v("#")]),t._v(" 稀疏")]),t._v(" "),a("p",[t._v("“稀疏”是指表中每一列的值的存储格式都可以有很大不同。")]),t._v(" "),a("h4",{attrs:{id:"分布式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式"}},[t._v("#")]),t._v(" 分布式")]),t._v(" "),a("p",[t._v("Bigtable依赖于google的几项重要的分布式技术：")]),t._v(" "),a("ul",[a("li",[t._v("GFS(Google File System)：分布式的文件系统，是BigTable用来存储日志和数据文件的文件系统")]),t._v(" "),a("li",[t._v("SSTable(Sorted String Table)：不可修改的有序的键值映射，提供了查询、遍历等功能，是BigTable存储数据的格式")]),t._v(" "),a("li",[t._v("Chubby：一种高可用的分布式锁服务，在BigTable中于片定位、片服务器的状态监控、访问控制列表存储等任务")])]),t._v(" "),a("p",[t._v("正如上文所说，Bigtable会将表（table）进行分片，片（tablet）的大小维持在100-200MB范围，一旦超出范围就将分裂成更小的片，或者合并成更大的片。每个片服务器负责一定量的片，处理对其片的读写请求，以及片的分裂或合并。片服务器可以根据负载随时添加和删除。")]),t._v(" "),a("p",[t._v("按照这种结构，Bigtable集群包括三个主要部分：")]),t._v(" "),a("ul",[a("li",[t._v("一个供客户端使用的库：负责用户与集群的通信")]),t._v(" "),a("li",[t._v("一个主服务器（master server）：负责"),a("strong",[t._v("将片分配给片服务器")]),t._v("，监控片服务器的添加和删除，平衡片服务器的负载，处理表和列族的创建等。\n"),a("ul",[a("li",[t._v("注意，主服务器是用来管理片服务器的，不存储任何片，不提供任何数据服务，也不提供片的定位信息。客户端的读写操作是通过分布式算法直接在片服务器上进行的")])])]),t._v(" "),a("li",[t._v("许多片服务器（tablet server）：这里片服务器并不真实存储数据，而相当于一个"),a("strong",[t._v("连接Bigtable和GFS的代理")]),t._v("，客户端的一些数据操作都"),a("strong",[t._v("通过片服务器代理间接访问GFS")]),t._v("，就好像数据都存储在片服务器上。")])]),t._v(" "),a("p",[t._v("客户端需要读写数据时，"),a("strong",[t._v("直接与片服务器联系")]),t._v("。因为客户端并不需要从主服务器获取片的位置信息，所以客户端的读写操作并不需要访问主服务器，主服务器的负载一般很轻。")]),t._v(" "),a("h5",{attrs:{id:"如何查询（片的定位）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何查询（片的定位）"}},[t._v("#")]),t._v(" 如何查询（片的定位）")]),t._v(" "),a("p",[a("img",{attrs:{src:"i/BigTable%E7%89%87%E5%AE%9A%E4%BD%8D.png",alt:"片的定位"}})]),t._v(" "),a("p",[t._v("TODO:学习原论文待续")])])}),[],!1,null,null,null);s.default=n.exports}}]);