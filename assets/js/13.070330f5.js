(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{570:function(s,a,t){s.exports=t.p+"assets/img/img-fdisk-start.623296bd.png"},571:function(s,a,t){s.exports=t.p+"assets/img/gparted-start.a0604807.png"},572:function(s,a,t){s.exports=t.p+"assets/img/gparted-start-lvm.97eeea0c.png"},573:function(s,a,t){s.exports=t.p+"assets/img/gparted-change.dd4fbbfe.png"},574:function(s,a,t){s.exports=t.p+"assets/img/gparted-move.d7b4f00e.png"},575:function(s,a,t){s.exports=t.p+"assets/img/gparted-finish.fe5ad537.png"},576:function(s,a,t){s.exports=t.p+"assets/img/gparted-after.87b96caa.png"},577:function(s,a,t){s.exports=t.p+"assets/img/img-trancate-where.123d5d5e.png"},911:function(s,a,t){"use strict";t.r(a);var e=t(4),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("做大规模实验经常要一次装很多台机器。通常的办法是将一台已经装好的机器上的系统盘取出来，用Win32DiskImager制作成镜像再写到其他机器的存储器上，这样就不用一台机器一台机器地用安装盘装机了。")]),s._v(" "),e("p",[s._v("但是这种方法有个问题，那就是系统盘有多大读出来的镜像就有多大，64G的盘不管里面写了多少内容读出来的镜像就是64G.这样，在写入镜像的时候就很费时间。显然一个刚装好的系统不可能把64G全写满，所以我们可以将镜像里面没有写入内容的部分裁掉，这样就能极大地节省写入镜像的时间。")]),s._v(" "),e("h2",{attrs:{id:"准备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#准备"}},[s._v("#")]),s._v(" 准备")]),s._v(" "),e("p",[e("strong",[s._v("注意：开了LVM的盘不能用此方法")])]),s._v(" "),e("ul",[e("li",[s._v("用Win32DiskImager做好的镜像")]),s._v(" "),e("li",[s._v("运行着Linux操作系统的电脑")]),s._v(" "),e("li",[s._v("安装"),e("code",[s._v("gparted")])])]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("gparted")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"查看最大的分区的起点位置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看最大的分区的起点位置"}},[s._v("#")]),s._v(" 查看最大的分区的起点位置")]),s._v(" "),e("p",[s._v("通常，镜像中的比较小的分区都是操作系统的固定分区，不能变，只有最大的那个才是存储用户文件的分区。")]),s._v(" "),e("p",[s._v("首先得看看最大的分区从哪开始：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("IMG_FILE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("/server-basic.img\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("fdisk")]),s._v(" -l "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$IMG_FILE")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("img",{attrs:{src:t(570),alt:""}})]),s._v(" "),e("p",[s._v("这个大小最大的分区的起点就是我们要找的数字。")]),s._v(" "),e("h2",{attrs:{id:"挂载镜像中最大的分区到本地回环"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#挂载镜像中最大的分区到本地回环"}},[s._v("#")]),s._v(" 挂载镜像中最大的分区到本地回环")]),s._v(" "),e("p",[s._v("知道了起点位置，"),e("code",[s._v("losetup")]),s._v("就可以将最大的分区挂载到本地回环上：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("START")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1050624")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DEVICE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/dev/loop100\nlosetup "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$DEVICE")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$IMG_FILE")]),s._v(" -o "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("$START"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("512")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"对挂载的设备启动gparted"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对挂载的设备启动gparted"}},[s._v("#")]),s._v(" 对挂载的设备启动gparted")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("gparted")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$DEVICE")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("img",{attrs:{src:t(571),alt:""}})]),s._v(" "),e("p",[s._v("如果发现有"),e("code",[s._v("lvm")]),s._v("字样说明是开了LVM的盘，不能用这种方法操作。")]),s._v(" "),e("p",[e("img",{attrs:{src:t(572),alt:""}})]),s._v(" "),e("h2",{attrs:{id:"修改大小"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改大小"}},[s._v("#")]),s._v(" 修改大小")]),s._v(" "),e("p",[s._v("点这个“更改大小/移动”")]),s._v(" "),e("p",[e("img",{attrs:{src:t(573),alt:""}})]),s._v(" "),e("p",[s._v("拖着这个拉到最左边然后点“调整大小”")]),s._v(" "),e("p",[e("img",{attrs:{src:t(574),alt:""}})]),s._v(" "),e("p",[s._v("最后点“应用全部操作”")]),s._v(" "),e("p",[e("img",{attrs:{src:t(575),alt:""}})]),s._v(" "),e("p",[s._v("在输出中找到修改后的分区具体大小")]),s._v(" "),e("p",[e("img",{attrs:{src:t(576),alt:""}})]),s._v(" "),e("h2",{attrs:{id:"重建分区"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重建分区"}},[s._v("#")]),s._v(" 重建分区")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("losetup -d "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$DEVICE")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DEVICE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/dev/loop1000\nlosetup "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$DEVICE")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$IMG_FILE")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("fdisk")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$DEVICE")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("ul",[e("li",[s._v("最大的分区是第2个，所以依次输入"),e("code",[s._v("d")]),s._v("和"),e("code",[s._v("2")]),s._v("删除该分区")]),s._v(" "),e("li",[s._v("然后输入"),e("code",[s._v("n")]),s._v("和"),e("code",[s._v("2")]),s._v("重建第2个分区")]),s._v(" "),e("li",[s._v("输入"),e("code",[s._v("$START")]),s._v("的值作为起始位置")]),s._v(" "),e("li",[s._v("输入上一步中看到的修改后的分区具体大小的值作为分区大小"),e("code",[s._v("+<值>K")]),s._v("，注意要输入前面的加号和后面的K")]),s._v(" "),e("li",[s._v("输入"),e("code",[s._v("w")]),s._v("确认修改")])]),s._v(" "),e("h2",{attrs:{id:"裁剪文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#裁剪文件"}},[s._v("#")]),s._v(" 裁剪文件")]),s._v(" "),e("p",[s._v("先看从哪裁剪")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("fdisk")]),s._v(" -l "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$DEVICE")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("找到修改后的最大扇区末尾，这就是要裁的位置：")]),s._v(" "),e("p",[e("img",{attrs:{src:t(577),alt:""}})]),s._v(" "),e("p",[s._v("卸载设备然后裁之：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("losetup -d "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$DEVICE")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("END")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("17827839")]),s._v("\ntruncate -s "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("$END"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("512")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$IMG_FILE")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("完成，可以看到镜像文件大小显著降低了。")]),s._v(" "),e("h2",{attrs:{id:"刷入系统后如何扩容到物理存储器大小"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#刷入系统后如何扩容到物理存储器大小"}},[s._v("#")]),s._v(" 刷入系统后如何扩容到物理存储器大小")]),s._v(" "),e("p",[s._v("将一个16G盘的镜像刷到32G的盘上，不经过任何操作开机只会识别出16G的存储空间，这是因为这种刷机方式将分区表也一起刷入卡里，所以多出来的空间相当于没有格式化的新分区。这种情况只需要和前面一样用"),e("code",[s._v("gparted")]),s._v("重建一下分区表就可以解决。")]),s._v(" "),e("ol",[e("li",[e("code",[s._v("gparted /dev/sdb")])]),s._v(" "),e("li",[s._v("将第二个分区的扇区末尾拉到最右边")]),s._v(" "),e("li",[s._v("卸载第二个分区")]),s._v(" "),e("li",[s._v("第二个分区点击右键菜单检查当前分区")])])])}),[],!1,null,null,null);a.default=r.exports}}]);