(window.webpackJsonp=window.webpackJsonp||[]).push([[254],{930:function(t,e,a){"use strict";a.r(e);var r=a(4),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"rest是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rest是什么"}},[t._v("#")]),t._v(" REST是什么")]),t._v(" "),a("p",[t._v("REST是表示层状态传输(Representational State Transfer)的缩写。")]),t._v(" "),a("p",[a("strong",[t._v("REST是一种WEB应用的架构风格")]),t._v("，它被定义为6个限制，满足这6个限制，能够获得诸多优势。")]),t._v(" "),a("ul",[a("li",[t._v("Client-server architecture：必须是C/S架构")]),t._v(" "),a("li",[t._v("Statelessness：服务器是无状态的")]),t._v(" "),a("li",[t._v("Cacheability：")]),t._v(" "),a("li",[t._v("Uniform interface：")]),t._v(" "),a("li",[t._v("Layered system：")]),t._v(" "),a("li",[t._v("Code on demand (optional)：")])]),t._v(" "),a("p",[t._v("RESTful API是指具有REST风格的API，可以概括为：")]),t._v(" "),a("ul",[a("li",[t._v("用URL定位资源")]),t._v(" "),a("li",[t._v("用HTTP动词（GET,HEAD,POST,PUT,PATCH,DELETE）描述操作")]),t._v(" "),a("li",[t._v("用响应状态码表示操作结果")])]),t._v(" "),a("h2",{attrs:{id:"前后端分离"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前后端分离"}},[t._v("#")]),t._v(" 前后端分离")]),t._v(" "),a("p",[t._v("使用RESTful API架构开发的应用最显著的特征是“前后端分离”，即前端页面和后端服务完全解耦，仅仅通过表示层所传输的“状态”进行沟通。在这样的架构下，网站服务器向前端发送的响应不是HTML文件（即B/S架构，浏览器浏览服务器上的内容），而只是“状态”数据（即C/S架构，客户机操作服务器上的数据），页面生成、渲染和呈现全部由前端完成。因此只要满足数据发送的规则，任何设备和程序都能作为前端，这使得RESTful API架构的应用具有天生的跨平台一致性。")]),t._v(" "),a("p",[a("img",{attrs:{src:"i/RESTful%E5%9B%BE.jpg",alt:"RESTful架构图"}})])])}),[],!1,null,null,null);e.default=s.exports}}]);