(window.webpackJsonp=window.webpackJsonp||[]).push([[271],{948:function(s,t,a){"use strict";a.r(t);var e=a(4),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://blog.csdn.net/m0_61544080/article/details/121621524",target:"_blank",rel:"noopener noreferrer"}},[s._v("原文在此"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("img",{attrs:{src:"wasm/22b7e25948d3e023af5ffb805d0d429c.png",alt:""}})]),s._v(" "),a("p",[a("img",{attrs:{src:"wasm/483ab9391d2dcdf16fd9b06490f29e41.png",alt:""}})]),s._v(" "),a("h1",{attrs:{id:"这篇文章打算讲什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#这篇文章打算讲什么？"}},[s._v("#")]),s._v(" 这篇文章打算讲什么？")]),s._v(" "),a("p",[s._v("了解 WebAssembly 的前世今生，这一致力于让 Web 更广泛使用的伟大创造是如何在整个 Web/Node.js\n的生命周期起作用的，探讨为什么 WASM 是 Web 的未来？")]),s._v(" "),a("p",[s._v("在整篇文章的讲解过程中，你可以了解到 WebAssembly 原生、AssemblyScript、Emscripten 编译器。")]),s._v(" "),a("p",[s._v("最后还对 WebAssembly 的未来进行了展望，列举了一些令人兴奋的技术的发展方向。")]),s._v(" "),a("p",[s._v("我在之前也撰写过深入了解 WebAssembly 使用细节和在浏览器里面调试 WebAssembly 代码的文章，感兴趣的同学可以点击链接阅读：")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzkxMjI3OTA3NQ==&mid=2247485531&idx=1&sn=981604a9da572ce6f06051664cf41dc6&chksm=c10e1b17f67992010f019675a66aae5965a6d51b29336dfd90164e800c056f8fe7c7548cb1ac&token=1261539433&lang=zh_CN#rd",target:"_blank",rel:"noopener noreferrer"}},[s._v("WebAssembly在浏览器中调试"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzkxMjI3OTA3NQ==&mid=2247485073&idx=1&sn=3515cf79aecd1024aa2ceb3142ec04b5&chksm=c10e15ddf6799ccbfb981e3f92cafc1a95668af8cba54aba264536b8cbad4c9158d616e9e7ab&token=1261539433&lang=zh_CN#rd",target:"_blank",rel:"noopener noreferrer"}},[s._v("编译C/C++ 程序到WebAssembly，然后运行在浏览器和 Node.js"),a("OutboundLink")],1)])]),s._v(" "),a("h1",{attrs:{id:"为什么需要-webassembly"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要-webassembly"}},[s._v("#")]),s._v(" 为什么需要 WebAssembly?")]),s._v(" "),a("h2",{attrs:{id:"动态语言之踵"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态语言之踵"}},[s._v("#")]),s._v(" 动态语言之踵")]),s._v(" "),a("p",[s._v("首先先来看一下 JS 代码的执行过程：")]),s._v(" "),a("p",[a("img",{attrs:{src:"wasm/4fac0b340a3031ba690169b052b00968.png",alt:""}})]),s._v(" "),a("p",[s._v(">上述是 Microsoft Edge 之前的 ChakraCore 引擎结构，目前 Microsoft Edge 的 JS 引擎已经切换为 V8。")]),s._v(" "),a("p",[s._v("整体的流程就是：")]),s._v(" "),a("ol",[a("li",[s._v("拿到了 JS 源代码，交给 Parser，生成 AST")]),s._v(" "),a("li",[s._v("ByteCode Compiler 将 AST 编译为字节码（ByteCode）")]),s._v(" "),a("li",[s._v("ByteCode 进入翻译器，翻译器将字节码一行一行翻译（Interpreter）为机器码（Machine Code），然后执行")])]),s._v(" "),a("p",[s._v("但其实我们平时写的代码有很多可以优化的地方，如多次执行同一个函数，那么可以将这个函数生成的 Machine Code 标记可优化，然后打包送到 JIT\nCompiler（Just-In-Time），下次再执行这个函数的时候，就不需要经过 Parser-Compiler-Interpreter 这个过程，可以直接执行这份准备好的 Machine Code，大大提高的代码的执行效率。")]),s._v(" "),a("p",[s._v("但是上述的 JIT 优化只能针对静态类型的变量，如我们要优化的函数，它只有两个参数，每个参数的类型是确定的，而 JavaScript\n却是一门动态类型的语言，这也意味着，函数在执行过程中，可能类型会动态变化，参数可能变成三个，第一个参数的类型可能从对象变为数组，这就会导致 JIT 失效，需要重新进行\nParser-Compiler-Interpreter-Execuation，而 Parser-Compiler 这两步是整个代码执行过程中最耗费时间的两步，这也是为什么 JavaScript 语言背景下，Web\n无法执行一些高性能应用，如大型游戏、视频剪辑等。")]),s._v(" "),a("h2",{attrs:{id:"静态语言优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态语言优化"}},[s._v("#")]),s._v(" 静态语言优化")]),s._v(" "),a("p",[s._v("通过上面的说明了解到，其实 JS 执行慢的一个主要原因是因为其动态语言的特性，导致 JIT 失效，所以如果我们能够为 JS 引入静态特性，那么可以保持有效的 JIT，势必会加快 JS 的执行速度，这个时候 asm.js 出现了。")]),s._v(" "),a("p",[s._v("asm.js 只提供两种数据类型：")]),s._v(" "),a("ul",[a("li",[s._v("32 位带符号整数")]),s._v(" "),a("li",[s._v("64 位带符号浮点数")])]),s._v(" "),a("p",[s._v("其他类似如字符串、布尔值或对象都是以数值的形式保存在内存中，通过 TypedArray 调用。整数和浮点数表示如下：")]),s._v(" "),a("p",[s._v(">"),a("code",[s._v("ArrayBuffer")]),s._v("对象、"),a("code",[s._v("TypedArray")]),s._v("视图和"),a("code",[s._v("DataView")]),s._v(" 视图是 JavaScript 操作二进制数据的一个接口，以数组的语法处理二进制数据，统称为二进制数组。参考 "),a("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/arraybuffer",target:"_blank",rel:"noopener noreferrer"}},[s._v("ArrayBuffer"),a("OutboundLink")],1),s._v(" 。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// x 是32位整数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// y 是64位浮点数")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("而函数的写法如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  y "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("上述的函数参数及返回值都需要声明类型，这里都是 32 位整数。")]),s._v(" "),a("p",[s._v("而且 asm.js 也不提供垃圾回收机制，内存操作都是由开发者自己控制，通过 TypedArray 直接读写内存：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" buffer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("32768")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 申请 32 MB 内存")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HEAP8")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Int8Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 每次读 1 个字节的视图 HEAP8")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("compiledCode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("ptr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HEAP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HEAP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ptr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("从上可见，asm.js 是一个严格的 JavaScript 子集要求变量的类型在运行时确定且不可改变，且去除了 JavaScript 拥有的垃圾回收机制，需要开发者手动管理内存。这样 JS 引擎就可以基于 asm.js\n的代码进行大量的 JIT 优化，据统计 asm.js 在浏览器里面的运行速度，大约是原生代码（机器码）的 50% 左右。")]),s._v(" "),a("h2",{attrs:{id:"推陈出新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#推陈出新"}},[s._v("#")]),s._v(" 推陈出新")]),s._v(" "),a("p",[s._v("但是不管 asm.js 再怎么静态化，干掉一些需要耗时的上层抽象（垃圾收集等），也还是属于 JavaScript 的范畴，代码执行也需要 Parser-Compiler 这两个过程，而这两个过程也是代码执行中最耗时的。")]),s._v(" "),a("p",[s._v("为了极致的性能，Web 的前沿开发者们抛弃 JavaScript，创造了一门可以直接和 Machine Code 打交道的汇编语言 WebAssembly，直接干掉 Parser-Compiler，同时 WebAssembly\n是一门强类型的静态语言，能够进行最大限度的 JIT 优化，使得 WebAssembly 的速度能够无限逼近 C/C++ 等原生代码。")]),s._v(" "),a("p",[s._v("相当于下面的过程：")]),s._v(" "),a("p",[a("img",{attrs:{src:"wasm/209f98969c623d68d9d675b828826761.png",alt:""}})]),s._v(" "),a("p",[s._v("无需 Parser-Compiler，直接就可以执行，同时干掉了垃圾回收机制，而且 WASM 的静态强类型语言的特性可以进行最大程度的 JIT 优化。")]),s._v(" "),a("h1",{attrs:{id:"webassembly-初探"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webassembly-初探"}},[s._v("#")]),s._v(" WebAssembly 初探")]),s._v(" "),a("p",[s._v("我们可以通过一张图来直观了解 WebAssembly 在 Web 中的位置：")]),s._v(" "),a("p",[a("img",{attrs:{src:"wasm/b31d54a14547ae3c176f2c37fc78ecec.png",alt:""}})]),s._v(" "),a("p",[s._v("WebAssembly（也称为 WASM），是一种可在 Web 中运行的全新语言格式，同时兼具体积小、性能高、可移植性强等特点，在底层上类似 Web 中的 JavaScript，同时也是 W3C 承认的 Web 中的第 4 门语言。")]),s._v(" "),a("p",[s._v("为什么说在底层上类似 JavaScript，主要有以下几个理由：")]),s._v(" "),a("ul",[a("li",[s._v("和 JavaScript 在同一个层次执行：JS Engine，如 Chrome 的 V8")]),s._v(" "),a("li",[s._v("和 JavaScript 一样可以操作各种 Web API")])]),s._v(" "),a("p",[s._v("同时 WASM 也可以运行在 Node.js 或其他 WASM Runtime 中。")]),s._v(" "),a("h2",{attrs:{id:"webassembly-文本格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webassembly-文本格式"}},[s._v("#")]),s._v(" WebAssembly 文本格式")]),s._v(" "),a("p",[s._v("实际上 WASM 是一堆可以直接执行二进制格式，但是为了易于在文本编辑器或开发者工具里面展示，WASM 也设计了一种 “中间态” 的"),a("a",{attrs:{href:"https://webassembly.github.io/spec/core/text/index.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("文本格式"),a("OutboundLink")],1),s._v("，以 "),a("code",[s._v(".wat")]),s._v(" 或 "),a("code",[s._v(".wast")]),s._v(" 为扩展命名，然后通过 "),a("a",{attrs:{href:"https://github.com/WebAssembly/wabt",target:"_blank",rel:"noopener noreferrer"}},[s._v("wabt"),a("OutboundLink")],1),s._v(" 等工具，将文本格式下的 WASM 转为二进制格式的可执行代码，以 "),a("code",[s._v(".wasm")]),s._v(" 为扩展的格式。")]),s._v(" "),a("p",[s._v("来看一段 WASM 文本格式下的模块代码：")]),s._v(" "),a("div",{staticClass:"language-wasm line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-wasm"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("module")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"imports"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"imported_func"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("param")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("i32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"exported_func"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("i32"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("42")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("call")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("上述代码逻辑如下：")]),s._v(" "),a("ol",[a("li",[s._v("首先定义了一个 WASM 模块，然后从一个 "),a("code",[s._v("imports")]),s._v(" JS 模块导入了一个函数 "),a("code",[s._v("imported_func")]),s._v(" ，将其命名为 "),a("code",[s._v("$i")]),s._v(" ，接收参数 "),a("code",[s._v("i32")])]),s._v(" "),a("li",[s._v("然后导出一个名为 "),a("code",[s._v("exported_func")]),s._v(" 的函数，可以从 Web App，如 JS 中导入这个函数使用")]),s._v(" "),a("li",[s._v("接着为参数 "),a("code",[s._v("i32")]),s._v(" 传入 42，然后调用函数 "),a("code",[s._v("$i")])])]),s._v(" "),a("p",[s._v("我们通过 wabt 将上述文本格式转为二进制代码：")]),s._v(" "),a("ol",[a("li",[s._v("将上述代码复制到一个新建的，名为 "),a("code",[s._v("simple.wat")]),s._v(" 的文件中保存")]),s._v(" "),a("li",[s._v("使用 "),a("a",{attrs:{href:"https://github.com/WebAssembly/wabt",target:"_blank",rel:"noopener noreferrer"}},[s._v("wabt"),a("OutboundLink")],1),s._v(" 进行编译转换")])]),s._v(" "),a("p",[s._v("当你安装好 wabt 之后，运行如下命令进行编译：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("wat2wasm simple.wat -o simple.wasm\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("虽然转换成了二进制，但是无法在文本编辑器中查看其内容，为了查看二进制的内容，我们可以在编译时加上 "),a("code",[s._v("-v")]),s._v(" 选项，让内容在命令行输出：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("wat2wasm simple.wat -v\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("输出结果如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"wasm/6d58d9b9f112adb8c672891c3987735c.png",alt:""}})]),s._v(" "),a("p",[s._v("可以看到，WebAssembly 其实是二进制格式的代码，即使其提供了稍为易读的文本格式，也很难真正用于实际的编码，更别提开发效率了。")]),s._v(" "),a("h2",{attrs:{id:"将-webassembly-作为编程语言的一种尝试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将-webassembly-作为编程语言的一种尝试"}},[s._v("#")]),s._v(" 将 WebAssembly 作为编程语言的一种尝试")]),s._v(" "),a("p",[s._v("因为上述的二进制和文本格式都不适合编码，所以不适合将 WASM 作为一门可正常开发的语言。")]),s._v(" "),a("p",[s._v("为了突破这个限制，"),a("a",{attrs:{href:"https://www.assemblyscript.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("AssemblyScript"),a("OutboundLink")],1),s._v(" 走到台前，AssemblyScript 是 TypeScript 的一种变体，为\nJavaScript 添加了 "),a("strong",[a("a",{attrs:{href:"https://www.assemblyscript.org/types.html#type-rules",target:"_blank",rel:"noopener noreferrer"}},[s._v("WebAssembly 类型"),a("OutboundLink")],1)]),s._v("， 可以使用 "),a("a",{attrs:{href:"https://github.com/WebAssembly/binaryen",target:"_blank",rel:"noopener noreferrer"}},[s._v("Binaryen"),a("OutboundLink")],1),s._v(" 将其编译成 WebAssembly。")]),s._v(" "),a("p",[s._v(">WebAssembly 类型大致如下：")]),s._v(" "),a("ul",[a("li",[s._v("i32、u32、i64、v128 等")]),s._v(" "),a("li",[s._v("小整数类型：i8、u8 等")]),s._v(" "),a("li",[s._v("变量整数类型：isize、usize 等")])]),s._v(" "),a("p",[s._v("Binaryen 会前置将 AssemblyScript 静态编译成强类型的 WebAssembly 二进制，然后才会交给 JS 引擎去执行，所以说虽然 AssemblyScript 带来了一层抽象，但是实际用于生产的代码依然是\nWebAssembly，保有 WebAssembly 的性能优势。AssemblyScript 被设计的和 TypeScript 非常相似，提供了一组内建的函数可以直接操作 WebAssembly 以及编译器的特性.")]),s._v(" "),a("p",[s._v(">内建函数：")]),s._v(" "),a("ul",[a("li",[s._v("静态类型检查：\n"),a("ul",[a("li",[a("code",[s._v("function isInteger<t>(value?: T): ``bool")]),s._v(" 等")])])]),s._v(" "),a("li",[s._v("实用函数：\n"),a("ul",[a("li",[a("code",[s._v("function sizeof<t>(): usize")]),s._v(" 等")])])]),s._v(" "),a("li",[s._v("操作 WebAssembly：\n"),a("ul",[a("li",[s._v("数学操作\n"),a("ul",[a("li",[a("code",[s._v("function clz<t>(value: T): T")]),s._v(" 等")])])]),s._v(" "),a("li",[s._v("内存操作\n"),a("ul",[a("li",[a("code",[s._v("function load<t>(ptr: usize, immOffset?: usize): T")]),s._v(" 等")])])]),s._v(" "),a("li",[s._v("控制流\n"),a("ul",[a("li",[a("code",[s._v("function select<t>(ifTrue: T, ifFalse: T, condition: ``bool``): T")]),s._v(" 等")])])]),s._v(" "),a("li",[s._v("SIMD")]),s._v(" "),a("li",[s._v("Atomics")]),s._v(" "),a("li",[s._v("Inline instructions")])])])]),s._v(" "),a("p",[s._v("然后基于这套内建的函数向上构建一套标准库。")]),s._v(" "),a("p",[s._v(">标准库：")]),s._v(" "),a("ul",[a("li",[s._v("Globals")]),s._v(" "),a("li",[s._v("Array")]),s._v(" "),a("li",[s._v("ArrayBuffer")]),s._v(" "),a("li",[s._v("DataView")]),s._v(" "),a("li",[s._v("Date")]),s._v(" "),a("li",[s._v("Error")]),s._v(" "),a("li",[s._v("Map")]),s._v(" "),a("li",[s._v("Math")]),s._v(" "),a("li",[s._v("Number")]),s._v(" "),a("li",[s._v("Set")]),s._v(" "),a("li",[s._v("String")]),s._v(" "),a("li",[s._v("Symbol")]),s._v(" "),a("li",[s._v("TypedArray")])]),s._v(" "),a("p",[s._v("如一个典型的 Array 的使用如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Array")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// arr[0]; // 会出错 😢")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 进行初始化")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("lt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 可以正确工作 😊")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("可以看到 AssemblyScript 在为 JavaScript 添加类似 TypeScript 那样的语法，然后在使用上需要保持和 C/C++ 等静态强类型的要求，如不初始化，进行内存分配就访问就会报错。")]),s._v(" "),a("p",[s._v("还有一些扩展库，如 Node.js 的 process、crypto 等，JS 的 console，还有一些和内存相关的 StaticArray、heap 等。")]),s._v(" "),a("p",[s._v("可以看到通过上面基础的类型、内建库、标准库和扩展库，AssemblyScript 基本上构造了 JavaScript 所拥有的的全部特性，同时 AssemblyScript 提供了类似 TypeScript\n的语法，在写法上严格遵循强类型静态语言的规范。")]),s._v(" "),a("p",[s._v("值得一提的是，因为当前 WebAssembly 的 ES 模块规范依然在草案中，AssemblyScript 自行进行了模块的实现，例如导出一个模块：")]),s._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// env.ts")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("doSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" i32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... 函数体 */")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("导入一个模块：")]),s._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" doSomething "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./env"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("一个大段代码、使用类的例子：")]),s._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Animal")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("t"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ONE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" i32 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" i32"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" i32"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" i32 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" Animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ONE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  two"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" i16 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 6   instanceSub<t>(a: T, b: T): T { return a - b + <t>Animal.ONE; } // tsc does not allow this }")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("staticOne")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" i32 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" Animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ONE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("staticAdd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" i32"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" i32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" i32 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" Animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("instanceTwo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" i32 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" animal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Animal")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("i32"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("two"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("instanceSub")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" f32"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" f32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" f32 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" animal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Animal")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("f32"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("instanceSub"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("f32"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("p",[s._v("AssemblyScript 为我们打开了一扇新的大门，可以以 TS 形式的语法，遵循静态强类型的规范进行高效编码，同时又能够便捷的操作 WebAssembly/编译器相关的 API，代码写完之后，通过 Binaryen\n编译器将其编译为 WASM 二进制，然后获取到 WASM 的执行性能。")]),s._v(" "),a("p",[s._v("得益于 AssemblyScript 兼具灵活性与性能，目前使用 AssemblyScript 构建的应用生态已经初具繁荣，目前在区块链、构建工具、编辑器、模拟器、游戏、图形编辑工具、库、IoT、测试工具等方面都有大量使用\nAssemblyScript 构建的产物："),a("a",{attrs:{href:"https://www.assemblyscript.org/built-with-assemblyscript.html#games",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.assemblyscript.org/built-with-assemblyscript.html#games"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v(">上面是使用 AssemblyScript 构建的一个五子棋游戏。")]),s._v(" "),a("h2",{attrs:{id:"一种鬼才哲学：将-c-c-代码跑在浏览器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一种鬼才哲学：将-c-c-代码跑在浏览器"}},[s._v("#")]),s._v(" 一种鬼才哲学：将 C/C++ 代码跑在浏览器")]),s._v(" "),a("p",[s._v("虽然 AssemblyScript 的出现极大的改善了 WebAssembly 在高效率编码方面的缺陷，但是作为一门新的编程语言，其最大的劣势就是生态、开发者与积累。")]),s._v(" "),a("p",[s._v("WebAssembly 的设计者显然在设计上同时考虑到了各种完善的情况，既然 WebAssembly\n是一种二进制格式，那么其就可以作为其他语言的编译目标，如果能够构建一种编译器，能够将已有的、成熟的、且兼具海量的开发者和强大的生态的语言编译到 WebAssembly 使用，那么相当于可以直接复用这个语言多年的积累，并用它们来完善\nWebAssembly 生态，将它们运行在 Web、Node.js 中。")]),s._v(" "),a("p",[s._v("幸运的是，针对 C/C++ 已经有 "),a("a",{attrs:{href:"https://github.com/emscripten-core/emscripten",target:"_blank",rel:"noopener noreferrer"}},[s._v("Emscripten"),a("OutboundLink")],1),s._v(" 这样优秀的编译器存在了。")]),s._v(" "),a("p",[a("img",{attrs:{src:"wasm/f7d05625019a486047d30d471815935f.png",alt:""}})]),s._v(" "),a("p",[s._v("可以通过下面这张图直观的阐述 Emscripten 在开发链路中的地位：")]),s._v(" "),a("p",[a("img",{attrs:{src:"wasm/bcc371762bdab5d31e56e344494b0d6b.png",alt:""}})]),s._v(" "),a("p",[s._v("即将 C/C++ 的代码（或者 Rust/Go 等）编译成 WASM，然后通过 JS 胶水代码将 WASM 跑在浏览器中（或 Node.js）的 runtime，如 ffmpeg 这个使用 C 编写音视频转码工具，通过\nEmscripten 编译器编译到 Web 中使用，可直接在浏览器前端转码音视频。")]),s._v(" "),a("p",[s._v(">上述的 JS “Gule” 代码是必须的，因为如果需要将 C/C++ 编译到 WASM，还能在浏览器中执行，就得实现映射到 C/C++ 相关操作的 Web API，这样才能保证执行有效，这些胶水代码目前包含一些比较流行的 C/C++ 库，如 "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Simple_DirectMedia_Layer",target:"_blank",rel:"noopener noreferrer"}},[s._v("SDL"),a("OutboundLink")],1),s._v("、"),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/OpenGL",target:"_blank",rel:"noopener noreferrer"}},[s._v("OpenGL"),a("OutboundLink")],1),s._v("、"),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/OpenAL",target:"_blank",rel:"noopener noreferrer"}},[s._v("OpenAL"),a("OutboundLink")],1),s._v("、以及 "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/POSIX",target:"_blank",rel:"noopener noreferrer"}},[s._v("POSIX"),a("OutboundLink")],1),s._v(" 的一部分 API。")]),s._v(" "),a("p",[s._v("目前使用 WebAssembly 最大的场景也是这种将 C/C++ 模块编译到 WASM 的方式，比较有名的例子有 "),a("a",{attrs:{href:"https://blog.mozilla.org/blog/2014/03/12/mozilla-and-epic-preview-unreal-engine-4-running-in-firefox/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Unreal Engine 4"),a("OutboundLink")],1),s._v("、"),a("a",{attrs:{href:"https://blogs.unity3d.com/2018/08/15/webassembly-is-here/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Unity"),a("OutboundLink")],1),s._v(" 之类的大型库或应用。")]),s._v(" "),a("h2",{attrs:{id:"webassembly-会取代-javascript-吗？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webassembly-会取代-javascript-吗？"}},[s._v("#")]),s._v(" WebAssembly 会取代 JavaScript 吗？")]),s._v(" "),a("p",[s._v("答案是不会。")]),s._v(" "),a("p",[s._v("根据上面的层层阐述，实际上 WASM 的设计初衷就可以梳理为以下几点：")]),s._v(" "),a("ul",[a("li",[s._v("最大程度的复用现有的底层语言生态，如 C/C++ 在游戏开发、编译器设计等方面的积淀")]),s._v(" "),a("li",[s._v("在 Web、Node.js 或其他 WASM runtime 获得近乎于原生的性能，也就是可以让浏览器也能跑大型游戏、图像剪辑等应用")]),s._v(" "),a("li",[s._v("还有最大程度的兼容 Web、保证安全")]),s._v(" "),a("li",[s._v("同时在开发上（如果需要开发）易于读写和可调试，这一点 AssemblyScript 走得更远")])]),s._v(" "),a("p",[s._v("所以从初衷出发，WebAssembly 的作用更适合下面这张图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"wasm/8db810a71c6bcb688816f7b2953bfaa2.png",alt:""}})]),s._v(" "),a("p",[s._v("WASM 桥接各种系统编程语言的生态，近一步补齐了 Web 开发生态之外，还为 JS 提供性能的补充，正是 Web 发展至今所缺失的重要的一块版图。")]),s._v(" "),a("p",[s._v(">Rust Web Framework："),a("a",{attrs:{href:"https://github.com/yewstack/yew",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/yewstack/yew"),a("OutboundLink")],1)]),s._v(" "),a("h1",{attrs:{id:"深入探索-emscripten"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深入探索-emscripten"}},[s._v("#")]),s._v(" 深入探索 Emscripten")]),s._v(" "),a("p",[s._v(">地址："),a("a",{attrs:{href:"https://github.com/emscripten-core/emscripten",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/emscripten-core/emscripten"),a("OutboundLink")],1),s._v("\n>下面所有的 demo 都可以在仓库："),a("a",{attrs:{href:"https://code.byted.org/huangwei.fps/webassembly-demos/tree/master",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://code.byted.org/huangwei.fps/webassembly-demos/tree/master"),a("OutboundLink")],1),s._v("找到\n>Star：21.4K\n>维护：活跃")]),s._v(" "),a("p",[a("img",{attrs:{src:"wasm/fdab0ea6d987131c3a89653759d46b92.png",alt:""}})]),s._v(" "),a("p",[s._v("Emscripten 是一个开源的，跨平台的，用于将 C/C++ 编译为 WebAssembly 的编译器工具链，由 LLVM、Binaryen、Closure Compiler 和其他工具等组成。")]),s._v(" "),a("p",[s._v("Emscripten 的核心工具为 Emscripten Compiler Frontend（emcc），emcc 是用于替代一些原生的编译器如 gcc 或 clang，对 C/C++ 代码进行编译。")]),s._v(" "),a("p",[s._v("实际上为了能让几乎所有的可移植的 C/C++ 代码库能够编译为 WebAssembly，并在 Web 或 Node.js 执行，Emscripten Runtime 其实还提供了兼容 C/C++ 标准库、相关 API 到\nWeb/Node.js API 的映射，这份映射存在于编译之后的 JS 胶水代码中。")]),s._v(" "),a("p",[s._v("再看下面这张图，红色部分为 Emscripten 编译后的产物，绿色部分为 Emscripten 为保证 C/C++ 代码能够运行的一些 runtime 支持：")]),s._v(" "),a("p",[a("img",{attrs:{src:"wasm/d13e2d64d38e8535a57142749e8b96fc.png",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"简单体验一下-hello-world"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单体验一下-hello-world"}},[s._v("#")]),s._v(" 简单体验一下 “Hello World”")]),s._v(" "),a("p",[s._v("值得一提的是，WebAssembly 相关工具链的安装几乎都是以源码的形式提供，这可能和 C/C++ 生态的习惯不无关系。")]),s._v(" "),a("p",[s._v("为了完成简单的 C/C++ 程序运行在 Web，我们首先需要安装 Emscripten 的 SDK：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Clone 代码仓库")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https: // github "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" com / emscripten-core / emsdk "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入仓库")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" emsdk\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取最新代码，如果是新 clone 的这一步可以不需要")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装 SDK 工具，我们安装 1.39.18，方便测试")]),s._v("\n./emsdk "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.39")]),s._v(".18\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 激活 SDK")]),s._v("\n./emsdk activate "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.39")]),s._v(".18\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将相应的环境变量加入到系统 PATH")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" ./emsdk_env.sh\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行命令测试是否安装成功")]),s._v("\nemcc -v "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("p",[s._v("如果安装成功，上述的命令运行之后会输出如下结果：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("emcc "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Emscripten gcc/clang-like replacement + linker emulating GNU ld"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.39")]),s._v(".18\nclang version "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11.0")]),s._v(".0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("/b/s/w/ir/cache/git/chromium.googlesource.com-external-github.com-llvm-llvm--project 613c4a87ba9bb39d1927402f4dd4c1ef1f9a02f7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nTarget: x86_64-apple-darwin21.1.0\nThread model: posix\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("让我们准备初始代码：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -r webassembly/hello_world\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" webassembly/hello_world "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("amp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("amp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" main.c\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("在 "),a("code",[s._v("main.c")]),s._v(" 中加入如下代码：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello, world!\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("然后使用 emcc 来编译这段 C 代码，在命令行切换到 "),a("code",[s._v("webassembly/hello_world")]),s._v(" 目录，运行：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("emcc main.c\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("上述命令会输出两个文件："),a("code",[s._v("a.out.js")]),s._v(" 和 "),a("code",[s._v("a.out.wasm")]),s._v(" ，后者为编译之后的 wasm 代码，前者为 JS 胶水代码，提供了 WASM 运行的 runtime。")]),s._v(" "),a("p",[s._v("可以使用 Node.js 进行快速测试：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("node a.out.js\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("会输出 "),a("code",[s._v('"hello, world!"')]),s._v(" ，我们成功将 C/C++ 代码运行在了 Node.js 环境。")]),s._v(" "),a("p",[a("img",{attrs:{src:"wasm/8e4a718982a500bb73d2788a594c6a41.png",alt:""}})]),s._v(" "),a("p",[s._v("接下来我们尝试一下将代码运行在 Web 环境，修改编译代码如下：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("emcc main.c -o main.html\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("上述命令会生成三个文件：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("main.js")]),s._v(" 胶水代码")]),s._v(" "),a("li",[a("code",[s._v("main.wasm")]),s._v(" WASM 代码")]),s._v(" "),a("li",[a("code",[s._v("main.html")]),s._v(" 加载胶水代码，执行 WASM 的一些逻辑")])]),s._v(" "),a("p",[s._v(">Emscripten 生成代码有一定的规则，具体可以参考："),a("a",{attrs:{href:"https://emscripten.org/docs/compiling/Building-Projects.html#emscripten-linker-output-files",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://emscripten.org/docs/compiling/Building-Projects.html#emscripten-linker-output-files"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("如果要在浏览器打开这个 HTML，需要在本地起一个服务器，因为单纯的打开通过 "),a("code",[s._v("file://")]),s._v(" 协议访问时，主流浏览器不支持 XHR 请求，只有在 HTTP 服务器下，才能进行 XHR\n请求，所以我们运行如下命令来打开网站：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("npx serve "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("打开网页，访问 "),a("a",{attrs:{href:"http://localhost:3000/main.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("localhost:3000/main.html"),a("OutboundLink")],1),s._v("，可以看到如下结果：")]),s._v(" "),a("p",[a("img",{attrs:{src:"wasm/61834ddc3a88834e2c06634dac7973e8.png",alt:""}})]),s._v(" "),a("p",[s._v("同时开发者工具里面也会有相应的打印输出：")]),s._v(" "),a("p",[a("img",{attrs:{src:"wasm/fee633db283ec5cef5b44d3dd96f5d7f.png",alt:""}})]),s._v(" "),a("p",[s._v("我们成功的将 C 代码跑在了 Node.js 和浏览器！")]),s._v(" "),a("h1",{attrs:{id:"关于-webassembly-的未来"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于-webassembly-的未来"}},[s._v("#")]),s._v(" 关于 WebAssembly 的未来")]),s._v(" "),a("p",[s._v("本文仅仅列举了一些 WebAssembly 当前的一些主要应用场景，包含 WebAssembly 的高性能、轻量和跨平台，使得我们可以将 C/C++ 等语言运行在 Web，也可以将桌面端应用跑在 Web 容器。")]),s._v(" "),a("p",[s._v("但是这篇文章没有涉及到的内容有 "),a("a",{attrs:{href:"https://github.com/WebAssembly/WASI",target:"_blank",rel:"noopener noreferrer"}},[s._v("WASI"),a("OutboundLink")],1),s._v("，一种将 WebAssembly 跑在任何系统上的标准化系统接口，当 WebAssembly\n的性能逐渐增强时，WASI 可以提供一种恰是可行的方式，可以在任意平台上运行任意的代码，就像 Docker 所做的一样，但是不需要受限于操作系统。正如 Docker 的创始人所说：")]),s._v(" "),a("p",[s._v(">“ 如果 WASM+WASI 在 2008 年就出现的话，那么就不需要创造 Docker 了，服务器上的 WASM 是计算的未来，是我们期待已久的标准化的系统接口。")]),s._v(" "),a("p",[s._v("另一个有意思的内容是 WASM 的客户端开发框架如 "),a("a",{attrs:{href:"https://github.com/yewstack/yew",target:"_blank",rel:"noopener noreferrer"}},[s._v("yew"),a("OutboundLink")],1),s._v("，未来可能将像 React/Vue/Angular 一样流行。")]),s._v(" "),a("p",[s._v("而 WASM 的包管理工具 "),a("a",{attrs:{href:"https://wapm.io/",target:"_blank",rel:"noopener noreferrer"}},[s._v("WAPM"),a("OutboundLink")],1),s._v("，得益于 WASM 的跨平台特性，可能会变成一种在不同语言的不同框架之间共享包的首选方式。")]),s._v(" "),a("p",[s._v("同时 WebAssembly 也是由 W3C 主要负责开发，各大厂商，包括 Microsoft、Google、Mozilla 等赞助和共同维护的一个项目，相信 WebAssembly 会有一个非常值得期待的未来。")]),s._v(" "),a("p",[a("img",{attrs:{src:"wasm/ea0f2aa54e85216e5ad7e4b342ad09c0.png",alt:""}})]),s._v(" "),a("h1",{attrs:{id:"参考链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[s._v("#")]),s._v(" 参考链接")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2017/09/asmjs_emscripten.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.ruanyifeng.com/blog/2017/09/asmjs_emscripten.html"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://pspdfkit.com/blog/2017/webassembly-a-new-hope/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://pspdfkit.com/blog/2017/webassembly-a-new-hope/"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://hacks.mozilla.org/2017/02/what-makes-webassembly-fast/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://hacks.mozilla.org/2017/02/what-makes-webassembly-fast/"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.sitepoint.com/understanding-asm-js/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.sitepoint.com/understanding-asm-js/"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"http://www.cmake.org/download/",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://www.cmake.org/download/"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/WebAssembly/existing_C_to_wasm",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://developer.mozilla.org/en-US/docs/WebAssembly/existing_C_to_wasm"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://research.mozilla.org/webassembly/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://research.mozilla.org/webassembly/"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://itnext.io/build-ffmpeg-webassembly-version-ffmpeg-js-part-2-compile-with-emscripten-4c581e8c9a16?gi=e525b34f2c21",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://itnext.io/build-ffmpeg-webassembly-version-ffmpeg-js-part-2-compile-with-emscripten-4c581e8c9a16?gi=e525b34f2c21"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://dev.to/alfg/ffmpeg-webassembly-2cbl",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://dev.to/alfg/ffmpeg-webassembly-2cbl"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://gist.github.com/rinthel/f4df3023245dd3e5a27218e8b3d79926",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://gist.github.com/rinthel/f4df3023245dd3e5a27218e8b3d79926"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/Kagami/ffmpeg.js/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/Kagami/ffmpeg.js/"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://qdmana.com/2021/04/20210401214625324n.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://qdmana.com/2021/04/20210401214625324n.html"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/leandromoreira/ffmpeg-libav-tutorial",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/leandromoreira/ffmpeg-libav-tutorial"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"http://ffmpeg.org/doxygen/4.1/examples.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://ffmpeg.org/doxygen/4.1/examples.html"),a("OutboundLink")],1),s._v("\n</stdio.h>")])])])}),[],!1,null,null,null);t.default=n.exports}}]);