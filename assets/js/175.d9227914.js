(window.webpackJsonp=window.webpackJsonp||[]).push([[175],{849:function(t,a,s){"use strict";s.r(a);var i=s(4),e=Object(i.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/568916195",target:"_blank",rel:"noopener noreferrer"}},[t._v("原文在此"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("img",{attrs:{src:"zhimg.com/v2-34e3186bc54db3eccd03b23ff671241d_1440w.png",alt:""}})]),t._v(" "),s("p",[t._v("本文亮点：首次实现在移动设备上的实时神经渲染")]),t._v(" "),s("h2",{attrs:{id:"_1-预备知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-预备知识"}},[t._v("#")]),t._v(" 1.预备知识")]),t._v(" "),s("h3",{attrs:{id:"_1-1-nerf回顾"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-nerf回顾"}},[t._v("#")]),t._v(" 1.1 NeRF回顾")]),t._v(" "),s("p",[t._v("1）给定相机内外参数，可计算出一条穿过每个像素的射线。在该射线上采样N个点。")]),t._v(" "),s("p",[t._v("2）创建一个神经网络，输入为5维数据，输出为4维数据。将这N个点的空间坐标  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("x")]),s("mo",{attrs:{separator:"true"}},[t._v(",")]),s("mi",[t._v("y")]),s("mo",{attrs:{separator:"true"}},[t._v(",")]),s("mi",[t._v("z")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("(x, y, z)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathdefault"},[t._v("x")]),s("span",{staticClass:"mpunct"},[t._v(",")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03588em"}},[t._v("y")]),s("span",{staticClass:"mpunct"},[t._v(",")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.04398em"}},[t._v("z")]),s("span",{staticClass:"mclose"},[t._v(")")])])])])]),t._v(" "),s("p",[t._v("，以及射线方向  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("θ")]),s("mo",{attrs:{separator:"true"}},[t._v(",")]),s("mi",[t._v("ϕ")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("(\\theta, \\phi)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[t._v("θ")]),s("span",{staticClass:"mpunct"},[t._v(",")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),s("span",{staticClass:"mord mathdefault"},[t._v("ϕ")]),s("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v("  ,输入到该网络中，获得每个点的颜色和浓度  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("r")]),s("mo",{attrs:{separator:"true"}},[t._v(",")]),s("mi",[t._v("g")]),s("mo",{attrs:{separator:"true"}},[t._v(",")]),s("mi",[t._v("b")]),s("mo",{attrs:{separator:"true"}},[t._v(",")]),s("mi",[t._v("σ")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("(r,g,b,\\sigma)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[t._v("r")]),s("span",{staticClass:"mpunct"},[t._v(",")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03588em"}},[t._v("g")]),s("span",{staticClass:"mpunct"},[t._v(",")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),s("span",{staticClass:"mord mathdefault"},[t._v("b")]),s("span",{staticClass:"mpunct"},[t._v(",")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03588em"}},[t._v("σ")]),s("span",{staticClass:"mclose"},[t._v(")")])])])])]),t._v(" "),s("p",[t._v("3）将每个点的颜色按照浓度进行加权融合，计算得到该像素最终的颜色。")]),t._v(" "),s("p",[s("img",{attrs:{src:"zhimg.com/v2-11adfe98c34b32efc658189701d478eb_r.jpg",alt:"图1"}})]),t._v(" "),s("p",[t._v("NeRF训练和推理非常缓慢。在推理时，渲染一张800x800的图像耗时1min左右， 原因是因为对于每个像素要采样N个采样点，每个采样点要经过一个MLP进行推理计算，导致计算量较大。")]),t._v(" "),s("p",[t._v("那么如何提升NeRF的推理效率？")]),t._v(" "),s("p",[t._v("把NeRF的MLP部分进一步拆解成Encoder和Decoder，见图2。 Encoder部分将一个空间坐标点编码成256的特征向量，然后通过Decoder部分，把特征向量以及视线方向解码成一个色彩值RGB和浓度值  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("σ")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\sigma")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03588em"}},[t._v("σ")])])])]),t._v("  。若能将Encoder部分输出的特征向量提前存储，在实时渲染阶段，直接读取该特征向量，仅使用Decoder部分实时推理, 则会节省大量的计算。")]),t._v(" "),s("p",[s("img",{attrs:{src:"zhimg.com/v2-2f5745afd56268d1172e0a71635b20d2_r.jpg",alt:"图2"}})]),t._v(" "),s("h3",{attrs:{id:"_1-2-图形渲染基本原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-图形渲染基本原理"}},[t._v("#")]),t._v(" 1.2 图形渲染基本原理")]),t._v(" "),s("p",[t._v("我们看到的渲染画面（例如游戏画面），一般由GPU的渲染管线来完成。这里仅介绍最简单的基本原理。感兴趣的可以去看闫令琪的Game101课程。")]),t._v(" "),s("p",[s("img",{attrs:{src:"zhimg.com/v2-be1b2674b834e12ff4972a3411af11a3_r.jpg",alt:"图3"}})]),t._v(" "),s("p",[s("strong",[t._v("模型数据")]),t._v(" ：模型的几何形状由一堆三角面片描述，每个三角面片由三个顶点构成。而每个三角面片的颜色存储在模型纹理图像中。模型会存储每个顶点的空间坐标，如图3左下的“OBJ”，以及每个顶点对应的纹理坐标，即每个三角网格面片对应着纹理图像中的一块三角区域，如图3左上的“TEXTURE”")]),t._v(" "),s("p",[t._v("模型数据要经过如下 "),s("strong",[t._v("渲染流程")]),t._v(" ，如图3：")]),t._v(" "),s("p",[t._v("1）读取OBJ里的顶点3d坐标，以及对应的uv坐标")]),t._v(" "),s("p",[t._v("2）顶点坐标依次经过model, viewport, projection坐标空间变换，将3d坐标变成2d的屏幕坐标（像素坐标）")]),t._v(" "),s("p",[t._v("3）找出在屏幕坐标系下，当前三角面片覆盖的所有像素坐标，这一步也叫做光栅化。")]),t._v(" "),s("p",[t._v("4） 在已知每个顶点坐标的情况下，很容易获得每个像素坐标对应的纹理坐标（双线性插值，Mipmap插值等等）")]),t._v(" "),s("p",[t._v("5）根据纹理图像中对应坐标的颜色，赋值给该像素")]),t._v(" "),s("p",[t._v("其中, 步骤（2）和（5），在现代GPU渲染管线里，允许写脚本进行定制化操作，这部分代码叫做“ "),s("strong",[t._v("shader")]),t._v(" ”")]),t._v(" "),s("blockquote",[s("p",[t._v("例如，美术提供了一个带彩色纹理的怪物，但是当怪物死亡时，可以通过shader代码实现黑白色的怪物外表，而不需要美术同时提供黑白色的纹理。")])]),t._v(" "),s("p",[t._v("而光栅化，可以看成是对于每个像素发射一条穿过相机中心的射线，找出该射线与三角网格的交点。当射线与场景中多个网格存在交点时，一般会使用离相机最近的交点作为唯一交点。这类似于NeRF的光线路径采样时，仅采样离相机最近的表面交点。")]),t._v(" "),s("p",[t._v("伪代码如下：")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3D模型的定义")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Model3D")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    list_vertice_coord \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所有顶点坐标")]),t._v("\n    list_uv_coord  \t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所有纹理坐标，与顶点位置一一对应")]),t._v("\n    list_face_index   \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每个三角面片由哪几个顶点组成")]),t._v("\n\nModel3D  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 加载模型顶点数据")]),t._v("\nTEXTURE\t "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 加载模型纹理数据")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 采用Shader来对渲染管线进行定制化")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 处理每个顶点坐标")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vertice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 变换模型坐标到屏幕坐标")]),t._v("\n        screen_coord "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" MVP"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vertice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此处可以写其他顶点操作，例如膨胀")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" screen_coord\n        \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 计算每个像素值")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("frag")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        rgb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TEXTURE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("uv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 根据uv坐标，获得纹理图像上的像素值")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此处可以写其他颜色操作，例如转成黑白色")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" rgb\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" each_face "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" Model3D"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("list_face_index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获得每个三角面片的顶点坐标和uv坐标")]),t._v("\n    vertices "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" get_vertices"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("each_face"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3x3")]),t._v("\n    uvs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" get_uvs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("each_face"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3x2")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将顶点坐标由模型坐标系变换到屏幕坐标系")]),t._v("\n    screen_coords "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Shader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vertices"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3x3，此处还保留着每个像素的深度")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当前三角面片在屏幕显示时，会覆盖哪些像素")]),t._v("\n    covered_pixels "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" get_covered_pixels"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("screen_coords"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nx2 ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 计算像素值")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" each_pixel_coord "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" covered_pixels\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 给定每个顶点的uv，插值计算当前pixel的uv")]),t._v("\n        interpolated_uv "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" get_interpolated_uv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("each_pixel_coord"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uvs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 该像素上最终的色彩值")]),t._v("\n        rgb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Shader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("frag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("interpolated_uv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br")])]),s("h3",{attrs:{id:"_2-mobilenerf的渲染过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-mobilenerf的渲染过程"}},[t._v("#")]),t._v(" 2.MobileNeRF的渲染过程")]),t._v(" "),s("p",[t._v("假如我们设计了一种NeRF，结构如下：")]),t._v(" "),s("p",[t._v("1）每条射线上的采样点位置和个数（且远少于原始NeRF）是已知的")]),t._v(" "),s("p",[t._v("2）每个采样点的位置特征向量（NeRF的Encoder部分输出）是预先存储好的")]),t._v(" "),s("p",[t._v("3）仅执行NeRF的Decoder推理")]),t._v(" "),s("p",[t._v("4）对于当前待渲染画面的每个像素，上述的计算是在GPU上并行的")]),t._v(" "),s("p",[t._v("那么这种新NeRF，相比原始NeRF，显然会大幅降低计算量。")]),t._v(" "),s("p",[t._v("MobileNeRF通过利用GPU渲染管线的光栅化过程，实现了这种能在移动设备上实时渲染的NeRF, 见图4与图5：")]),t._v(" "),s("p",[t._v("1）将整个场景的几何表面，使用非半透明的三角网格来表示。这意味着，对于待渲染画面的每个像素，会直接获得射线与三角面片的交点，作为整条射线路径上唯一的采样点")]),t._v(" "),s("p",[t._v("2）顶点对应的纹理图像，存储的不再是该顶点的颜色，而是该空间点的“空间特征”，即NeRF的Encoder输出特征")]),t._v(" "),s("p",[t._v("3）将NeRF的Decoder部分，写入到Shader里，可以称之为Neural Shader")]),t._v(" "),s("p",[s("img",{attrs:{src:"zhimg.com/v2-07963091831b01225583a59d76990e52_r.jpg",alt:"图4"}})]),t._v(" "),s("p",[t._v("如图5， 因为纹理图像的每个像素仅能存储4个通道（RGBA）的数据，所以当Encoder输出8维特征时，需要分别使用两张纹理图像来表示。在Neural Shader中，把根据uv坐标读取的两个特征，以及射线方向，一起输出到一个浅层mlp中，最终解码出该像素的色彩值")]),t._v(" "),s("p",[s("img",{attrs:{src:"zhimg.com/v2-b62426283f0a3db1ada03a6afd2d846e_r.jpg",alt:"图5"}})]),t._v(" "),s("h2",{attrs:{id:"_3-mobilenerf的训练过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-mobilenerf的训练过程"}},[t._v("#")]),t._v(" 3. MobileNeRF的训练过程")]),t._v(" "),s("p",[t._v("为了实现上述的渲染过程，作者将训练分为三个阶段：")]),t._v(" "),s("p",[t._v("（1）初始化一个grid mesh，基于可微渲染思想，学习场景的几何结构，以及透明度  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("α")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\alpha")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.0037em"}},[t._v("α")])])])]),t._v("  连续的 Radius Field")]),t._v(" "),s("p",[t._v("（2）将  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("α")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\alpha")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.0037em"}},[t._v("α")])])])]),t._v("  二值化")]),t._v(" "),s("p",[t._v("（3）对grid mesh进行剪枝操作，保存为OBJ，以及烘培特征向量为纹理图像TEXTURE，保存Decoder的网络权重")]),t._v(" "),s("h3",{attrs:{id:"_3-1-训练阶段一"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-训练阶段一"}},[t._v("#")]),t._v(" 3.1 训练阶段一")]),t._v(" "),s("p",[s("img",{attrs:{src:"zhimg.com/v2-c16d384d882f5f6bb659d2b78ab6667c_r.jpg",alt:"图6"}})]),t._v(" "),s("p",[s("strong",[t._v("3.1.1 总览")])]),t._v(" "),s("p",[t._v("（1）初始化一个形状如格子间的三维grid mesh, 见图6最左侧")]),t._v(" "),s("p",[t._v("（2）根据相机位姿以及像素坐标，计算一条射线")]),t._v(" "),s("p",[t._v("（3）射线与grid mesh的交点  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("msub",[s("mi",[t._v("p")]),s("mi",[t._v("k")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("p_k")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.625em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathdefault"},[t._v("p")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.33610799999999996em"}},[s("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mathdefault mtight",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[s("span")])])])])])])])]),t._v("  作为采样点, 见图6最右侧。这里与近似平均采样的原始NeRF策略不同")]),t._v(" "),s("p",[t._v("（4）创建3个MLP：")]),t._v(" "),s("p",[s("img",{attrs:{src:"zhimg.com/v2-43a24b076c4ae9ecab9d34b8bd2c439c_r.jpg",alt:""}})]),t._v(" "),s("p",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",{attrs:{mathvariant:"script"}},[t._v("A")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\mathcal A")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathcal"},[t._v("A")])])])]),t._v("  ：预测采样点的透明度  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("α")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\alpha")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.0037em"}},[t._v("α")])])])]),t._v("  （ "),s("strong",[t._v("注意")]),t._v(" ，此处非NeRF系列中的浓度  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("σ")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\sigma")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03588em"}},[t._v("σ")])])])]),t._v("  ）")]),t._v(" "),s("p",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",{attrs:{mathvariant:"script"}},[t._v("F")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\mathcal F")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathcal",staticStyle:{"margin-right":"0.09931em"}},[t._v("F")])])])]),t._v("  ：预测采样点的空间特征向量  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("msub",[s("mi",[t._v("f")]),s("mi",[t._v("k")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("f_k")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.10764em"}},[t._v("f")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.33610799999999996em"}},[s("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"-0.10764em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mathdefault mtight",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[s("span")])])])])])])])]),t._v("  ，即 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",{attrs:{mathvariant:"script"}},[t._v("F")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\mathcal F")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathcal",staticStyle:{"margin-right":"0.09931em"}},[t._v("F")])])])]),t._v(" 是前面提到的 "),s("strong",[t._v("Encoder")])]),t._v(" "),s("p",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",{attrs:{mathvariant:"script"}},[t._v("H")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\mathcal H")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathcal",staticStyle:{"margin-right":"0.00965em"}},[t._v("H")])])])]),t._v("  ：根据特征向量和视线方向，预测采样点的颜色  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("msub",[s("mi",[t._v("c")]),s("mi",[t._v("k")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("c_k")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.58056em","vertical-align":"-0.15em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathdefault"},[t._v("c")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.33610799999999996em"}},[s("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mathdefault mtight",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[s("span")])])])])])])])]),t._v("  ，即 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",{attrs:{mathvariant:"script"}},[t._v("H")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\mathcal H")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathcal",staticStyle:{"margin-right":"0.00965em"}},[t._v("H")])])])]),t._v(" 是前面提到的 "),s("strong",[t._v("Decoder")])]),t._v(" "),s("p",[t._v("将每个交点的颜色  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("msub",[s("mi",[t._v("c")]),s("mi",[t._v("k")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("c_k")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.58056em","vertical-align":"-0.15em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathdefault"},[t._v("c")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.33610799999999996em"}},[s("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mathdefault mtight",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[s("span")])])])])])])])]),t._v("  按照透明度  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("msub",[s("mi",[t._v("α")]),s("mi",[t._v("k")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\alpha_k")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.58056em","vertical-align":"-0.15em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.0037em"}},[t._v("α")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.33610799999999996em"}},[s("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"-0.0037em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mathdefault mtight",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[s("span")])])])])])])])]),t._v("  进行加权融合，获得该像素的预测值  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("C")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("r")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("C(r)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.07153em"}},[t._v("C")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[t._v("r")]),s("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v("  ，然后与真值  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("msub",[s("mi",[t._v("C")]),s("mrow",[s("mi",[t._v("g")]),s("mi",[t._v("t")])],1)],1),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("r")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("C_{gt}(r)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1.036108em","vertical-align":"-0.286108em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.07153em"}},[t._v("C")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.28055599999999997em"}},[s("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"-0.07153em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mtight"},[s("span",{staticClass:"mord mathdefault mtight",staticStyle:{"margin-right":"0.03588em"}},[t._v("g")]),s("span",{staticClass:"mord mathdefault mtight"},[t._v("t")])])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.286108em"}},[s("span")])])])])]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[t._v("r")]),s("span",{staticClass:"mclose"},[t._v(")")])])])])]),t._v(" "),s("p",[t._v("计算L2 Loss。加权融合计算如下式：")]),t._v(" "),s("p",[s("img",{attrs:{src:"zhimg.com/v2-93ab1d2b7bb2d5963f9d8807ddff746c_r.jpg",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("3.1.2 初始grid mesh的定义与优化")])]),t._v(" "),s("p",[t._v("定义一个中心在原点，尺寸为1的PxPxPx3的voxel grid， 每个网格中设置一个点，作为顶点vertice，将相邻的4个vertice连接，组成mesh的face, 整个mesh被称为grid mesh：")]),t._v(" "),s("p",[s("img",{attrs:{src:"zhimg.com/v2-6ad46fb0011d5cc219710f71fb589d43_r.jpg",alt:"图7"}})]),t._v(" "),s("p",[t._v("MobileNeRF采用了可微渲染的思想，把vertice位置作为可训练的参数，通过反向传播loss，优化其位置，达到“三维重建”的目的。")]),t._v(" "),s("blockquote",[s("p",[t._v("可以将顶点位置理解为某个函数的“权重参数”，该函数负责计算射线与mesh的交点，那么最终的loss显然会推动顶点位置的变化：\n"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("msub",[s("mi",[t._v("p")]),s("mi",[t._v("k")])],1),s("mo",[t._v("=")]),s("mi",{attrs:{mathvariant:"script"}},[t._v("P")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("r")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("msub",[s("mi",[t._v("t")]),s("mi",[t._v("k")])],1),s("mo",{attrs:{stretchy:"false"}},[t._v(")")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")]),s("mo",{attrs:{separator:"true"}},[t._v(";")]),s("mi",{attrs:{mathvariant:"script"}},[t._v("V")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("p_k = \\mathcal P(r(t_k));\\mathcal V)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.625em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathdefault"},[t._v("p")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.33610799999999996em"}},[s("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mathdefault mtight",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[s("span")])])])])]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),s("span",{staticClass:"mrel"},[t._v("=")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathcal",staticStyle:{"margin-right":"0.08222em"}},[t._v("P")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[t._v("r")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathdefault"},[t._v("t")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.33610799999999996em"}},[s("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mathdefault mtight",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[s("span")])])])])]),s("span",{staticClass:"mclose"},[t._v(")")]),s("span",{staticClass:"mclose"},[t._v(")")]),s("span",{staticClass:"mpunct"},[t._v(";")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),s("span",{staticClass:"mord mathcal",staticStyle:{"margin-right":"0.08222em"}},[t._v("V")]),s("span",{staticClass:"mclose"},[t._v(")")])])])])])]),t._v(" "),s("p",[t._v("作者通过正则化限制每个顶点的“活动范围”在格子内：")]),t._v(" "),s("p",[s("img",{attrs:{src:"zhimg.com/v2-be75e56e9b6d240dfecd476014ff9cdb_r.jpg",alt:""}})]),t._v(" "),s("p",[t._v("我个人的理解是，这么做可以防止学习到的顶点之间互相穿插:")]),t._v(" "),s("p",[s("img",{attrs:{src:"zhimg.com/v2-46b1cea72fc765b25342c286a06f0370_r.jpg",alt:"图8"}})]),t._v(" "),s("p",[s("strong",[t._v("3.1.3 训练加速")])]),t._v(" "),s("p",[s("img",{attrs:{src:"zhimg.com/v2-d17dbc09e4f11ffcc4f27c802c0dc3fd_r.jpg",alt:"图9"}})]),t._v(" "),s("p",[t._v("作者借鉴instant NGP，创建了另一个PxPxPx1的grid mesh，用于加速训练过程，见图9。每个网格用来预测当前网格内存在几何表面的可能性。加速过程如下：")]),t._v(" "),s("p",[t._v("（1）先在加速网格中找到射线穿过的grids")]),t._v(" "),s("p",[t._v("（2）根据加速网格的预测值，删除不含几何表面的grids")]),t._v(" "),s("p",[t._v("（3）在剩下的网格中，计算射线与mesh的交点")]),t._v(" "),s("p",[s("img",{attrs:{src:"zhimg.com/v2-c4cdc798866d78711c68349bb3082eb5_r.jpg",alt:""}})]),t._v(" "),s("p",[t._v("作者又增加了一个sparsity loss和smooth loss,")]),t._v(" "),s("p",[s("img",{attrs:{src:"zhimg.com/v2-5d40702aeafb5d871620cbc57b2d3c1b_r.jpg",alt:""}})]),t._v(" "),s("p",[t._v("原始NeRF在训练时，对于未观测到的区域，或者背景区域，会因为缺乏足够的立体约束，导致生成了大量的“solid”噪点。通过引入sparsity 正则化（原文称为loss），会迫使上述区域变得“empty”, 如图10")]),t._v(" "),s("p",[s("img",{attrs:{src:"zhimg.com/v2-7a15955adb1324a963ee5551cd511992_r.jpg",alt:"图10"}})]),t._v(" "),s("p",[t._v("在第一阶段训练完毕后，我们获得了：")]),t._v(" "),s("p",[t._v("（1）顶点位置优化过后的 "),s("strong",[t._v("grid mesh")]),t._v(" ， 充当整个场景的“三维几何结构”")]),t._v(" "),s("p",[t._v("（2）透明度  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("α")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\alpha")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.0037em"}},[t._v("α")])])])]),t._v("  在0到1之间的神经网络  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",{attrs:{mathvariant:"script"}},[t._v("A")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\mathcal A")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathcal"},[t._v("A")])])])])]),t._v(" "),s("p",[t._v("（3）NeRF Encoder部分：  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",{attrs:{mathvariant:"script"}},[t._v("F")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\mathcal F")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathcal",staticStyle:{"margin-right":"0.09931em"}},[t._v("F")])])])])]),t._v(" "),s("p",[t._v("（4）NeRF Decoder部分：  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",{attrs:{mathvariant:"script"}},[t._v("H")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\mathcal H")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathcal",staticStyle:{"margin-right":"0.00965em"}},[t._v("H")])])])])]),t._v(" "),s("h3",{attrs:{id:"_3-2-训练阶段二"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-训练阶段二"}},[t._v("#")]),t._v(" 3.2 训练阶段二")]),t._v(" "),s("p",[t._v("上一阶段训练完毕后，每个采样点的透明度  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("α")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\alpha")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.0037em"}},[t._v("α")])])])]),t._v("  为0到1之间。因为在渲染引擎里，处理半透明的mesh，比不透明的要更耗时，因此需要将透明度进行二值化——0或者1。将  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("msub",[s("mi",[t._v("α")]),s("mi",[t._v("k")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\alpha_k")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.58056em","vertical-align":"-0.15em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.0037em"}},[t._v("α")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.33610799999999996em"}},[s("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"-0.0037em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mathdefault mtight",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[s("span")])])])])])])])]),t._v("  修改如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"zhimg.com/v2-2ccc24f785bee59f7c1beafb98e2bae4_r.jpg",alt:""}})]),t._v(" "),s("p",[t._v('" Please note that the gradients are transparently passed through the discretization operation (i.e. ∇αˆ ≡ ∇α), regardless of the values of  '),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("msub",[s("mi",[t._v("α")]),s("mi",[t._v("k")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\alpha_k")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.58056em","vertical-align":"-0.15em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.0037em"}},[t._v("α")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.33610799999999996em"}},[s("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"-0.0037em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mathdefault mtight",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[s("span")])])])])])])])]),t._v("  and the resulting  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("msub",[s("mi",[t._v("α")]),s("mi",[t._v("k")])],1),s("mo",[t._v("∈")]),s("mo",{attrs:{stretchy:"false"}},[t._v("{")]),s("mn",[t._v("0")]),s("mo",{attrs:{separator:"true"}},[t._v(",")]),s("mn",[t._v("1")]),s("mo",{attrs:{stretchy:"false"}},[t._v("}")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\alpha_k \\in \\{0,1\\}")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.6891em","vertical-align":"-0.15em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.0037em"}},[t._v("α")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.33610799999999996em"}},[s("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"-0.0037em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mathdefault mtight",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[s("span")])])])])]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),s("span",{staticClass:"mrel"},[t._v("∈")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mopen"},[t._v("{")]),s("span",{staticClass:"mord"},[t._v("0")]),s("span",{staticClass:"mpunct"},[t._v(",")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),s("span",{staticClass:"mord"},[t._v("1")]),s("span",{staticClass:"mclose"},[t._v("}")])])])]),t._v(' "')]),t._v(" "),s("p",[t._v("为了让训练更稳定，在第二阶段的训练过程中，作者既渲染合成透明度二值化时的最终图像  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mover",{attrs:{accent:"true"}},[s("mi",[t._v("C")]),s("mo",[t._v("^")])],1),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("r")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\hat C(r)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1.19677em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord accent"},[s("span",{staticClass:"vlist-t"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.9467699999999999em"}},[s("span",{staticStyle:{top:"-3em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.07153em"}},[t._v("C")])]),s("span",{staticStyle:{top:"-3.25233em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),s("span",{staticClass:"accent-body",staticStyle:{left:"-0.16666em"}},[s("span",{staticClass:"mord"},[t._v("^")])])])])])])]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[t._v("r")]),s("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v("  ，又渲染合成透明度连续时的图像  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("C")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("r")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("C(r)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.07153em"}},[t._v("C")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[t._v("r")]),s("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v("  , 然后同时计算两者的loss：")]),t._v(" "),s("p",[s("img",{attrs:{src:"zhimg.com/v2-f57963c21df3a5e5c80a3915d39ad6d0_r.jpg",alt:""}})]),t._v(" "),s("p",[t._v("当loss（14）收敛后，会固定住其他参数，仅finetune神经网络  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",{attrs:{mathvariant:"script"}},[t._v("F")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\mathcal F")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathcal",staticStyle:{"margin-right":"0.09931em"}},[t._v("F")])])])]),t._v("  和  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",{attrs:{mathvariant:"script"}},[t._v("H")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\mathcal H")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathcal",staticStyle:{"margin-right":"0.00965em"}},[t._v("H")])])])])]),t._v(" "),s("h3",{attrs:{id:"_3-3-训练阶段三"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-训练阶段三"}},[t._v("#")]),t._v(" 3.3 训练阶段三")]),t._v(" "),s("p",[t._v("接下来，需要把前两阶段训练好的几何结构grid mesh保存为OBJ，以及将Encoder部分(  "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",{attrs:{mathvariant:"script"}},[t._v("F")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\mathcal F")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathcal",staticStyle:{"margin-right":"0.09931em"}},[t._v("F")])])])]),t._v("  )输出的特征向量烘培到纹理图像中。")]),t._v(" "),s("p",[t._v("（1）将训练图像完全无法“看到”的face删除。通过下表，可以看出95%以上的grid，都要被删除")]),t._v(" "),s("p",[s("img",{attrs:{src:"zhimg.com/v2-6c44f801946d40d182136d60e6ddf3ad_r.jpg",alt:""}})]),t._v(" "),s("p",[t._v("（2）将剩余的每个face的顶点数据保存到OBJ中")]),t._v(" "),s("p",[t._v("（3）给每个face（四边形）分配一个分辨率为KxK的纹理区域（texture patch），因为face的顶点坐标是已知的，那么很容易计算出texture patch上每个像素对应的空间坐标，从而根据公式（4）获得相应的特征值。这样，就完成了烘培特征纹理的工作。")]),t._v(" "),s("p",[s("img",{attrs:{src:"zhimg.com/v2-77a7d55a4223dd2d175743ce5d87b525_r.jpg",alt:""}})]),t._v(" "),s("p",[t._v("（4）保存Decoder网络的权重")]),t._v(" "),s("h3",{attrs:{id:"_3-4-抗锯齿"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-抗锯齿"}},[t._v("#")]),t._v(" 3.4 抗锯齿")]),t._v(" "),s("p",[t._v("略")]),t._v(" "),s("h2",{attrs:{id:"_4-优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-优缺点"}},[t._v("#")]),t._v(" 4. 优缺点")]),t._v(" "),s("p",[s("strong",[t._v("优点：")])]),t._v(" "),s("ol",[s("li",[t._v("第一次实现了移动设备上的实时神经渲染")]),t._v(" "),s("li",[t._v("通过引入OBJ和TEXTURE，使得很多传统图形优化技术，可以直接使用。例如对大型场景的LOD，九宫格加载等")])]),t._v(" "),s("p",[s("strong",[t._v("缺点：")])]),t._v(" "),s("ol",[s("li",[t._v("仅通过一个采样点来代表整条光线路径，当需要表现出半透明或者高光等复杂光学现象时，需要较高的模型精度以及准确的材质模型，mobileNeRF并不擅长解决后两者。")]),t._v(" "),s("li",[t._v("通过固定分辨率的网格，来学习表达整个空间，会导致两个问题：（1）细节分辨率不够（2）大块平坦区域的mesh过于碎片化，顶点数过多。")]),t._v(" "),s("li",[t._v("为了降低最终的obj顶点数量，在第三个阶段，删除了对于训练图像完全不可见的face。这会要求采集训练图像时，需要覆盖几乎所有渲染阶段需要的相机角度。否则会在渲染画面中出现大量的空洞。另外，这种删除策略也会损失模型的“泛化能力”，表现是在相邻相机角度切换时，出现“画面突变”")]),t._v(" "),s("li",[t._v("训练时间太长：8卡A100，训练24小时左右")])])])}),[],!1,null,null,null);a.default=e.exports}}]);