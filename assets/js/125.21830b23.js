(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{798:function(t,s,n){"use strict";n.r(s);var a=n(4),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"先创建设置："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#先创建设置："}},[t._v("#")]),t._v(" 先创建设置：")]),t._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Prepare the configuration")]),t._v("\nconfig "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" webrtc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Configuration"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ICEServers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("webrtc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ICEServer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            URLs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stun:stun.l.google.com:19302"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br")])]),n("h2",{attrs:{id:"然后创建peerconnection："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#然后创建peerconnection："}},[t._v("#")]),t._v(" 然后创建PeerConnection：")]),t._v(" "),n("p",[t._v("核心是"),n("code",[t._v("NewPeerConnection")]),t._v("，用"),n("code",[t._v("webrtc.NewPeerConnection")]),t._v("创建默认配置，或者先配置API再用api里的"),n("code",[t._v("api.NewPeerConnection")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create a new RTCPeerConnection")]),t._v("\npeerConnection"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewPeerConnection")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("panic")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" cErr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" peerConnection"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Close")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" cErr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cannot close peerConnection: %v\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cErr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br")])]),n("h2",{attrs:{id:"配置接受传入流类型，视频or音频："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置接受传入流类型，视频or音频："}},[t._v("#")]),t._v(" 配置接受传入流类型，视频or音频：")]),t._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Allow us to receive 1 audio track, and 1 video track")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" peerConnection"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddTransceiverFromKind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("webrtc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RTPCodecTypeAudio"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("panic")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" peerConnection"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddTransceiverFromKind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("webrtc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RTPCodecTypeVideo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("panic")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])]),n("p",[t._v("这里Add的Transceiver意为“收发器”，是接收器Receiver和发送器Sender的组合，它指示了这个PeerConnection可以收发什么样的流（编码格式）和方向（only收？only发？既收又发？不收不发？）。")]),t._v(" "),n("p",[t._v("WebRTC标准API规定的"),n("code",[t._v("addTransceiver")]),t._v("差不多长这样：")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" rtcTransceiver "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RTCPeerConnection"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addTransceiver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trackOrKind，init"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[t._v("其中"),n("code",[t._v("init")]),t._v("参数就用来指定上面说的编码格式和收发方向；"),n("code",[t._v("trackOrKind")]),t._v("是表示要用什么参数生成Transceiver，可以是track或者kind（kind只有两种，audio或者video）。")]),t._v(" "),n("p",[t._v("在pion的实现中，因为go没有重载，所以"),n("code",[t._v("addTransceiver")]),t._v("按照上面说的功能分成两个函数"),n("code",[t._v("AddTransceiverFromKind")]),t._v("和"),n("code",[t._v("AddTransceiverFromTrack")]),t._v("：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("AddTransceiverFromKind")]),t._v("主要是用来做接收功能的：\n"),n("ul",[n("li",[t._v("kind是可接受的输入类型，必须指定")]),t._v(" "),n("li",[t._v("如果收发方向为"),n("code",[t._v("recvonly")]),t._v("或"),n("code",[t._v("sendrecv")]),t._v("，那就先根据设置好的"),n("code",[t._v("MediaEngine")]),t._v("（"),n("code",[t._v("MediaEngine")]),t._v("的解读见"),n("RouterLink",{attrs:{to:"/WebRTC/rtp-forwarder.html"}},[t._v("《用实例学习pion - "),n("code",[t._v("rtp-forwarder")]),t._v("》")]),t._v("）创建Receiver")],1),t._v(" "),n("li",[t._v("如果收发方向为"),n("code",[t._v("sendonly")]),t._v("或"),n("code",[t._v("sendrecv")]),t._v("，由于并没有可以发的东西。所以直接是根据kind指定的类型创建发随机数据的track然后调用"),n("code",[t._v("AddTransceiverFromTrack")]),t._v("创建Sender")])])]),t._v(" "),n("li",[n("code",[t._v("AddTransceiverFromTrack")]),t._v("主要是用来做发送功能的\n"),n("ul",[n("li",[t._v("track是当有连接进来的时候给他发送什么东西")]),t._v(" "),n("li",[t._v("它不支持"),n("code",[t._v("recvonly")]),t._v("，显然你都指定了track肯定是要发东西")]),t._v(" "),n("li",[t._v("如果收发方向为"),n("code",[t._v("sendonly")]),t._v("，那就直接创建Sender")]),t._v(" "),n("li",[t._v("如果收发方向为"),n("code",[t._v("sendrecv")]),t._v("，那就用track的kind创建Receiver，你的track是发视频的那收也是收视频，音频同理")])])])]),t._v(" "),n("h2",{attrs:{id:"然后设置当有track传入的时候进行的操作："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#然后设置当有track传入的时候进行的操作："}},[t._v("#")]),t._v(" 然后设置当有track传入的时候进行的操作：")]),t._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[t._v("peerConnection"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("OnTrack")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("track "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("webrtc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TrackRemote"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("webrtc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RTPReceiver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("p",[t._v("这里就可以从"),n("code",[t._v("track")]),t._v("里面读数据然后进行各自操作，然后这个"),n("code",[t._v("receiver")]),t._v("就是"),n("code",[t._v("track")]),t._v("所绑定的Receiver，也是上面说的"),n("code",[t._v("AddTransceiverFromKind")]),t._v("和"),n("code",[t._v("AddTransceiverFromTrack")]),t._v("添加的Transceiver里的Receiver。关于"),n("code",[t._v("TrackRemote")]),t._v("，更多解析请看"),n("RouterLink",{attrs:{to:"/WebRTC/TrackRemote.html"}},[t._v("pion中的"),n("code",[t._v("TrackRemote")])]),t._v("。")],1),t._v(" "),n("h2",{attrs:{id:"等待连接传入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#等待连接传入"}},[t._v("#")]),t._v(" 等待连接传入")]),t._v(" "),n("p",[t._v("目前为止读到的几个pion案例里都写的是只能连一次的等待方式，注释里写了正确的方法应该是用"),n("code",[t._v("OnICECandidate")]),t._v("，等多看点案例再补全。")]),t._v(" "),n("h2",{attrs:{id:"相关案例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#相关案例"}},[t._v("#")]),t._v(" 相关案例")]),t._v(" "),n("ul",[n("li",[n("RouterLink",{attrs:{to:"/WebRTC/gocv-receive.html"}},[t._v("《用实例学习pion - "),n("code",[t._v("gocv-receive")]),t._v("》")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/WebRTC/rtp-forwarder.html"}},[t._v("《用实例学习pion - "),n("code",[t._v("rtp-forwarder")]),t._v("》")])],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);