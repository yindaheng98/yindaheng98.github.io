(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{742:function(v,_,e){"use strict";e.r(_);var t=e(4),o=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("p",[v._v("CNI(Container Network Interface, 容器网络接口)是K8S定义的进行容器网络配置的接口标准。CNI插件是指符合CNI标准的网络配置工具。")]),v._v(" "),e("p",[v._v("CNI插件是K8S插件系统中数量最多、实现花样最多的插件类型。")]),v._v(" "),e("h2",{attrs:{id:"k8s如何调用cni插件？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#k8s如何调用cni插件？"}},[v._v("#")]),v._v(" K8S如何调用CNI插件？")]),v._v(" "),e("h3",{attrs:{id:"用户配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用户配置"}},[v._v("#")]),v._v(" 用户配置")]),v._v(" "),e("ol",[e("li",[v._v("在节点的"),e("code",[v._v("/etc/cni/net.d/xxnet.conf")]),v._v("中写上CNI插件的配置信息")]),v._v(" "),e("li",[v._v("将CNI插件配置工具（可执行文件）放入节点的"),e("code",[v._v("/opt/cni/bin/xxnet")]),v._v("中")]),v._v(" "),e("li",[v._v("启动CNI插件后台程序")])]),v._v(" "),e("h3",{attrs:{id:"k8s调用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#k8s调用"}},[v._v("#")]),v._v(" K8S调用")]),v._v(" "),e("ol",[e("li",[v._v("用户创建了Pod，这个Pod被K8S调度到了当前节点")]),v._v(" "),e("li",[v._v("Kubelet创建了Pod中要求的容器")]),v._v(" "),e("li",[v._v("Kubelet按照"),e("code",[v._v("/etc/cni/net.d/xxnet.conf")]),v._v("中的配置信息和CNI标准定义的方式执行CNI插件（输入“你应该把网络配置成什么样”）")]),v._v(" "),e("li",[v._v("CNI插件执行网络配置过程")])]),v._v(" "),e("h2",{attrs:{id:"cni插件如何运行？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cni插件如何运行？"}},[v._v("#")]),v._v(" CNI插件如何运行？")]),v._v(" "),e("h3",{attrs:{id:"给pod-插网线-：cni插件配置工具配置pod的网卡和ip"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#给pod-插网线-：cni插件配置工具配置pod的网卡和ip"}},[v._v("#")]),v._v(" 给Pod“插网线”：CNI插件配置工具配置Pod的网卡和IP")]),v._v(" "),e("ol",[e("li",[v._v("创建虚拟网卡\n"),e("ul",[e("li",[v._v("通常使用veth-pair，一端在Pod的Network namespace中，一端在根namespace中（相关介绍见"),e("RouterLink",{attrs:{to:"/Docker/namespaces/Network.html"}},[v._v("Network namespace")]),v._v("）")],1)])]),v._v(" "),e("li",[v._v("给Pod分配集群中唯一的IP地址\n"),e("ul",[e("li",[v._v("通常把Pod网段按Node分段，每个Pod再从Node网段中分配IP")])])]),v._v(" "),e("li",[v._v("给Pod配置上分配的IP和路由\n"),e("ul",[e("li",[v._v("将分配到的IP配置到Pod的网卡上")]),v._v(" "),e("li",[v._v("再Pod的网卡上配置集群网段的路由表")]),v._v(" "),e("li",[v._v("Node上Pod的对端网卡配置IP地址路由表")])])]),v._v(" "),e("li",[v._v("将Pod和分配的IP反馈给K8S")])]),v._v(" "),e("h3",{attrs:{id:"给pod-连网络-：cni插件后台程序维护集群内部的转发规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#给pod-连网络-：cni插件后台程序维护集群内部的转发规则"}},[v._v("#")]),v._v(" 给Pod“连网络”：CNI插件后台程序维护集群内部的转发规则")]),v._v(" "),e("ol",[e("li",[v._v("CNI Daemon进程获取到集群中所有的Pod和Node的IP地址\n"),e("ul",[e("li",[v._v("监听K8S APIServer获取Pod和Node的网络信息")])])]),v._v(" "),e("li",[v._v("CNI Daemon进程配置网络打通Pod间的IP访问\n"),e("ul",[e("li",[v._v("创建到所有Node的通道，有三种方法：\n"),e("ul",[e("li",[v._v("靠隧道进行通信，即控制Node组建Overlay\n"),e("ul",[e("li",[v._v("所有流量都通过隧道到达其他Node")]),v._v(" "),e("li",[v._v("不依赖底层网络")]),v._v(" "),e("li",[v._v("协议转换很耗时，效率低")])])]),v._v(" "),e("li",[v._v("靠路由进行通信（例：VPC路由表）\n"),e("ul",[e("li",[v._v("CNI插件直接控制网络中的路由器写路由表实现Node间的连通")]),v._v(" "),e("li",[v._v("部分依赖底层网络，要求CNI插件有直接控制网络中路由器的能力")]),v._v(" "),e("li",[v._v("标准的TCP/IP协议实现，速度中等")])])]),v._v(" "),e("li",[v._v("靠底层网络进行通信（例：BGP路由）\n"),e("ul",[e("li",[v._v("CNI插件直接控制底层网络的转发规则实现Node间的连通")]),v._v(" "),e("li",[v._v("完全依赖底层网络")]),v._v(" "),e("li",[v._v("底层协议甚至可以是定制的协议，效率最高")])])])])]),v._v(" "),e("li",[v._v("根据上一步获取的Pod和Node的网络信息将Pod的IP与通道相关联\n"),e("ul",[e("li",[v._v("Linux路由（最常见）、FDB转发表、OVS流表等")])])])])])])])}),[],!1,null,null,null);_.default=o.exports}}]);